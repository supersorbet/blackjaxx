/*! For license information please see main.63741d0b.chunk.js.LICENSE.txt */
(this.webpackJsonpblackjack=this.webpackJsonpblackjack||[]).push([[0],{11:function(e,t,a){e.exports=a(19)},16:function(e,t,a){},18:function(e,t,a){},19:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),s=a(6),i=a.n(s),l=(a(16),a(1)),u=a(7),o=a(8),c=a(2),f=a(10),d=a(9),p=a(4),y=a(3),m=a.n(y);function g(){g=function(){return e};var e={},t=Object.prototype,a=t.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},r="function"==typeof Symbol?Symbol:{},s=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",l=r.toStringTag||"@@toStringTag";function u(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch($){u=function(e,t,a){return e[t]=a}}function o(e,t,a,r){var s=t&&t.prototype instanceof d?t:d,i=Object.create(s.prototype),l=new h(r||[]);return n(i,"_invoke",{value:V(e,a,l)}),i}function c(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch($){return{type:"throw",arg:$}}}e.wrap=o;var f={};function d(){}function p(){}function y(){}var m={};u(m,s,(function(){return this}));var b=Object.getPrototypeOf,_=b&&b(b(P([])));_&&_!==t&&a.call(_,s)&&(m=_);var T=y.prototype=d.prototype=Object.create(m);function D(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){var r;n(this,"_invoke",{value:function(n,s){function i(){return new t((function(r,i){!function n(r,s,i,l){var u=c(e[r],e,s);if("throw"!==u.type){var o=u.arg,f=o.value;return f&&"object"==typeof f&&a.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,i,l)}),(function(e){n("throw",e,i,l)})):t.resolve(f).then((function(e){o.value=e,i(o)}),(function(e){return n("throw",e,i,l)}))}l(u.arg)}(n,s,r,i)}))}return r=r?r.then(i,i):i()}})}function V(e,t,a){var n="suspendedStart";return function(r,s){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===r)throw s;return C()}for(a.method=r,a.arg=s;;){var i=a.delegate;if(i){var l=k(i,a);if(l){if(l===f)continue;return l}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if("suspendedStart"===n)throw n="completed",a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);n="executing";var u=c(e,t,a);if("normal"===u.type){if(n=a.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:a.done}}"throw"===u.type&&(n="completed",a.method="throw",a.arg=u.arg)}}}function k(e,t){var a=t.method,n=e.iterator[a];if(void 0===n)return t.delegate=null,"throw"===a&&e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method)||"return"!==a&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+a+"' method")),f;var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,f;var s=r.arg;return s?s.done?(t[e.resultName]=s.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,f):s:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function v(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function I(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function h(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(v,this),this.reset(!0)}function P(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(a.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:C}}function C(){return{value:void 0,done:!0}}return p.prototype=y,n(T,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:p,configurable:!0}),p.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(T),e},e.awrap=function(e){return{__await:e}},D(S.prototype),u(S.prototype,i,(function(){return this})),e.AsyncIterator=S,e.async=function(t,a,n,r,s){void 0===s&&(s=Promise);var i=new S(o(t,a,n,r),s);return e.isGeneratorFunction(a)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},D(T),u(T,l,"Generator"),u(T,s,(function(){return this})),u(T,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),a=[];for(var n in t)a.push(n);return a.reverse(),function e(){for(;a.length;){var n=a.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},e.values=P,h.prototype={constructor:h,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!e)for(var t in this)"t"===t.charAt(0)&&a.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(a,n){return i.type="throw",i.arg=e,t.next=a,n&&(t.method="next",t.arg=void 0),!!n}for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r],i=s.completion;if("root"===s.tryLoc)return n("end");if(s.tryLoc<=this.prev){var l=a.call(s,"catchLoc"),u=a.call(s,"finallyLoc");if(l&&u){if(this.prev<s.catchLoc)return n(s.catchLoc,!0);if(this.prev<s.finallyLoc)return n(s.finallyLoc)}else if(l){if(this.prev<s.catchLoc)return n(s.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return n(s.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var s=r;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,f):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),I(a),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var n=a.completion;if("throw"===n.type){var r=n.arg;I(a)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,a){return this.delegate={iterator:P(e),resultName:t,nextLoc:a},"next"===this.method&&(this.arg=void 0),f}},e}var b=function(){return new Promise((function(e,t){window.addEventListener("load",Object(l.a)(g().mark((function a(){var n,r,s,i;return g().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(!window.ethereum){a.next=15;break}return n=new m.a(window.ethereum),a.prev=2,a.next=5,window.ethereum.enable();case 5:return a.next=7,n.eth.net.getId().then(function(){var e=Object(l.a)(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(5===t){e.next=3;break}return e.next=3,window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:5}]});case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}());case 7:e(n),a.next=13;break;case 10:a.prev=10,a.t0=a.catch(2),t(a.t0);case 13:a.next=16;break;case 15:window.web3?(r=window.web3,console.log("Injected web3 detected."),e(r)):(s=new m.a.providers.HttpProvider("https://goerli.infura.io/v3/"),i=new m.a(s),console.log("No web3 instance injected, using Local web3."),e(i));case 16:case"end":return a.stop()}}),a,null,[[2,10]])}))))}))};a(18);function _(){_=function(){return e};var e={},t=Object.prototype,a=t.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},r="function"==typeof Symbol?Symbol:{},s=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",l=r.toStringTag||"@@toStringTag";function u(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch($){u=function(e,t,a){return e[t]=a}}function o(e,t,a,r){var s=t&&t.prototype instanceof d?t:d,i=Object.create(s.prototype),l=new h(r||[]);return n(i,"_invoke",{value:V(e,a,l)}),i}function c(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch($){return{type:"throw",arg:$}}}e.wrap=o;var f={};function d(){}function p(){}function y(){}var m={};u(m,s,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(P([])));b&&b!==t&&a.call(b,s)&&(m=b);var T=y.prototype=d.prototype=Object.create(m);function D(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){var r;n(this,"_invoke",{value:function(n,s){function i(){return new t((function(r,i){!function n(r,s,i,l){var u=c(e[r],e,s);if("throw"!==u.type){var o=u.arg,f=o.value;return f&&"object"==typeof f&&a.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,i,l)}),(function(e){n("throw",e,i,l)})):t.resolve(f).then((function(e){o.value=e,i(o)}),(function(e){return n("throw",e,i,l)}))}l(u.arg)}(n,s,r,i)}))}return r=r?r.then(i,i):i()}})}function V(e,t,a){var n="suspendedStart";return function(r,s){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===r)throw s;return C()}for(a.method=r,a.arg=s;;){var i=a.delegate;if(i){var l=k(i,a);if(l){if(l===f)continue;return l}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if("suspendedStart"===n)throw n="completed",a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);n="executing";var u=c(e,t,a);if("normal"===u.type){if(n=a.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:a.done}}"throw"===u.type&&(n="completed",a.method="throw",a.arg=u.arg)}}}function k(e,t){var a=t.method,n=e.iterator[a];if(void 0===n)return t.delegate=null,"throw"===a&&e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method)||"return"!==a&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+a+"' method")),f;var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,f;var s=r.arg;return s?s.done?(t[e.resultName]=s.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,f):s:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function v(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function I(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function h(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(v,this),this.reset(!0)}function P(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(a.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:C}}function C(){return{value:void 0,done:!0}}return p.prototype=y,n(T,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:p,configurable:!0}),p.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(T),e},e.awrap=function(e){return{__await:e}},D(S.prototype),u(S.prototype,i,(function(){return this})),e.AsyncIterator=S,e.async=function(t,a,n,r,s){void 0===s&&(s=Promise);var i=new S(o(t,a,n,r),s);return e.isGeneratorFunction(a)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},D(T),u(T,l,"Generator"),u(T,s,(function(){return this})),u(T,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),a=[];for(var n in t)a.push(n);return a.reverse(),function e(){for(;a.length;){var n=a.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},e.values=P,h.prototype={constructor:h,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!e)for(var t in this)"t"===t.charAt(0)&&a.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(a,n){return i.type="throw",i.arg=e,t.next=a,n&&(t.method="next",t.arg=void 0),!!n}for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r],i=s.completion;if("root"===s.tryLoc)return n("end");if(s.tryLoc<=this.prev){var l=a.call(s,"catchLoc"),u=a.call(s,"finallyLoc");if(l&&u){if(this.prev<s.catchLoc)return n(s.catchLoc,!0);if(this.prev<s.finallyLoc)return n(s.finallyLoc)}else if(l){if(this.prev<s.catchLoc)return n(s.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return n(s.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var s=r;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,f):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),I(a),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var n=a.completion;if("throw"===n.type){var r=n.arg;I(a)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,a){return this.delegate={iterator:P(e),resultName:t,nextLoc:a},"next"===this.method&&(this.arg=void 0),f}},e}var T=function(e){Object(f.a)(a,e);var t=Object(d.a)(a);function a(){var e;return Object(u.a)(this,a),(e=t.call(this)).componentDidMount=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,b();case 3:return a=t.sent,n=a.currentProvider.selectedAddress,t.next=7,a.eth.net.getId();case 7:return r=t.sent,s=p.networks[r],i=new a.eth.Contract(p.abi,s&&s.address),t.next=12,i.methods.getGameState().call();case 12:l=t.sent,e.setState({web3:a,playerAccount:n,game:i,maxBet:l.gameMaxBet}),t.next=20;break;case 16:t.prev=16,t.t0=t.catch(0),alert("Failed to load web3, accounts, or contract. Check console for details."),console.error(t.t0);case 20:case"end":return t.stop()}}),t,null,[[0,16]])}))),e.newRound=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.state,n=a.playerAccount,r=a.game,t.next=3,r.methods.newRound().send({from:n,value:e.state.betSize,gas:45e4});case 3:return t.next=5,r.methods.getDealerState().call();case 5:return s=t.sent,t.next=8,r.methods.getPlayerState().call();case 8:return i=t.sent,t.next=11,r.methods.getGameState().call();case 11:l=t.sent,e.setState({stage:l.stage,maxBet:l.gameMaxBet,dealerHand:s.hand,playerHand:i.hand,splitHand:i.splitHand,dealerScore:s.score,handScore:i.handScore,splitHandScore:i.splitHandScore,bet:i.bet,splitBet:i.splitBet,doubleDownBet:i.doubleDownBet,splitDoubleDownBet:i.splitDoubleDownBet});case 13:case"end":return t.stop()}}),t)}))),e.split=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.state,n=a.playerAccount,r=a.game,t.next=3,r.methods.split().send({from:n,value:e.state.betSize,gas:45e4});case 3:return t.next=5,r.methods.getDealerState().call();case 5:return s=t.sent,t.next=8,r.methods.getPlayerState().call();case 8:return i=t.sent,t.next=11,r.methods.getGameState().call();case 11:l=t.sent,e.setState({stage:l.stage,maxBet:l.gameMaxBet,dealerHand:s.hand,playerHand:i.hand,splitHand:i.splitHand,dealerScore:s.score,handScore:i.handScore,splitHandScore:i.splitHandScore,bet:i.bet,splitBet:i.splitBet,doubleDownBet:i.doubleDownBet,splitDoubleDownBet:i.splitDoubleDownBet});case 13:case"end":return t.stop()}}),t)}))),e.doubleDown=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.state,n=a.playerAccount,r=a.game,t.next=3,r.methods.doubleDown().send({from:n,value:e.state.betSize,gas:45e4});case 3:return t.next=5,r.methods.getDealerState().call();case 5:return s=t.sent,t.next=8,r.methods.getPlayerState().call();case 8:return i=t.sent,t.next=11,r.methods.getGameState().call();case 11:l=t.sent,e.setState({stage:l.stage,maxBet:l.gameMaxBet,dealerHand:s.hand,playerHand:i.hand,splitHand:i.splitHand,dealerScore:s.score,handScore:i.handScore,splitHandScore:i.splitHandScore,bet:i.bet,splitBet:i.splitBet,doubleDownBet:i.doubleDownBet,splitDoubleDownBet:i.splitDoubleDownBet});case 13:case"end":return t.stop()}}),t)}))),e.hit=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.state,n=a.playerAccount,r=a.game,t.next=3,r.methods.hit().send({from:n,gas:45e4});case 3:return t.next=5,r.methods.getDealerState().call();case 5:return s=t.sent,t.next=8,r.methods.getPlayerState().call();case 8:return i=t.sent,t.next=11,r.methods.getGameState().call();case 11:l=t.sent,e.setState({stage:l.stage,maxBet:l.gameMaxBet,dealerHand:s.hand,playerHand:i.hand,splitHand:i.splitHand,dealerScore:s.score,handScore:i.handScore,splitHandScore:i.splitHandScore,bet:i.bet,splitBet:i.splitBet,doubleDownBet:i.doubleDownBet,splitDoubleDownBet:i.splitDoubleDownBet});case 13:case"end":return t.stop()}}),t)}))),e.stand=Object(l.a)(_().mark((function t(){var a,n,r,s,i,l;return _().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.state,n=a.playerAccount,r=a.game,t.next=3,r.methods.stand().send({from:n,gas:45e4});case 3:return t.next=5,r.methods.getDealerState().call();case 5:return s=t.sent,t.next=8,r.methods.getPlayerState().call();case 8:return i=t.sent,t.next=11,r.methods.getGameState().call();case 11:l=t.sent,e.setState({stage:l.stage,maxBet:l.gameMaxBet,dealerHand:s.hand,playerHand:i.hand,splitHand:i.splitHand,dealerScore:s.score,handScore:i.handScore,splitHandScore:i.splitHandScore,bet:i.bet,splitBet:i.splitBet,doubleDownBet:i.doubleDownBet,splitDoubleDownBet:i.splitDoubleDownBet});case 13:case"end":return t.stop()}}),t)}))),e.state={betSize:"",web3:null,playerAccount:null,game:null,dealerHand:[],playerHand:[],splitHand:[]},e.onChange=e.onChange.bind(Object(c.a)(e)),e}return Object(o.a)(a,[{key:"onChange",value:function(e){(""===e.target.value||/^[0-9\b]+$/.test(e.target.value))&&this.setState({betSize:e.target.value})}},{key:"render",value:function(){var e,t=["A","2","3","4","5","6","7","8","9","T","J","Q","K"],a=[11,2,3,4,5,6,7,8,9,10,10,10,10],n=[String.fromCharCode(9827),String.fromCharCode(9830),String.fromCharCode(9829),String.fromCharCode(9824)];2===this.state.playerHand.length&&0===this.state.splitHand.length&&a[this.state.playerHand[0]%13]===a[this.state.playerHand[1]%13]&&(e=r.a.createElement("button",{onClick:this.split.bind(this)},"Split"));var s,i,l=this.state.splitHand.map((function(e,a){return r.a.createElement("td",{align:"center",border:"20px",key:a}," ",t[e%13],n[e%4]," ")})),u=this.state.splitHand.length>0;if(this.state.splitHandScore>21)var o=" - Busted!";u&&(s=r.a.createElement("td",null,r.a.createElement("i",null,"Split Hand Score: ",this.state.splitHandScore,r.a.createElement("b",null,o),"\xa0\xa0\xa0\xa0")),i=r.a.createElement("td",null,r.a.createElement("i",null,"Bet: ",parseInt(this.state.splitBet)+parseInt(this.state.splitDoubleDownBet)," wei\xa0\xa0\xa0\xa0")));var c,f,d,p,y,m,g=2===this.state.playerHand.length||2===this.state.splitHand.length;if(g&&"1"===this.state.stage&&(c=r.a.createElement("button",{onClick:this.doubleDown.bind(this)},"Double Down")),g&&"2"===this.state.stage&&(f=r.a.createElement("button",{onClick:this.doubleDown.bind(this)},"Double Down")),"1"===this.state.stage&&(d=r.a.createElement("button",{onClick:this.stand.bind(this)},"Stand")),"2"===this.state.stage&&(p=r.a.createElement("button",{onClick:this.stand.bind(this)},"Stand")),"1"===this.state.stage&&(y=r.a.createElement("button",{onClick:this.hit.bind(this)},"Hit")),"2"===this.state.stage&&(m=r.a.createElement("button",{onClick:this.hit.bind(this)},"Hit")),!this.state.web3)return r.a.createElement("div",null,"Loading Web3, accounts, and contract...");var b,_,T,D=this.state.dealerHand.map((function(e,a){return r.a.createElement("td",{align:"center",border:"20px",key:a}," ",t[e%13],n[e%4]," ")})),S=this.state.playerHand.map((function(e,a){return r.a.createElement("td",{align:"center",border:"20px",key:a}," ",t[e%13],n[e%4]," ")})),V=this.state.playerHand.length>0;if(this.state.handScore>21)var k=" - Busted!";if(this.state.dealerScore>21)var v=" - Busted!";return V&&(b=r.a.createElement("td",null,r.a.createElement("i",null,"Dealer Score: ",this.state.dealerScore,r.a.createElement("b",null,v))),_=r.a.createElement("td",null,r.a.createElement("i",null,"Hand Score: ",this.state.handScore,r.a.createElement("b",null,k),"\xa0\xa0\xa0\xa0")),T=r.a.createElement("td",null,r.a.createElement("i",null,"Bet: ",parseInt(this.state.bet)+parseInt(this.state.doubleDownBet)," wei\xa0\xa0\xa0\xa0"))),r.a.createElement("div",{className:"App"},r.a.createElement("h1",null,"Blackjack dApp"),r.a.createElement("h3",null,"Dealer:"),r.a.createElement("table",{align:"center",style:{"font-size":"24px"}},r.a.createElement("tbody",null,r.a.createElement("tr",null,D))),r.a.createElement("table",{align:"center"},r.a.createElement("tbody",null,r.a.createElement("tr",null,b))),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("h3",null,"Your Cards:"),r.a.createElement("table",{align:"center",style:{"font-size":"24px"}},r.a.createElement("tbody",null,r.a.createElement("tr",null,S))),r.a.createElement("table",{align:"center"},r.a.createElement("tbody",null,r.a.createElement("tr",null,_,T))),d,"\xa0\xa0\xa0\xa0\xa0\xa0",y,"\xa0\xa0\xa0\xa0\xa0\xa0",c,"\xa0\xa0\xa0\xa0\xa0\xa0",e,r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("table",{align:"center",style:{"font-size":"24px"}},r.a.createElement("tbody",null,r.a.createElement("tr",null,l))),r.a.createElement("table",{align:"center"},r.a.createElement("tbody",null,r.a.createElement("tr",null,s,i))),p,"\xa0\xa0\xa0\xa0\xa0\xa0",m,"\xa0\xa0\xa0\xa0\xa0\xa0",f,r.a.createElement("br",null),r.a.createElement("br",null),"Place your bet: ",r.a.createElement("input",{value:this.state.betSize,onChange:this.onChange})," wei \xa0\xa0\xa0\xa0\xa0\xa0",r.a.createElement("button",{onClick:this.newRound.bind(this)},"Deal"),r.a.createElement("br",null),r.a.createElement("div",null," Maximum bet: ",this.state.maxBet," wei"),r.a.createElement("br",null),r.a.createElement("i",null,"(connected account: ",this.state.playerAccount,")"),r.a.createElement("p",null),r.a.createElement("hr",{style:{height:2}}),r.a.createElement("p",null,"Blackjack Pays 3:2 ",String.fromCharCode(9827)," Dealer Stands on Soft 17 ",String.fromCharCode(9829)," No Insurance ",String.fromCharCode(9830)," Double After Split ",String.fromCharCode(9824)," No Resplit"))}}]),a}(n.Component),D=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function S(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var a=e.installing;null!=a&&(a.onstatechange=function(){"installed"===a.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}i.a.render(r.a.createElement(T,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat("","/service-worker.js");D?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(a){var n=a.headers.get("content-type");404===a.status||null!=n&&-1===n.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):S(e,t)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA")}))):S(t,e)}))}}()},4:function(e){e.exports=JSON.parse('{"contractName":"Blackjack","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"round","type":"uint64"},{"indexed":false,"internalType":"uint8","name":"cardValue","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"score","type":"uint8"}],"name":"CardDrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"LogNewProvableQuery","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"cards","type":"string"}],"name":"LogNewWolframRandomDraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"round","type":"uint64"},{"indexed":false,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"bet","type":"uint256"}],"name":"NewRound","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"playerHand","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"playerSplitHand","type":"uint256[]"}],"name":"PlayerHand","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"round","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"payout","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"playerScore","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"dealerScore","type":"uint8"}],"name":"Result","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"round","type":"uint64"},{"indexed":false,"internalType":"enum Blackjack.Stage","name":"newStage","type":"uint8"}],"name":"StageChanged","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[{"internalType":"bytes32","name":"_myid","type":"bytes32"},{"internalType":"string","name":"_result","type":"string"}],"name":"__callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_myid","type":"bytes32"},{"internalType":"string","name":"_result","type":"string"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"__callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"},{"inputs":[],"name":"kill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"newRound","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"split","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"doubleDown","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"hit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stand","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDealerState","outputs":[{"internalType":"uint256[]","name":"hand","type":"uint256[]"},{"internalType":"uint256","name":"score","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPlayerState","outputs":[{"internalType":"uint256[]","name":"hand","type":"uint256[]"},{"internalType":"uint256[]","name":"splitHand","type":"uint256[]"},{"internalType":"uint256","name":"handScore","type":"uint256"},{"internalType":"uint256","name":"splitHandScore","type":"uint256"},{"internalType":"uint256","name":"bet","type":"uint256"},{"internalType":"uint256","name":"splitBet","type":"uint256"},{"internalType":"uint256","name":"doubleDownBet","type":"uint256"},{"internalType":"uint256","name":"splitDoubleDownBet","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGameState","outputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint256","name":"gameMaxBet","type":"uint256"},{"internalType":"uint64","name":"round","type":"uint64"},{"internalType":"enum Blackjack.Stage","name":"stage","type":"uint8"}],"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.6.12+commit.27d51765\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"round\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint8\\",\\"name\\":\\"cardValue\\",\\"type\\":\\"uint8\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint8\\",\\"name\\":\\"score\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"CardDrawn\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"string\\",\\"name\\":\\"description\\",\\"type\\":\\"string\\"}],\\"name\\":\\"LogNewProvableQuery\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"string\\",\\"name\\":\\"cards\\",\\"type\\":\\"string\\"}],\\"name\\":\\"LogNewWolframRandomDraw\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"round\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"player\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"bet\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"NewRound\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"playerHand\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"playerSplitHand\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"PlayerHand\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Received\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"round\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"payout\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint8\\",\\"name\\":\\"playerScore\\",\\"type\\":\\"uint8\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint8\\",\\"name\\":\\"dealerScore\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"Result\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"round\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"enum Blackjack.Stage\\",\\"name\\":\\"newStage\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"StageChanged\\",\\"type\\":\\"event\\"},{\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"fallback\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_myid\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"_result\\",\\"type\\":\\"string\\"}],\\"name\\":\\"__callback\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_myid\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"_result\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"__callback\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"doubleDown\\",\\"outputs\\":[],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getDealerState\\",\\"outputs\\":[{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"hand\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"score\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getGameState\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameId\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"startTime\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gameMaxBet\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"round\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"enum Blackjack.Stage\\",\\"name\\":\\"stage\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getPlayerState\\",\\"outputs\\":[{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"hand\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"splitHand\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"handScore\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"splitHandScore\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"bet\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"splitBet\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"doubleDownBet\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"splitDoubleDownBet\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"hit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"kill\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"newRound\\",\\"outputs\\":[],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"split\\",\\"outputs\\":[],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"stand\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"stateMutability\\":\\"payable\\",\\"type\\":\\"receive\\"}],\\"devdoc\\":{\\"author\\":\\"Clark Henry\\",\\"events\\":{\\"StageChanged(uint256,uint64,uint8)\\":{\\"details\\":\\"Events\\"}},\\"kind\\":\\"dev\\",\\"methods\\":{\\"__callback(bytes32,string)\\":{\\"details\\":\\"The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings.\\"},\\"constructor\\":{\\"details\\":\\"Functionsseed should not be based on timestamp. This is a security risk and placeholder for now\\"},\\"doubleDown()\\":{\\"details\\":\\"is this vulnerable to OOG leaking drawn card info?[Module 9, Lesson 3] Preventing integer overflow with SafeMath\\"},\\"getDealerState()\\":{\\"returns\\":{\\"hand\\":\\"The dealer\'s hand\\"}},\\"getGameState()\\":{\\"details\\":\\"Also add bet (and original) to return\\",\\"returns\\":{\\"gameId\\":\\"ID for the current Blackjack game\\",\\"gameMaxBet\\":\\"Max bet allowed to be placed for new game\\",\\"round\\":\\"Number of round of Blackjack game played\\",\\"stage\\":\\"Stage of the Blackjack game\\",\\"startTime\\":\\"Time the current Blackjack game began\\"}},\\"getPlayerState()\\":{\\"returns\\":{\\"bet\\":\\"Original bet at start of hand\\",\\"hand\\":\\"The player\'s primary hand\\",\\"handScore\\":\\"Evaluated score for hand\\",\\"splitHand\\":\\"The player\'s split hand, if any\\",\\"splitHandScore\\":\\"Evaluated score for split hand\\"}},\\"hit()\\":{\\"details\\":\\"is this vulnerable to OOG leaking drawn card info?\\"},\\"kill()\\":{\\"details\\":\\"[Module 10, Lesson 1] Action restriction on critical function[Module 10, Lesson 1] Mortality[Library used] Ownable library from OpenZeppelin is imported and used here.\\"},\\"newRound()\\":{\\"details\\":\\"[Module 10, Lesson 1] Circuit breakers implemented hereseed should not be based on timestamp. This is a security risk and placeholder for nowPlan to split this into multiple functions such that placing bet is atomic before proceeding\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"split()\\":{\\"details\\":\\"not working correctly on last check - the require for bet size was reverting\\"},\\"stand()\\":{\\"details\\":\\"is this vulnerable to gas limit leaking drawn card info?\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"stateVariables\\":{\\"NUMBER_OF_DECKS\\":{\\"details\\":\\"State variablesIncludes some circuit breakersUpdate maxBet to be Kelly optimal\\"}},\\"title\\":\\"A blackjack game\\",\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{\\"doubleDown()\\":{\\"notice\\":\\"Double down on first two cards, taking one additional card and standing, with an opportunity to double original bet.\\"},\\"getDealerState()\\":{\\"notice\\":\\"GettersReturns the dealer\'s opened hand\\"},\\"getGameState()\\":{\\"notice\\":\\"Returns selected elements from a game\\"},\\"getPlayerState()\\":{\\"notice\\":\\"Returns all player\'s hands\\"},\\"hit()\\":{\\"notice\\":\\"Hit, taking one additional card on the current hand.\\"},\\"newRound()\\":{\\"notice\\":\\"Start a new round of Blackjack with the transferred value as the original bet.\\"},\\"split()\\":{\\"notice\\":\\"Split first two cards into two hands, drawing one additional card for each. An equivalent bet value is required.\\"},\\"stand()\\":{\\"notice\\":\\"Standing, taking no more additional cards and concluding the current hand.\\"}},\\"notice\\":\\"This contract has known security risks and should not be deployed in production\\",\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Blackjack.sol\\":\\"Blackjack\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Blackjack.sol\\":{\\"keccak256\\":\\"0x7f26e464495b437b21cf19c7c092f70d319d961ea669c679bd763e4e9dc20980\\",\\"license\\":\\"GPL-3.0-or-later\\",\\"urls\\":[\\"bzz-raw://938d67d117d56e26a9a367ec8c30ad6446fdb921c4faa00e4839557cb0ae96fe\\",\\"dweb:/ipfs/QmaoPJr8fbGp9uzEgFneNdq3SzQJMKNL5S7wi7JDD5KHHd\\"]},\\"project:/contracts/Context.sol\\":{\\"keccak256\\":\\"0xf1fd9b9e036cbecbaaa5aca5f8b709b2e6ddf1cd7227959c892559b25fc42d33\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://77dc11d442630fa9282a748d6077444856d718a8aa211a12405a434f1a1ed8a5\\",\\"dweb:/ipfs/QmZ16wNC7b7gjoFfCnFqeRAHvQRSxQchUtPAsmzadHovnH\\"]},\\"project:/contracts/Ownable.sol\\":{\\"keccak256\\":\\"0x4a76e0ca0f221c1ea4f5811592c6c872ef34fa070c6991f77cf19ddd9045ce28\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://2739153ad67e939c3b22636fd31be2fe5d7864650f293d7eceeb611ea2e2a4fa\\",\\"dweb:/ipfs/QmeiiQtcq5X4khkSb6BUsG1ySwBJMeci3mkehqKBgTTjtp\\"]},\\"project:/contracts/SafeMath.sol\\":{\\"keccak256\\":\\"0x2e1df665169560627c2a0dce65572e63de974bb41c759cdeed973cd570b4d7cf\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://0785d9859de8fd9d90e10e085500fd9aceebd71bbb018f7959b5bd4de5759878\\",\\"dweb:/ipfs/QmPC3ockcg49rizy1DJiBErQLsH4FR7W4KRfcoxEMFAgPS\\"]},\\"project:/contracts/provableAPI.sol\\":{\\"keccak256\\":\\"0xa8024a09442eed35aa426554fdd724c2f8308c9f473d4c7f5348f403d1305ff2\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://0558760d2374f021eb7215c14d48463a451d8706c07682a1a68430ece3cb60cd\\",\\"dweb:/ipfs/QmYhXiUWdVxKwkEN3kicaFbMbp4xDyrpJvXQDxX5X9a4tP\\"]}},\\"version\\":1}","bytecode":"","deployedBytecode":"0x6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063c2897b1011610059578063c2897b10146105df578063c5b1d9aa146105f6578063f2fde38b14610600578063f7654176146106515761014e565b80638da5cb5b1461052e578063a7e1f6a21461056f578063b7d0628b146105795761014e565b806341c0e1b5116100bb57806341c0e1b5146103af5780636c4941f5146103c6578063715018a6146104a457806376957756146104bb5761014e565b806327dc297e1461015d5780632ae3594a1461022f57806338bbfa50146102465761014e565b3661014e577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16101464760c861065b565b600a81905550005b34801561015a57600080fd5b50005b34801561016957600080fd5b5061022d6004803603604081101561018057600080fd5b8101908080359060200190929190803590602001906401000000008111156101a757600080fd5b8201836020820111156101b957600080fd5b803590602001918460018302840111640100000000831117156101db57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106a5565b005b34801561023b57600080fd5b506102446106ff565b005b34801561025257600080fd5b506103ad6004803603606081101561026957600080fd5b81019080803590602001909291908035906020019064010000000081111561029057600080fd5b8201836020820111156102a257600080fd5b803590602001918460018302840111640100000000831117156102c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561032757600080fd5b82018360208201111561033957600080fd5b8035906020019184600183028401116401000000008311171561035b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a38565b005b3480156103bb57600080fd5b506103c4610a5b565b005b3480156103d257600080fd5b506103db610b43565b60405180806020018060200189815260200188815260200187815260200186815260200185815260200184815260200183810383528b818151815260200191508051906020019060200280838360005b8381101561044657808201518184015260208101905061042b565b5050505090500183810382528a818151815260200191508051906020019060200280838360005b8381101561048857808201518184015260208101905061046d565b505050509050019a505050505050505050505060405180910390f35b3480156104b057600080fd5b506104b9610ca9565b005b3480156104c757600080fd5b506104d0610e2f565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156105195780820151818401526020810190506104fe565b50505050905001935050505060405180910390f35b34801561053a57600080fd5b50610543610eec565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610577610f15565b005b34801561058557600080fd5b5061058e61131c565b604051808681526020018567ffffffffffffffff1681526020018481526020018367ffffffffffffffff1681526020018260038111156105ca57fe5b81526020019550505050505060405180910390f35b3480156105eb57600080fd5b506105f46113c4565b005b6105fe6115d5565b005b34801561060c57600080fd5b5061064f6004803603602081101561062357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc0565b005b610659611dcb565b005b600061069d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061231a565b905092915050565b6106fb8282600067ffffffffffffffff811180156106c257600080fd5b506040519080825280601f01601f1916602001820160405280156106f55781602001600182028036833780820191505090505b50610a38565b5050565b6001600281600381111561070f57fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff16600381111561076a57fe5b14806107da575080600381111561077d57fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff1660038111156107d857fe5b145b61082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130fa6027913960400191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060158160070160030160009054906101000a900460ff1660ff161080156108c05750600160038111156108a157fe5b8160010160109054906101000a900460ff1660038111156108be57fe5b145b806109155750601581600c0160030160009054906101000a900460ff1660ff161080156109145750600260038111156108f557fe5b8160010160109054906101000a900460ff16600381111561091257fe5b145b5b61091e57600080fd5b6001600381111561092b57fe5b8160010160109054906101000a900460ff16600381111561094857fe5b14156109d15761095b81826007016123e0565b610967816007016125c8565b8160070160030160006101000a81548160ff021916908360ff16021790555060158160070160030160009054906101000a900460ff1660ff16106109cc576109ae8161269d565b600081600c016004018054905014156109cb576109ca8161280e565b5b5b610a33565b6109de8182600c016123e0565b6109ea81600c016125c8565b81600c0160030160006101000a81548160ff021916908360ff160217905550601581600c0160030160009054906101000a900460ff1660ff1610610a3257610a318161280e565b5b5b505050565b6000801b600460008060001b815260200190815260200160002081905550505050565b610a63612b22565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610b2b610eec565b73ffffffffffffffffffffffffffffffffffffffff16ff5b6060806000806000806000806000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600701600401805480602002602001604051908101604052809291908181526020018280548015610be357602002820191906000526020600020905b815481526020019060010190808311610bcf575b5050505050985080600c01600401805480602002602001604051908101604052809291908181526020018280548015610c3b57602002820191906000526020600020905b815481526020019060010190808311610c27575b505050505097508060070160030160009054906101000a900460ff1660ff16965080600c0160030160009054906101000a900460ff1660ff1695508060070160000154945080600c016000015493508060070160010154925080600c01600101549150509091929394959697565b610cb1612b22565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600201600401805480602002602001604051908101604052809291908181526020018280548015610ec657602002820191906000526020600020905b815481526020019060010190808311610eb2575b505050505092508060020160030160009054906101000a900460ff1660ff169150509091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016002816003811115610f2557fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff166003811115610f8057fe5b1480610ff05750806003811115610f9357fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff166003811115610fee57fe5b145b611045576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130fa6027913960400191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600281600701600401805490501480156110c95750600160038111156110aa57fe5b8160010160109054906101000a900460ff1660038111156110c757fe5b145b806111115750600281600c01600401805490501480156111105750600260038111156110f157fe5b8160010160109054906101000a900460ff16600381111561110e57fe5b145b5b611166576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131216023913960400191505060405180910390fd5b80600701600001543411156111c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806131876027913960400191505060405180910390fd5b600160038111156111d357fe5b8160010160109054906101000a900460ff1660038111156111f057fe5b141561124f5761120381826007016123e0565b611214816007016001015434612b2a565b816007016001018190555061122b816007016125c8565b8160070160030160006101000a81548160ff021916908360ff1602179055506112d5565b6002600381111561125c57fe5b8160010160109054906101000a900460ff16600381111561127957fe5b14156112d45761128c8182600c016123e0565b61129d81600c016001015434612b2a565b81600c01600101819055506112b481600c016125c8565b81600c0160030160006101000a81548160ff021916908360ff1602179055505b5b6112de8161269d565b6003808111156112ea57fe5b8160010160109054906101000a900460ff16600381111561130757fe5b1415611317576113168161280e565b5b505050565b600080600080600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000015495508060010160009054906101000a900467ffffffffffffffff169450600a5493508060010160089054906101000a900467ffffffffffffffff1692508060010160109054906101000a900460ff169150509091929394565b600160028160038111156113d457fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff16600381111561142f57fe5b148061149f575080600381111561144257fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff16600381111561149d57fe5b145b6114f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130fa6027913960400191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001600381111561154457fe5b8160010160109054906101000a900460ff16600381111561156157fe5b1480156115785750600081600c0160040180549050145b806115aa57506002600381111561158b57fe5b8160010160109054906101000a900460ff1660038111156115a857fe5b145b156115c6576115b88161269d565b6115c18161280e565b6115d0565b6115cf8161269d565b5b505050565b600b60009054906101000a900460ff1615611658576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4369726375697420627265616b6572207472696767657265640000000000000081525060200191505060405180910390fd5b600a543411156116b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130d86022913960400191505060405180910390fd5b6000804290506000438284604051602001808481526020018367ffffffffffffffff1660c01b815260080182815260200193505050506040516020818303038152906040528051906020012060001c905060095460096000828254019250508190555061171e613015565b611726613015565b61172e613015565b6040518060e001604052808581526020018667ffffffffffffffff168152602001600067ffffffffffffffff1681526020016000600381111561176d57fe5b815260200184815260200183815260200182815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548160ff0219169083600381111561184d57fe5b021790555060808201518160020160008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff16021790555060808201518160040190805190602001906118b6929190613047565b50505060a08201518160070160008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff160217905550608082015181600401908051906020019061191d929190613047565b50505060c082015181600c0160008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055506080820151816004019080519060200190611984929190613047565b5050509050506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050348160070160000181905550861981600201600201819055508681600701600201819055508681600c016002018190555080600101600881819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550507f3d4e45c47472036df382bcd86971010e0654905f09ea384e13d66343a969a7ab81600001548260010160089054906101000a900467ffffffffffffffff163334604051808581526020018467ffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a1611adb81612bb2565b7f95ba93c950280c1c47d5857e0ce5c9b670ef8fe1ae0fe4afad237cdd64fea1b781600001548260070160040183600c016004016040518084815260200180602001806020018381038352858181548152602001915080548015611b5e57602002820191906000526020600020905b815481526020019060010190808311611b4a575b50508381038252848181548152602001915080548015611b9d57602002820191906000526020600020905b815481526020019060010190808311611b89575b50509550505050505060405180910390a1611bb78161269d565b50505050505050565b611bc8612b22565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806130b26026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001806003811115611dd957fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff166003811115611e3457fe5b14611e8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130fa6027913960400191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600701600001543414611f49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d757374206d61746368206f726967696e616c2062657420746f2073706c697481525060200191505060405180910390fd5b6002816007016004018054905014611fc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43616e206f6e6c792073706c697420776974682074776f20636172647300000081525060200191505060405180910390fd5b600081600c016004018054905014612049576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616e206f6e6c792073706c6974206f6e63650000000000000000000000000081525060200191505060405180910390fd5b6006600d8260070160040160018154811061206057fe5b90600052602060002001548161207257fe5b06600d811061207d57fe5b602091828204019190069054906101000a900460ff1660ff166006600d836007016004016000815481106120ad57fe5b9060005260206000200154816120bf57fe5b06600d81106120ca57fe5b602091828204019190069054906101000a900460ff1660ff1614612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f46697273742074776f206361726473206d7573742062652073616d650000000081525060200191505060405180910390fd5b80600c016004018160070160040160018154811061217057fe5b90600052602060002001549080600181540180825580915050600190039060005260206000200160009091909190915055806007016004018054806121b157fe5b600190038181906000526020600020016000905590556121d481826007016123e0565b6121e18182600c016123e0565b7f95ba93c950280c1c47d5857e0ce5c9b670ef8fe1ae0fe4afad237cdd64fea1b781600001548260070160040183600c01600401604051808481526020018060200180602001838103835285818154815260200191508054801561226457602002820191906000526020600020905b815481526020019060010190808311612250575b505083810382528481815481526020019150805480156122a357602002820191906000526020600020905b81548152602001906001019080831161228f575b50509550505050505060405180910390a16122c0816007016125c8565b8160070160030160006101000a81548160ff021916908360ff1602179055506122eb81600c016125c8565b81600c0160030160006101000a81548160ff021916908360ff1602179055503481600c01600001819055505050565b600080831182906123c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561238b578082015181840152602081019050612370565b50505050905090810190601f1680156123b85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816123d257fe5b049050809150509392505050565b6000429050600060346001028267ffffffffffffffff16600954856002015402018161240857fe5b06905082600201548183604051602001808481526020018381526020018267ffffffffffffffff1660c01b815260080193505050506040516020818303038152906040528051906020012060001c83600201819055506009548183604051602001808481526020018381526020018267ffffffffffffffff1660c01b815260080193505050506040516020818303038152906040528051906020012060001c600981905550826004018190806001815401808255809150506001900390600052602060002001600090919091909150556124e1836125c8565b8360030160006101000a81548160ff021916908360ff1602179055507fbf6ada8879281cec14c5f104be3c1b3acdccf97645f07c2b0a23eed63901762e84600001548560010160089054906101000a900467ffffffffffffffff166006600d6034868161254a57fe5b068161255257fe5b0660ff16600d811061256057fe5b602091828204019190069054906101000a900460ff168660030160009054906101000a900460ff16604051808581526020018467ffffffffffffffff1681526020018360ff1681526020018260ff16815260200194505050505060405180910390a150505050565b6000806000905060005b83600401805490508160ff161015612666576000600d6034866004018460ff16815481106125fc57fe5b90600052602060002001548161260e57fe5b068161261657fe5b06905060068160ff16600d811061262957fe5b602091828204019190069054906101000a900460ff168401935060008160ff1614156126585782806001019350505b5080806001019150506125d2565b505b60008160ff1611801561267e575060158260ff16115b1561269757600a82039150808060019003915050612668565b50919050565b60018160010160109054906101000a900460ff1660038111156126bc57fe5b0160038111156126c857fe5b8160010160106101000a81548160ff021916908360038111156126e757fe5b0217905550600260038111156126f957fe5b8160010160109054906101000a900460ff16600381111561271657fe5b14801561272d5750600081600c0160040180549050145b156127825760018160010160109054906101000a900460ff16600381111561275157fe5b01600381111561275d57fe5b8160010160106101000a81548160ff0219169083600381111561277c57fe5b02179055505b7fbf34949e790239ec64f4107f427fa499173e6574405ea4955901f4a81f05bbbd81600001548260010160089054906101000a900467ffffffffffffffff168360010160109054906101000a900460ff16604051808481526020018367ffffffffffffffff1681526020018260038111156127f957fe5b8152602001935050505060405180910390a150565b600b60009054906101000a900460ff1615612891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4369726375697420627265616b6572207472696767657265640000000000000081525060200191505060405180910390fd5b60008061289d83612c9c565b905060158360070160030160009054906101000a900460ff1660ff16116128d8576128d5826128d0858660070185612de3565b612b2a565b91505b601583600c0160030160009054906101000a900460ff1660ff16116129115761290e826129098586600c0185612de3565b612b2a565b91505b61292383600701600001546008612f8f565b82111561297b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806131656022913960400191505060405180910390fd5b600082146129fd573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156129c9573d6000803e3d6000fd5b506001600b60018282829054906101000a900460ff160192506101000a81548160ff021916908360ff160217905550612a1a565b6000600b60016101000a81548160ff021916908360ff1602179055505b600b60029054906101000a900460ff1660ff16600b60019054906101000a900460ff1660ff1610612a61576001600b60006101000a81548160ff0219169083151502179055505b612a6c4760c861065b565b600a819055507f1b95d75fb3f54f1f6c0a87f3b89ba37635d37eb4ba5d37d0a38240f74830fb0583600001548460010160089054906101000a900467ffffffffffffffff16848660070160030160009054906101000a900460ff168760020160030160009054906101000a900460ff16604051808681526020018567ffffffffffffffff1681526020018481526020018360ff1681526020018260ff1681526020019550505050505060405180910390a1505050565b600033905090565b600080828401905083811015612ba8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806003811115612bc057fe5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160109054906101000a900460ff166003811115612c1b57fe5b14612c71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130fa6027913960400191505060405180910390fd5b612c7e82836007016123e0565b612c8b82836002016123e0565b612c9882836007016123e0565b5050565b600060158260070160030160009054906101000a900460ff1660ff16118015612ccf5750600082600c0160040180549050145b80612d14575060158260070160030160009054906101000a900460ff1660ff16118015612d135750601582600c0160030160009054906101000a900460ff1660ff16115b5b15612d6a57612d2682836002016123e0565b60158260020160030160009054906101000a900460ff1660ff16148015612d57575060028260020160040180549050145b15612d655760019050612dde565b612ddd565b5b60118260020160030160009054906101000a900460ff1660ff161015612ddc57612d9882836002016123e0565b60158260020160030160009054906101000a900460ff1660ff16148015612dc9575060028260020160040180549050145b15612dd75760019050612dde565b612d6b565b5b5b919050565b6000612ded613015565b846002016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff16815260200160048201805480602002602001604051908101604052809291908181526020018280548015612e8657602002820191906000526020600020905b815481526020019060010190808311612e72575b505050505081525050905060158460030160009054906101000a900460ff1660ff16148015612ebc575060028460040180549050145b8015612ec6575082155b15612eeb57612ee4612edd85600001546005612f8f565b600261065b565b9150612f87565b806060015160ff168460030160009054906101000a900460ff1660ff161180612f1c57506015816060015160ff1610155b15612f4457612f3d612f3685600001548660010154612b2a565b6002612f8f565b9150612f86565b806060015160ff168460030160009054906101000a900460ff1660ff161415612f8057612f7984600001548560010154612b2a565b9150612f85565b600091505b5b5b509392505050565b600080831415612fa2576000905061300f565b6000828402905082848281612fb357fe5b041461300a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131446021913960400191505060405180910390fd5b809150505b92915050565b6040518060a00160405280600081526020016000815260200160008152602001600060ff168152602001606081525090565b828054828255906000526020600020908101928215613083579160200282015b82811115613082578251825591602001919060010190613067565b5b5090506130909190613094565b5090565b5b808211156130ad576000816000905550600101613095565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373426574206d757374206265206c657373207468616e20746865206d6178206265742e46756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d652e43616e206f6e6c7920646f75626c6520646f776e20776974682074776f206361726473536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774465616c6572206572726f72202d207061796f757420697320746f6f20686967682e4265742063616e6e6f742062652067726561746572207468616e206f726967696e616c20626574a26469706673582212208d0e12e5e724003581063cc4f097bce5206a69077b31ba304d6447ce41240a5564736f6c634300060c0033","immutableReferences":{},"sourceMap":"508:16686:1:-:0;;;1246:67;;;;;;;;1270:2;1246:67;;;;;;1274:1;1246:67;;;;;;1277:1;1246:67;;;;;;1280:1;1246:67;;;;;;1283:1;1246:67;;;;;;1286:1;1246:67;;;;;;1289:1;1246:67;;;;;;1292:1;1246:67;;;;;;1295:1;1246:67;;;;;;1298:2;1246:67;;;;;;1302:2;1246:67;;;;;;1306:2;1246:67;;;;;;1310:2;1246:67;;;;;;;;;;;;;:::i;:::-;;1549:2;1531:20;;;;;;;;;;;;;;;;;;;;2278:60;;;;;;;;;;860:17:4;880:12;:10;;;:12;;:::i;:::-;860:32;;911:9;902:6;;:18;;;;;;;;;;;;;;;;;;968:9;935:43;;964:1;935:43;;;;;;;;;;;;826:159;2316:15:1;2309:4;:22;;;;508:16686;;640:96:2;693:7;719:10;712:17;;640:96;:::o;508:16686:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"508:16686:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:31;2423:10;2435:9;2414:31;;;;;;;;;;;;;;;;;;;;;;;;;;2465:40;2478:21;2501:3;2465:12;:40::i;:::-;2456:6;:49;;;;508:16686;;;;;;;;;;;;;15409:130:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10135:864:1;;;;;;;;;;;;;:::i;:::-;;15545:186:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2727:91:1;;;;;;;;;;;;;:::i;:::-;;15543:792;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:145:4;;;;;;;;;;;;;:::i;:::-;;15019:207:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:77:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8900:1096:1;;;:::i;:::-;;16749:443;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11166:387;;;;;;;;;;;;;:::i;:::-;;5035:932;;;:::i;:::-;;1978:240:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7721:900:1;;;:::i;:::-;;3101:130:5;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;15409::6:-;15492:40;15503:5;15510:7;15529:1;15519:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15492:10;:40::i;:::-;15409:130;;:::o;10135:864:1:-;10169:14;10185:19;3227:7;3200:34;;;;;;;;:5;:17;3206:10;3200:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;:72;;;;3265:7;3238:34;;;;;;;;:5;:17;3244:10;3238:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;3200:72;3192:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10216:17:::1;10236:5;:17;10242:10;10236:17;;;;;;;;;;;;;;;10216:37;;10292:2;10272:4;:11;;:17;;;;;;;;;;;;:22;;;:55;;;;;10313:14;10299:28;;;;;;;;:4;:10;;;;;;;;;;;;:28;;;;;;;;;10272:55;:125;;;;10357:2;10332:4;:16;;:22;;;;;;;;;;;;:27;;;:64;;;;;10377:19;10363:33;;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;10332:64;10272:125;10264:134;;;::::0;::::1;;10427:14;10413:28;;;;;;;;:4;:10;;;;;;;;;;;;:28;;;;;;;;;10409:584;;;10458:27;10467:4;10473;:11;;10458:8;:27::i;:::-;10519:24;10531:4;:11;;10519;:24::i;:::-;10499:4;:11;;:17;;;:44;;;;;;;;;;;;;;;;;;10583:2;10562:4;:11;;:17;;;;;;;;;;;;:23;;;10558:193;;10605:15;10615:4;10605:9;:15::i;:::-;10675:1;10643:4;:16;;:21;;:28;;;;:33;10639:98;;;10700:18;10713:4;10700:12;:18::i;:::-;10639:98;10558:193;10409:584;;;10783:32;10792:4;10798;:16;;10783:8;:32::i;:::-;10854:29;10866:4;:16;;10854:11;:29::i;:::-;10829:4;:16;;:22;;;:54;;;;;;;;;;;;;;;;;;10928:2;10902:4;:16;;:22;;;;;;;;;;;;:28;;;10898:85;;10950:18;10963:4;10950:12;:18::i;:::-;10898:85;10409:584;3342:1;10135:864:::0;;:::o;15545:186:6:-;15722:1;15714:10;;15677:22;:34;15708:1;15700:10;;15677:34;;;;;;;;;;;:47;;;;15545:186;;;:::o;2727:91:1:-;1275:12:4;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:7:1::1;:5;:7::i;:::-;2772:39;;;15543:792:::0;15616:21;15656:26;15701:17;15737:22;15778:11;15808:16;15843:21;15883:26;15943:17;15963:5;:17;15969:10;15963:17;;;;;;;;;;;;;;;15943:37;;15997:4;:11;;:16;;15990:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16035:4;:16;;:21;;16023:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16078:4;:11;;:17;;;;;;;;;;;;16066:29;;;;16122:4;:16;;:22;;;;;;;;;;;;16105:39;;;;16160:4;:11;;:15;;;16154:21;;16196:4;:16;;:20;;;16185:31;;16242:4;:11;;:25;;;16226:41;;16298:4;:16;;:30;;;16277:51;;15543:792;;;;;;;;;:::o;1684:145:4:-;1275:12;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:1:::1;1753:40;;1774:6;::::0;::::1;;;;;;;;1753:40;;;;;;;;;;;;1820:1;1803:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1684:145::o:0;15019:207:1:-;15066:21;15089:13;15114:17;15134:5;:17;15140:10;15134:17;;;;;;;;;;;;;;;15114:37;;15168:4;:11;;:16;;15161:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15202:4;:11;;:17;;;;;;;;;;;;15194:25;;;;15019:207;;;:::o;1061:77:4:-;1099:7;1125:6;;;;;;;;;;;1118:13;;1061:77;:::o;8900:1096:1:-;8949:14;8965:19;3227:7;3200:34;;;;;;;;:5;:17;3206:10;3200:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;:72;;;;3265:7;3238:34;;;;;;;;:5;:17;3244:10;3238:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;3200:72;3192:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8996:17:::1;9016:5;:17;9022:10;9016:17;;;;;;;;;;;;;;;8996:37;;9080:1;9053:4;:11;;:16;;:23;;;;:28;:60;;;;;9099:14;9085:28;;;;;;;;:4;:10;;;;;;;;;;;;:28;;;;;;;;;9053:60;9052:154;;;;9167:1;9135:4;:16;;:21;;:28;;;;:33;:70;;;;;9186:19;9172:33;;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;9135:70;9052:154;9044:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9293:4;:11;;:15;;;9280:9;:28;;9272:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9381:14;9367:28;;;;;;;;:4;:10;;;;;;;;;;;;:28;;;;;;;;;9363:510;;;9411:27;9420:4;9426;:11;;9411:8;:27::i;:::-;9480:50;9493:4;:11;;:25;;;9520:9;9480:12;:50::i;:::-;9452:4;:11;;:25;;:78;;;;9564:24;9576:4;:11;;9564;:24::i;:::-;9544:4;:11;;:17;;;:44;;;;;;;;;;;;;;;;;;9363:510;;;9625:19;9611:33;;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;9607:266;;;9660:32;9669:4;9675;:16;;9660:8;:32::i;:::-;9739:55;9752:4;:16;;:30;;;9784:9;9739:12;:55::i;:::-;9706:4;:16;;:30;;:88;;;;9833:29;9845:4;:16;;9833:11;:29::i;:::-;9808:4;:16;;:22;;;:54;;;;;;;;;;;;;;;;;;9607:266;9363:510;9883:15;9893:4;9883:9;:15::i;:::-;9926:19;9912:33:::0;::::1;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;9909:81;;;9961:18;9974:4;9961:12;:18::i;:::-;9909:81;3342:1;8900:1096:::0;;:::o;16749:443::-;16820:14;16853:16;16888:18;16925:12;16956:11;17001:17;17021:5;:17;17027:10;17021:17;;;;;;;;;;;;;;;17001:37;;17057:4;:7;;;17048:16;;17086:4;:14;;;;;;;;;;;;17074:26;;17123:6;;17110:19;;17147:4;:10;;;;;;;;;;;;17139:18;;17175:4;:10;;;;;;;;;;;;17167:18;;16749:443;;;;;;:::o;11166:387::-;11202:14;11218:19;3227:7;3200:34;;;;;;;;:5;:17;3206:10;3200:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;:72;;;;3265:7;3238:34;;;;;;;;:5;:17;3244:10;3238:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:34;;;;;;;;;3200:72;3192:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11249:17:::1;11269:5;:17;11275:10;11269:17;;;;;;;;;;;;;;;11249:37;;11315:14;11301:28;;;;;;;;:4;:10;;;;;;;;;;;;:28;;;;;;;;;:65;;;;;11365:1;11333:4;:16;;:21;;:28;;;;:33;11301:65;11300:115;;;;11396:19;11382:33;;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;11300:115;11297:250;;;11443:15;11453:4;11443:9;:15::i;:::-;11472:18;11485:4;11472:12;:18::i;:::-;11297:250;;;11521:15;11531:4;11521:9;:15::i;:::-;11297:250;3342:1;11166:387:::0;;:::o;5035:932::-;2931:8;;;;;;;;;;;2930:9;2922:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5117:6:::1;;5104:9;:19;;5096:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5173:13;5196:11:::0;5217:15:::1;5196:37;;5243:10;5291:12;5305:4;5311:5;5274:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5264:54;;;;;;5256:63;;5243:76;;5338:4;;5330;;:12;;;;;;;;;;;5353:20;;:::i;:::-;5383;;:::i;:::-;5413:25;;:::i;:::-;5469:57;;;;;;;;5474:2;5469:57;;;;5478:4;5469:57;;;;;;5484:1;5469:57;;;;;;5487:9;5469:57;;;;;;;;;;;;5498:6;5469:57;;;;5506:6;5469:57;;;;5514:11;5469:57;;::::0;5449:5:::1;:17;5455:10;5449:17;;;;;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5536:17;5556:5;:17;5562:10;5556:17;;;;;;;;;;;;;;;5536:37;;5626:9;5608:4;:11;;:15;;:27;;;;5665:5;5664:6;5645:4;:11;;:16;;:25;;;;5699:5;5680:4;:11;;:16;;:24;;;;5738:5;5714:4;:16;;:21;;:29;;;;5753:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5781:52;5790:4;:7;;;5799:4;:10;;;;;;;;;;;;5811;5823:9;5781:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5844:15;5854:4;5844:9;:15::i;:::-;5874:60;5885:4;:7;;;5894:4;:11;;:16;;5912:4;:16;;:21;;5874:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5945:15;5955:4;5945:9;:15::i;:::-;2971:1;;;;;;;5035:932::o:0;1978:240:4:-;1275:12;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2086:1:::1;2066:22;;:8;:22;;;;2058:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:8;2146:38;;2167:6;::::0;::::1;;;;;;;;2146:38;;;;;;;;;;;;2203:8;2194:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1978:240:::0;:::o;7721:900:1:-;7761:14;3057:6;3030:33;;;;;;;;:5;:17;3036:10;3030:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:33;;;;;;;;;3022:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7788:17:::1;7808:5;:17;7814:10;7808:17;;;;;;;;;;;;;;;7788:37;;7857:4;:11;;:15;;;7844:9;:28;7836:73;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7954:1;7927:4;:11;;:16;;:23;;;;:28;7919:70;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8039:1;8007:4;:16;;:21;;:28;;;;:33;7999:65;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8122:10;8155:2;8133:4;:11;;:16;;8150:1;8133:19;;;;;;;;;;;;;;;;:24;;;;;;8122:36;;;;;;;;;;;;;;;;;;;;;;;;;8082:76;;:10;8115:2;8093:4;:11;;:16;;8110:1;8093:19;;;;;;;;;;;;;;;;:24;;;;;;8082:36;;;;;;;;;;;;;;;;;;;;;;;;;:76;;;8074:133;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8218:4;:16;;:21;;8245:4;:11;;:16;;8262:1;8245:19;;;;;;;;;;;;;;;;8218:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8275:4;:11;;:16;;:22;;;;;;;;;;;;;;;;;;;;;;;;8308:27;8317:4;8323;:11;;8308:8;:27::i;:::-;8345:32;8354:4;8360;:16;;8345:8;:32::i;:::-;8392:60;8403:4;:7;;;8412:4;:11;;:16;;8430:4;:16;;:21;;8392:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8483:24;8495:4;:11;;8483;:24::i;:::-;8463:4;:11;;:17;;;:44;;;;;;;;;;;;;;;;;;8542:29;8554:4;:16;;8542:11;:29::i;:::-;8517:4;:16;;:22;;;:54;;;;;;;;;;;;;;;;;;8605:9;8582:4;:16;;:20;;:32;;;;3117:1;7721:900:::0;:::o;3713:272:5:-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;3659:527:1:-;3737:11;3758:15;3737:37;;3784:12;3848:2;1239:1;3832:18;3823:4;3800:27;;3815:4;;3801:6;:11;;;:18;3800:27;3799:52;;;;;;3784:67;;3910:6;:11;;;3923:4;3929;3893:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:52;;;;;;3875:61;;3861:6;:11;;:75;;;;3988:4;;3994;4000;3971:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3961:45;;;;;;3953:54;;3946:4;:61;;;;4018:6;:11;;4035:4;4018:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4065:19;4077:6;4065:11;:19::i;:::-;4050:6;:12;;;:34;;;;;;;;;;;;;;;;;;4100:79;4110:4;:7;;;4119:4;:10;;;;;;;;;;;;4131;4160:2;4155;4148:4;:9;;;;;;:14;;;;;;4131:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4166:6;:12;;;;;;;;;;;;4100:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:527;;;;:::o;6772:440::-;6838:11;6861:18;6882:1;6861:22;;6898:7;6893:201;6915:6;:11;;:18;;;;6911:1;:22;;;6893:201;;;6954:10;6998:2;6993;6976:6;:11;;6988:1;6976:14;;;;;;;;;;;;;;;;;;:19;;;;;;:24;;;;;;6954:47;;7024:10;7035:4;7024:16;;;;;;;;;;;;;;;;;;;;;;;;;;;7015:25;;;;7066:1;7058:4;:9;;;7054:29;;;7069:14;;;;;;;7054:29;6893:201;6935:3;;;;;;;6893:201;;;;7103:103;7125:1;7110:12;:16;;;:30;;;;;7138:2;7130:5;:10;;;7110:30;7103:103;;;7165:2;7156:11;;;;7181:14;;;;;;;;7103:103;;;6772:440;;;;:::o;4344:315::-;4439:1;4425:4;:10;;;;;;;;;;;;4420:16;;;;;;;;:20;4414:27;;;;;;;;4401:4;:10;;;:40;;;;;;;;;;;;;;;;;;;;;;;;4469:19;4455:33;;;;;;;;:4;:10;;;;;;;;;;;;:33;;;;;;;;;:70;;;;;4524:1;4492:4;:16;;:21;;:28;;;;:33;4455:70;4452:140;;;4579:1;4565:4;:10;;;;;;;;;;;;4560:16;;;;;;;;:20;4554:27;;;;;;;;4541:4;:10;;;:40;;;;;;;;;;;;;;;;;;;;;;;;4452:140;4607:45;4620:4;:7;;;4629:4;:10;;;;;;;;;;;;4641:4;:10;;;;;;;;;;;;4607:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4344:315;:::o;12808:1057::-;2931:8;;;;;;;;;;;2930:9;2922:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12883:11:::1;12909:16:::0;12928:21:::1;12944:4;12928:15;:21::i;:::-;12909:40;;12985:2;12964:4;:11;;:17;;;;;;;;;;;;:23;;;12960:133;;13012:70;13025:6;13033:47;13049:4;13055;:11;;13068;13033:15;:47::i;:::-;13012:12;:70::i;:::-;13003:79;;12960:133;13133:2;13107:4;:16;;:22;;;;;;;;;;;;:28;;;13103:143;;13160:75;13173:6;13181:52;13197:4;13203;:16;;13221:11;13181:15;:52::i;:::-;13160:12;:75::i;:::-;13151:84;;13103:143;13274:32;13287:4;:11;;:15;;;13304:1;13274:12;:32::i;:::-;13264:6;:42;;13256:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13408:1;13398:6;:11;13394:199;;13425:10;:19;;:27;13445:6;13425:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;13481:1;13466:11;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13394:199;;;13556:1;13542:11;;:15;;;;;;;;;;;;;;;;;;13394:199;13653:9;;;;;;;;;;;13638:24;;:11;;;;;;;;;;;:24;;;13634:50;;13677:4;13666:8;;:15;;;;;;;;;;;;;;;;;;13634:50;13729:40;13742:21;13765:3;13729:12;:40::i;:::-;13720:6;:49;;;;13785:73;13792:4;:7;;;13801:4;:10;;;;;;;;;;;;13813:6;13821:4;:11;;:17;;;;;;;;;;;;13840:4;:11;;:17;;;;;;;;;;;;13785:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2971:1;;12808:1057:::0;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;874:176:5:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7313:183:1:-;7367:9;3057:6;3030:33;;;;;;;;:5;:17;3036:10;3030:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:33;;;;;;;;;3022:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:27:::1;7397:4;7403;:11;;7388:8;:27::i;:::-;7425;7434:4;7440;:11;;7425:8;:27::i;:::-;7462;7471:4;7477;:11;;7462:8;:27::i;:::-;7313:183:::0;;:::o;11813:770::-;11874:4;11929:2;11909:4;:11;;:17;;;;;;;;;;;;:22;;;:59;;;;;11967:1;11935:4;:16;;:21;;:28;;;;:33;11909:59;11908:132;;;;12006:2;11986:4;:11;;:17;;;;;;;;;;;;:22;;;:53;;;;;12037:2;12012:4;:16;;:22;;;;;;;;;;;;:27;;;11986:53;11908:132;11891:685;;;12069:27;12078:4;12084;:11;;12069:8;:27::i;:::-;12174:2;12153:4;:11;;:17;;;;;;;;;;;;:23;;;:55;;;;;12207:1;12180:4;:11;;:16;;:23;;;;:28;12153:55;12149:105;;;12235:4;12228:11;;;;12149:105;11891:685;;;12344:222;12371:2;12351:4;:11;;:17;;;;;;;;;;;;:22;;;12344:222;;;12393:27;12402:4;12408;:11;;12393:8;:27::i;:::-;12464:2;12443:4;:11;;:17;;;;;;;;;;;;:23;;;:55;;;;;12497:1;12470:4;:11;;:16;;:23;;;;:28;12443:55;12439:113;;;12529:4;12522:11;;;;12439:113;12344:222;;;11891:685;11813:770;;;;:::o;14239:670::-;14346:14;14372:20;;:::i;:::-;14395:4;:11;;14372:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14437:2;14421:6;:12;;;;;;;;;;;;:18;;;:45;;;;;14465:1;14443:6;:11;;:18;;;;:23;14421:45;:61;;;;;14471:11;14470:12;14421:61;14417:486;;;14507:44;14520:27;14533:6;:10;;;14545:1;14520:12;:27::i;:::-;14549:1;14507:12;:44::i;:::-;14498:53;;14417:486;;;14609:6;:12;;;14594:27;;:6;:12;;;;;;;;;;;;:27;;;:49;;;;14641:2;14625:6;:12;;;:18;;;;14594:49;14590:313;;;14668:63;14681:46;14694:6;:10;;;14706:6;:20;;;14681:12;:46::i;:::-;14729:1;14668:12;:63::i;:::-;14659:72;;14590:313;;;14768:6;:12;;;14752:28;;:6;:12;;;;;;;;;;;;:28;;;14748:155;;;14805:46;14818:6;:10;;;14830:6;:20;;;14805:12;:46::i;:::-;14796:55;;14748:155;;;14891:1;14882:10;;14748:155;14590:313;14417:486;14239:670;;;;;;:::o;2180:459:5:-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o","source":"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\nimport \\"./provableAPI.sol\\";\\nimport \\"./Ownable.sol\\";\\nimport \\"./SafeMath.sol\\";\\n//import \\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/access/Ownable.sol\\";\\n//import \\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\\";\\n\\n\\n/// @title A blackjack game\\n/// @author Clark Henry\\n/// @notice This contract has known security risks and should not be deployed in production\\ncontract Blackjack is Ownable, usingProvable {\\n\\n    using SafeMath for *;\\n\\n    /// @dev Type declarations\\n    enum Stage {\\n                Bet,\\n                PlayHand,\\n                PlaySplitHand,\\n                ConcludeHands\\n    }\\n\\n    struct Game {\\n        uint256 id;\\n        uint64 startTime;\\n        uint64 round;\\n        Stage stage;\\n        Player dealer;\\n        Player player;\\n        Player splitPlayer;\\n    }\\n\\n    struct Player {\\n        uint256 bet;\\n        uint256 doubleDownBet;\\n        uint256 seed;\\n        uint8 score;\\n        uint256[] hand;\\n    }\\n\\n    /// @dev State variables\\n    /// @dev Includes some circuit breakers\\n    /// @dev Update maxBet to be Kelly optimal\\n    uint256 constant NUMBER_OF_DECKS = 1;\\n    uint8[13] cardValues = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10];\\n    mapping(address => Game) games;\\n    string private randomCards;\\n    uint256 seed;\\n    uint256 maxBet; // used for bet (risk) optimization\\n    bool stopLoss; // used for circuit breaker\\n    uint8 lossCounter;\\n    uint8 lossLimit = 20; // consecutive losses\\n\\n    /// @dev Events\\n    event StageChanged(uint256 gameId, uint64 round, Stage newStage);\\n    event NewRound(uint256 gameId, uint64 round, address player, uint256 bet);\\n    event CardDrawn(uint256 gameId, uint64 round, uint8 cardValue, uint8 score);\\n    event Result(uint256 gameId, uint64 round, uint256 payout, uint8 playerScore, uint8 dealerScore);\\n    event PlayerHand(uint256 gameId, uint256[] playerHand, uint256[] playerSplitHand);\\n    event LogNewWolframRandomDraw(string cards);\\n    event LogNewProvableQuery(string description);\\n    event Received(address, uint);\\n\\n    /// @dev Functions\\n    /// @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n    constructor() public {\\n        seed = block.timestamp;\\n    }\\n\\n    fallback() external {}\\n\\n    receive() external payable {\\n        emit Received(msg.sender, msg.value);\\n\\n        maxBet = SafeMath.div(address(this).balance, 200);\\n    }\\n\\n    /// @dev [Module 10, Lesson 1] Action restriction on critical function\\n    /// @dev [Module 10, Lesson 1] Mortality\\n    /// @dev [Library used] Ownable library from OpenZeppelin is imported and used here.\\n    function kill() public onlyOwner() {\\n        selfdestruct(address(uint160(owner())));\\n    }\\n\\n    /// @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n    modifier stopInEmergency() { require(!stopLoss, \\"Circuit breaker triggered\\"); _; }\\n\\n    modifier atStage(Stage _stage) {\\n        require(games[msg.sender].stage == _stage, \\"Function cannot be called at this time.\\");\\n        _;\\n    }\\n\\n    modifier eitherStage(Stage _stage1, Stage _stage2) {\\n        require(games[msg.sender].stage == _stage1 || games[msg.sender].stage == _stage2,\\n                \\"Function cannot be called at this time.\\");\\n        _;\\n    }\\n\\n    /// @dev Need to implement card removal\\n    /// @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n    /// @param game The current game containing the player drawing a card\\n    /// @param player A player from a Blackjack game, holding a hand to draw card to\\n    function drawCard(Game storage game, Player storage player) private {\\n        uint64 _now = uint64(block.timestamp);\\n        uint256 card = ((player.seed * seed) + _now) % (NUMBER_OF_DECKS*52);\\n        player.seed = uint256(keccak256(abi.encodePacked(player.seed, card, _now)));\\n        seed = uint256(keccak256(abi.encodePacked(seed, card, _now)));\\n\\n        player.hand.push(card);\\n        player.score = recalculate(player);\\n\\n        emit CardDrawn(game.id, game.round, cardValues[uint8(card % 52 % 13)], player.score);\\n    }\\n\\n    /// @dev Could be used for more complex check-reveal scheme for payable functions?\\n    /// @param game The current game which requires stage update\\n    function nextStage(Game storage game) internal {\\n        game.stage = Stage(uint(game.stage) + 1);\\n\\n        if(game.stage == Stage.PlaySplitHand && game.splitPlayer.hand.length == 0) {\\n            game.stage = Stage(uint(game.stage) + 1);\\n        }\\n\\n        emit StageChanged(game.id, game.round, game.stage);\\n    }\\n\\n    /// @notice Start a new round of Blackjack with the transferred value as the original bet.\\n    /// @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n    /// @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n    /// @dev Plan to split this into multiple functions such that placing bet is atomic before proceeding\\n    function newRound() public payable stopInEmergency {\\n        require(msg.value <= maxBet, \\"Bet must be less than the max bet.\\");\\n\\n        uint256 _seed;\\n        uint64 _now = uint64(block.timestamp);\\n        uint256 id = uint256(keccak256(abi.encodePacked(block.number, _now, _seed)));\\n\\n        seed += seed;\\n\\n        Player memory dealer;\\n        Player memory player;\\n        Player memory splitPlayer;\\n\\n        games[msg.sender] = Game(id, _now, 0, Stage.Bet, dealer, player, splitPlayer);\\n        Game storage game = games[msg.sender];\\n\\n        //reset(game);\\n\\n        game.player.bet = msg.value;\\n        game.dealer.seed = ~_seed;\\n        game.player.seed = _seed;\\n        game.splitPlayer.seed = _seed;\\n        game.round++;\\n\\n        emit NewRound(game.id, game.round, msg.sender, msg.value);\\n\\n        dealCards(game);\\n        emit PlayerHand(game.id, game.player.hand, game.splitPlayer.hand);\\n\\n        nextStage(game);\\n    }\\n\\n    /// @dev Not sure this is optimized in terms of stage updates and call timing\\n    /// @param game The current game which requires stage reset\\n    function reset(Game storage game) internal {\\n        game.stage = Stage.Bet;\\n        emit StageChanged(game.id, game.round, game.stage);\\n\\n        game.player.bet = 0;\\n        game.player.doubleDownBet = 0;\\n        game.splitPlayer.bet = 0;\\n        game.splitPlayer.doubleDownBet = 0;\\n\\n        game.player.score = 0;\\n        delete game.player.hand;\\n\\n        game.splitPlayer.score = 0;\\n        delete game.splitPlayer.hand;\\n\\n        game.dealer.score = 0;\\n        delete game.dealer.hand;\\n    }\\n\\n    /// @param player A player from a Blackjack game, holding a hand to calculate the score on\\n    /// @return score The Blackjack score for the player.\\n    function recalculate(Player storage player) private view returns (uint8 score) {\\n        uint8 numberOfAces = 0;\\n        for (uint8 i = 0; i < player.hand.length; i++) {\\n            uint8 card = (uint8) (player.hand[i] % 52 % 13);\\n            score += cardValues[card];\\n            if (card == 0) numberOfAces++;\\n        }\\n        while (numberOfAces > 0 && score > 21) {\\n            score -= 10;\\n            numberOfAces--;\\n        }\\n    }\\n\\n    /// @dev done only at start of hand\\n    /// @param game The current game which is starting\\n    function dealCards(Game storage game) private atStage(Stage.Bet) {\\n        drawCard(game, game.player);\\n        drawCard(game, game.dealer);\\n        drawCard(game, game.player);\\n    }\\n\\n    /// @notice Split first two cards into two hands, drawing one additional card for each. An equivalent bet value is required.\\n    /// @dev not working correctly on last check - the require for bet size was reverting\\n    function split() public payable atStage(Stage.PlayHand) {\\n\\n        Game storage game = games[msg.sender];\\n\\n        require(msg.value == game.player.bet, \\"Must match original bet to split\\");\\n        require(game.player.hand.length == 2, \\"Can only split with two cards\\");\\n        require(game.splitPlayer.hand.length == 0, \\"Can only split once\\");\\n        require(cardValues[game.player.hand[0] % 13] == cardValues[game.player.hand[1] % 13],\\n                \\"First two cards must be same\\");\\n\\n        game.splitPlayer.hand.push(game.player.hand[1]);\\n        game.player.hand.pop();\\n\\n        drawCard(game, game.player);\\n        drawCard(game, game.splitPlayer);\\n        emit PlayerHand(game.id, game.player.hand, game.splitPlayer.hand);\\n\\n        game.player.score = recalculate(game.player);\\n        game.splitPlayer.score = recalculate(game.splitPlayer);\\n\\n        game.splitPlayer.bet = msg.value;\\n    }\\n\\n    /// @notice Double down on first two cards, taking one additional card and standing, with an opportunity to double original bet.\\n    /// @dev is this vulnerable to OOG leaking drawn card info?\\n    /// @dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n    function doubleDown() public payable eitherStage(Stage.PlayHand, Stage.PlaySplitHand) {\\n        Game storage game = games[msg.sender];\\n\\n        require((game.player.hand.length == 2 && game.stage == Stage.PlayHand) ||\\n                (game.splitPlayer.hand.length == 2 && game.stage == Stage.PlaySplitHand),\\n                \\"Can only double down with two cards\\");\\n        require(msg.value <= game.player.bet, \\"Bet cannot be greater than original bet\\");\\n\\n        if (game.stage == Stage.PlayHand) {\\n            drawCard(game, game.player);\\n            game.player.doubleDownBet = SafeMath.add(game.player.doubleDownBet, msg.value);\\n            game.player.score = recalculate(game.player);\\n\\n\\n        } else if (game.stage == Stage.PlaySplitHand) {\\n            drawCard(game, game.splitPlayer);\\n            game.splitPlayer.doubleDownBet = SafeMath.add(game.splitPlayer.doubleDownBet, msg.value);\\n            game.splitPlayer.score = recalculate(game.splitPlayer);\\n        }\\n\\n        nextStage(game);\\n\\n        if(game.stage == Stage.ConcludeHands) {\\n            concludeGame(game);\\n        }\\n    }\\n\\n    /// @notice Hit, taking one additional card on the current hand.\\n    /// @dev is this vulnerable to OOG leaking drawn card info?\\n    function hit() public eitherStage(Stage.PlayHand, Stage.PlaySplitHand) {\\n        Game storage game = games[msg.sender];\\n\\n        require(game.player.score < 21  && game.stage == Stage.PlayHand || (game.splitPlayer.score < 21 && game.stage == Stage.PlaySplitHand));\\n\\n        if (game.stage == Stage.PlayHand) {\\n\\n            drawCard(game, game.player);\\n            game.player.score = recalculate(game.player);\\n\\n            if (game.player.score >= 21) {\\n                nextStage(game);\\n\\n                if (game.splitPlayer.hand.length == 0) {\\n                    concludeGame(game);\\n                }\\n            }\\n\\n        } else {\\n\\n            drawCard(game, game.splitPlayer);\\n            game.splitPlayer.score = recalculate(game.splitPlayer);\\n\\n            if (game.splitPlayer.score >= 21) {\\n                concludeGame(game);\\n            }\\n        }\\n    }\\n\\n    /// @notice Standing, taking no more additional cards and concluding the current hand.\\n    /// @dev is this vulnerable to gas limit leaking drawn card info?\\n    function stand() public eitherStage(Stage.PlayHand, Stage.PlaySplitHand) {\\n        Game storage game = games[msg.sender];\\n\\n        if((game.stage == Stage.PlayHand && game.splitPlayer.hand.length == 0)\\n           || game.stage == Stage.PlaySplitHand\\n           ) {\\n            nextStage(game);\\n            concludeGame(game);\\n        } else {\\n            nextStage(game);\\n        }\\n    }\\n\\n    /// @dev TODO: Change dealer rules from S17 to H17\\n    /// @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n    /// @param game The concluded Blackjack game\\n    /// @return bool Whether the dealer has Blackjack\\n    function drawDealerCards(Game storage game) private returns (bool) {\\n\\n        if (\\n            (game.player.score > 21 && game.splitPlayer.hand.length == 0) ||\\n            (game.player.score > 21 && game.splitPlayer.score > 21)\\n            ) {\\n            drawCard(game, game.dealer); // just draw once if player has busted\\n            if (game.dealer.score == 21 && game.dealer.hand.length == 2) {\\n                return true;\\n            }\\n        } else {\\n            // Dealer must draw to 16 and stand on all 17\'s\\n            while (game.dealer.score < 17) {\\n                drawCard(game, game.dealer);\\n\\n                if (game.dealer.score == 21 && game.dealer.hand.length == 2) {\\n                    return true;\\n                }\\n            }\\n        }\\n\\n    }\\n\\n    /// @dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n    /// @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n    /// @param game The game to conclude, paying out players if necessary\\n    function concludeGame(Game storage game) private stopInEmergency {\\n        uint payout = 0;\\n\\n        bool dealerHasBJ = drawDealerCards(game);\\n\\n        if (game.player.score <= 21) {\\n            payout = SafeMath.add(payout, calculatePayout(game, game.player, dealerHasBJ) );\\n        }\\n\\n        if (game.splitPlayer.score <= 21) {\\n            payout = SafeMath.add(payout, calculatePayout(game, game.splitPlayer, dealerHasBJ) );\\n        }\\n\\n        require(payout <= SafeMath.mul(game.player.bet, 8), \\"Dealer error - payout is too high.\\"); // 2 hands * double down = 4 bets max\\n\\n        if (payout != 0) {\\n            msg.sender.transfer(payout);\\n            lossCounter += 1; // increment circuit breaker\\n        } else {\\n            lossCounter = 0; // reset circuit breaker\\n        }\\n\\n        // try circuit breaker\\n        if (lossCounter >= lossLimit) { stopLoss = true; }\\n\\n        // update max bet\\n        maxBet = SafeMath.div(address(this).balance, 200);\\n\\n        emit Result(game.id, game.round, payout, game.player.score, game.dealer.score);\\n    }\\n\\n    /// @dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n    /// @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n    /// @param game The concluded Blackjack game\\n    /// @param player A player from the game to calculate the payout for\\n    /// @return payout Amount of ether to transfer to player for winnings\\n    function calculatePayout(Game storage game, Player storage player, bool dealerHasBJ) private view returns (uint256 payout) {\\n        Player memory dealer = game.dealer;\\n\\n        if (player.score == 21 && player.hand.length == 2 && !dealerHasBJ) {\\n            payout = SafeMath.div(SafeMath.mul(player.bet, 5), 2); // Blackjack pays 3:2\\n        } else if (player.score > dealer.score || dealer.score >= 21) {\\n            payout = SafeMath.mul(SafeMath.add(player.bet, player.doubleDownBet), 2);\\n        } else if (player.score == dealer.score) {\\n            payout = SafeMath.add(player.bet, player.doubleDownBet);\\n        } else {\\n            payout = 0;\\n        }\\n    }\\n\\n    /// Getters\\n    /// @notice Returns the dealer\'s opened hand\\n    /// @return hand The dealer\'s hand\\n    function getDealerState() public view returns (uint256[] memory hand, uint256 score) {\\n        Game storage game = games[msg.sender];\\n        hand = game.dealer.hand;\\n        score = game.dealer.score;\\n    }\\n\\n    /// @notice Returns all player\'s hands\\n    /// @return hand The player\'s primary hand\\n    /// @return splitHand The player\'s split hand, if any\\n    /// @return handScore Evaluated score for hand\\n    /// @return splitHandScore Evaluated score for split hand\\n    /// @return bet Original bet at start of hand\\n    function getPlayerState() public view\\n        returns (\\n                 uint256[] memory hand,\\n                 uint256[] memory splitHand,\\n                 uint256 handScore,\\n                 uint256 splitHandScore,\\n                 uint256 bet,\\n                 uint256 splitBet,\\n                 uint256 doubleDownBet,\\n                 uint256 splitDoubleDownBet\\n                 )\\n    {\\n        Game storage game = games[msg.sender];\\n        hand = game.player.hand;\\n        splitHand = game.splitPlayer.hand;\\n        handScore = game.player.score;\\n        splitHandScore = game.splitPlayer.score;\\n        bet = game.player.bet;\\n        splitBet = game.splitPlayer.bet;\\n        doubleDownBet = game.player.doubleDownBet;\\n        splitDoubleDownBet = game.splitPlayer.doubleDownBet;\\n    }\\n\\n    /// @notice Returns selected elements from a game\\n    /// @dev Also add bet (and original) to return\\n    /// @return gameId ID for the current Blackjack game\\n    /// @return startTime Time the current Blackjack game began\\n    /// @return gameMaxBet Max bet allowed to be placed for new game\\n    /// @return round Number of round of Blackjack game played\\n    /// @return stage Stage of the Blackjack game\\n    function getGameState() public view\\n        returns (\\n                 uint256 gameId,\\n                 uint64 startTime,\\n                 uint256 gameMaxBet,\\n                 uint64 round,\\n                 Stage stage\\n                 )\\n    {\\n        Game storage game = games[msg.sender];\\n        gameId = game.id;\\n        startTime = game.startTime;\\n        gameMaxBet = maxBet;\\n        round = game.round;\\n        stage = game.stage;\\n    }\\n}\\n","sourcePath":"/home/xx/blackjack/contracts/Blackjack.sol","ast":{"absolutePath":"project:/contracts/Blackjack.sol","exportedSymbols":{"Blackjack":[1693]},"id":1694,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"45:23:1"},{"absolutePath":"project:/contracts/provableAPI.sol","file":"./provableAPI.sol","id":4,"nodeType":"ImportDirective","scope":1694,"sourceUnit":8493,"src":"70:27:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"project:/contracts/Ownable.sol","file":"./Ownable.sol","id":5,"nodeType":"ImportDirective","scope":1694,"sourceUnit":1882,"src":"98:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"project:/contracts/SafeMath.sol","file":"./SafeMath.sol","id":6,"nodeType":"ImportDirective","scope":1694,"sourceUnit":2078,"src":"122:24:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":8,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":1881,"src":"530:7:1","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1881","typeString":"contract Ownable"}},"id":9,"nodeType":"InheritanceSpecifier","src":"530:7:1"},{"arguments":null,"baseName":{"contractScope":null,"id":10,"name":"usingProvable","nodeType":"UserDefinedTypeName","referencedDeclaration":8492,"src":"539:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_usingProvable_$8492","typeString":"contract usingProvable"}},"id":11,"nodeType":"InheritanceSpecifier","src":"539:13:1"}],"contractDependencies":[1715,1881,8492],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"364:144:1","text":"@title A blackjack game\\n @author Clark Henry\\n @notice This contract has known security risks and should not be deployed in production"},"fullyImplemented":true,"id":1693,"linearizedBaseContracts":[1693,8492,1881,1715],"name":"Blackjack","nodeType":"ContractDefinition","nodes":[{"id":13,"libraryName":{"contractScope":null,"id":12,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":2077,"src":"566:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$2077","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"560:21:1","typeName":null},{"canonicalName":"Blackjack.Stage","id":18,"members":[{"id":14,"name":"Bet","nodeType":"EnumValue","src":"647:3:1"},{"id":15,"name":"PlayHand","nodeType":"EnumValue","src":"668:8:1"},{"id":16,"name":"PlaySplitHand","nodeType":"EnumValue","src":"694:13:1"},{"id":17,"name":"ConcludeHands","nodeType":"EnumValue","src":"725:13:1"}],"name":"Stage","nodeType":"EnumDefinition","src":"618:126:1"},{"canonicalName":"Blackjack.Game","id":33,"members":[{"constant":false,"id":20,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"772:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"startTime","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"792:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":21,"name":"uint64","nodeType":"ElementaryTypeName","src":"792:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"818:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23,"name":"uint64","nodeType":"ElementaryTypeName","src":"818:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"stage","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"840:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":25,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"840:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"dealer","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"861:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":27,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"861:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"884:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":29,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"884:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"splitPlayer","nodeType":"VariableDeclaration","overrides":null,"scope":33,"src":"907:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":31,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"907:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"name":"Game","nodeType":"StructDefinition","scope":1693,"src":"750:182:1","visibility":"public"},{"canonicalName":"Blackjack.Player","id":45,"members":[{"constant":false,"id":35,"mutability":"mutable","name":"bet","nodeType":"VariableDeclaration","overrides":null,"scope":45,"src":"962:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"doubleDownBet","nodeType":"VariableDeclaration","overrides":null,"scope":45,"src":"983:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"seed","nodeType":"VariableDeclaration","overrides":null,"scope":45,"src":"1014:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"score","nodeType":"VariableDeclaration","overrides":null,"scope":45,"src":"1036:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":40,"name":"uint8","nodeType":"ElementaryTypeName","src":"1036:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"hand","nodeType":"VariableDeclaration","overrides":null,"scope":45,"src":"1057:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43,"length":null,"nodeType":"ArrayTypeName","src":"1057:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"name":"Player","nodeType":"StructDefinition","scope":1693,"src":"938:140:1","visibility":"public"},{"constant":true,"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1084:115:1","text":"@dev State variables\\n @dev Includes some circuit breakers\\n @dev Update maxBet to be Kelly optimal"},"id":49,"mutability":"constant","name":"NUMBER_OF_DECKS","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1204:36:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"31","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1239:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"cardValues","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1246:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage","typeString":"uint8[13]"},"typeName":{"baseType":{"id":50,"name":"uint8","nodeType":"ElementaryTypeName","src":"1246:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":52,"length":{"argumentTypes":null,"hexValue":"3133","id":51,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1252:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"nodeType":"ArrayTypeName","src":"1246:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage_ptr","typeString":"uint8[13]"}},"value":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"3131","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1270:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},{"argumentTypes":null,"hexValue":"32","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"argumentTypes":null,"hexValue":"33","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1277:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"argumentTypes":null,"hexValue":"34","id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1280:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},{"argumentTypes":null,"hexValue":"35","id":57,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1283:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},{"argumentTypes":null,"hexValue":"36","id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1286:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},{"argumentTypes":null,"hexValue":"37","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1289:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},{"argumentTypes":null,"hexValue":"38","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"argumentTypes":null,"hexValue":"39","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1295:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},{"argumentTypes":null,"hexValue":"3130","id":62,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1298:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"argumentTypes":null,"hexValue":"3130","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"argumentTypes":null,"hexValue":"3130","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"argumentTypes":null,"hexValue":"3130","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"id":66,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1269:44:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_memory_ptr","typeString":"uint8[13] memory"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"games","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1319:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game)"},"typeName":{"id":70,"keyType":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"1327:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1319:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game)"},"valueType":{"contractScope":null,"id":69,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"1338:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}}},"value":null,"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"randomCards","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1355:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":72,"name":"string","nodeType":"ElementaryTypeName","src":"1355:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"private"},{"constant":false,"id":75,"mutability":"mutable","name":"seed","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1387:12:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"maxBet","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1405:14:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"stopLoss","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1461:13:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":78,"name":"bool","nodeType":"ElementaryTypeName","src":"1461:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"lossCounter","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1508:17:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":80,"name":"uint8","nodeType":"ElementaryTypeName","src":"1508:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"lossLimit","nodeType":"VariableDeclaration","overrides":null,"scope":1693,"src":"1531:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":82,"name":"uint8","nodeType":"ElementaryTypeName","src":"1531:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"argumentTypes":null,"hexValue":"3230","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1580:15:1","text":"@dev Events"},"id":93,"name":"StageChanged","nodeType":"EventDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"indexed":false,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1619:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1635:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":88,"name":"uint64","nodeType":"ElementaryTypeName","src":"1635:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":91,"indexed":false,"mutability":"mutable","name":"newStage","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1649:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":90,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"1649:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"}],"src":"1618:46:1"},"src":"1600:65:1"},{"anonymous":false,"documentation":null,"id":103,"name":"NewRound","nodeType":"EventDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"indexed":false,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"1685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":97,"indexed":false,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"1701:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":96,"name":"uint64","nodeType":"ElementaryTypeName","src":"1701:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"1715:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":101,"indexed":false,"mutability":"mutable","name":"bet","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"1731:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1684:59:1"},"src":"1670:74:1"},{"anonymous":false,"documentation":null,"id":113,"name":"CardDrawn","nodeType":"EventDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":false,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":113,"src":"1765:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1765:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":113,"src":"1781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":106,"name":"uint64","nodeType":"ElementaryTypeName","src":"1781:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":109,"indexed":false,"mutability":"mutable","name":"cardValue","nodeType":"VariableDeclaration","overrides":null,"scope":113,"src":"1795:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":108,"name":"uint8","nodeType":"ElementaryTypeName","src":"1795:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"indexed":false,"mutability":"mutable","name":"score","nodeType":"VariableDeclaration","overrides":null,"scope":113,"src":"1812:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":110,"name":"uint8","nodeType":"ElementaryTypeName","src":"1812:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"1764:60:1"},"src":"1749:76:1"},{"anonymous":false,"documentation":null,"id":125,"name":"Result","nodeType":"EventDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"indexed":false,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1843:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1843:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":117,"indexed":false,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1859:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":116,"name":"uint64","nodeType":"ElementaryTypeName","src":"1859:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"mutability":"mutable","name":"payout","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1873:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"playerScore","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1889:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":120,"name":"uint8","nodeType":"ElementaryTypeName","src":"1889:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"dealerScore","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1908:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":122,"name":"uint8","nodeType":"ElementaryTypeName","src":"1908:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"1842:84:1"},"src":"1830:97:1"},{"anonymous":false,"documentation":null,"id":135,"name":"PlayerHand","nodeType":"EventDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":135,"src":"1949:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":130,"indexed":false,"mutability":"mutable","name":"playerHand","nodeType":"VariableDeclaration","overrides":null,"scope":135,"src":"1965:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1965:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":null,"nodeType":"ArrayTypeName","src":"1965:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":133,"indexed":false,"mutability":"mutable","name":"playerSplitHand","nodeType":"VariableDeclaration","overrides":null,"scope":135,"src":"1987:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":132,"length":null,"nodeType":"ArrayTypeName","src":"1987:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"1948:65:1"},"src":"1932:82:1"},{"anonymous":false,"documentation":null,"id":139,"name":"LogNewWolframRandomDraw","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":false,"mutability":"mutable","name":"cards","nodeType":"VariableDeclaration","overrides":null,"scope":139,"src":"2049:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":136,"name":"string","nodeType":"ElementaryTypeName","src":"2049:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"2048:14:1"},"src":"2019:44:1"},{"anonymous":false,"documentation":null,"id":143,"name":"LogNewProvableQuery","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"indexed":false,"mutability":"mutable","name":"description","nodeType":"VariableDeclaration","overrides":null,"scope":143,"src":"2094:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":140,"name":"string","nodeType":"ElementaryTypeName","src":"2094:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"2093:20:1"},"src":"2068:46:1"},{"anonymous":false,"documentation":null,"id":149,"name":"Received","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":149,"src":"2134:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":147,"indexed":false,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":149,"src":"2143:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint","nodeType":"ElementaryTypeName","src":"2143:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2133:15:1"},"src":"2119:30:1"},{"body":{"id":158,"nodeType":"Block","src":"2299:39:1","statements":[{"expression":{"argumentTypes":null,"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":153,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"2309:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":154,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2316:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2316:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2309:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":157,"nodeType":"ExpressionStatement","src":"2309:22:1"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"2155:118:1","text":"@dev Functions\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now"},"id":159,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"2289:2:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"2299:0:1"},"scope":1693,"src":"2278:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":162,"nodeType":"Block","src":"2364:2:1","statements":[]},"documentation":null,"id":163,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"2352:2:1"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"2364:0:1"},"scope":1693,"src":"2344:22:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":185,"nodeType":"Block","src":"2399:113:1","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":167,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2423:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2423:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2435:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2435:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":166,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"2414:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2414:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"EmitStatement","src":"2409:36:1"},{"expression":{"argumentTypes":null,"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":173,"name":"maxBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2456:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":178,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2486:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2478:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2478:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2478:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"323030","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2501:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"}],"expression":{"argumentTypes":null,"id":174,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2465:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"2465:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2465:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":184,"nodeType":"ExpressionStatement","src":"2456:49:1"}]},"documentation":null,"id":186,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"2379:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"2399:0:1"},"scope":1693,"src":"2372:140:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":203,"nodeType":"Block","src":"2762:56:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2801:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2801:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":195,"name":"uint160","nodeType":"ElementaryTypeName","src":"2793:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2793:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2785:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"2785:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2785:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":192,"name":"selfdestruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-21,"src":"2772:12:1","typeDescriptions":{"typeIdentifier":"t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"2772:39:1"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"2518:204:1","text":"@dev [Module 10, Lesson 1] Action restriction on critical function\\n @dev [Module 10, Lesson 1] Mortality\\n @dev [Library used] Ownable library from OpenZeppelin is imported and used here."},"functionSelector":"41c0e1b5","id":204,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":190,"modifierName":{"argumentTypes":null,"id":189,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"2750:9:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2750:11:1"}],"name":"kill","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2740:2:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"2762:0:1"},"scope":1693,"src":"2727:91:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":214,"nodeType":"Block","src":"2920:55:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2930:9:1","subExpression":{"argumentTypes":null,"id":208,"name":"stopLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2931:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4369726375697420627265616b657220747269676765726564","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2941:27:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_aad85bb7d0f75aea046e71f447fe022b236c613caede1165f72ebde40bb2ce26","typeString":"literal_string \\"Circuit breaker triggered\\""},"value":"Circuit breaker triggered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aad85bb7d0f75aea046e71f447fe022b236c613caede1165f72ebde40bb2ce26","typeString":"literal_string \\"Circuit breaker triggered\\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2922:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"2922:47:1"},{"id":213,"nodeType":"PlaceholderStatement","src":"2971:1:1"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"2824:64:1","text":"@dev [Module 10, Lesson 1] Circuit breakers implemented here"},"id":215,"name":"stopInEmergency","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"2917:2:1"},"src":"2893:82:1","virtual":false,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"3012:113:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":220,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3030:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":223,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3036:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3036:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3030:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"3030:23:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":225,"name":"_stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3057:6:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"3030:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"46756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d652e","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3065:41:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""},"value":"Function cannot be called at this time."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""}],"id":219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3022:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3022:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"ExpressionStatement","src":"3022:85:1"},{"id":230,"nodeType":"PlaceholderStatement","src":"3117:1:1"}]},"documentation":null,"id":232,"name":"atStage","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"_stage","nodeType":"VariableDeclaration","overrides":null,"scope":232,"src":"2998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":216,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"2998:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"}],"src":"2997:14:1"},"src":"2981:144:1","virtual":false,"visibility":"internal"},{"body":{"id":258,"nodeType":"Block","src":"3182:168:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":239,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3200:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":242,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3206:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3206:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"id":243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"3200:23:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":244,"name":"_stage1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3227:7:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"3200:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":246,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3238:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":249,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3244:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3244:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3238:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"3238:23:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":251,"name":"_stage2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3265:7:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"3238:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3200:72:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"46756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d652e","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3290:41:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""},"value":"Function cannot be called at this time."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3192:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3192:140:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"3192:140:1"},{"id":257,"nodeType":"PlaceholderStatement","src":"3342:1:1"}]},"documentation":null,"id":259,"name":"eitherStage","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_stage1","nodeType":"VariableDeclaration","overrides":null,"scope":259,"src":"3152:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":233,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"3152:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"_stage2","nodeType":"VariableDeclaration","overrides":null,"scope":259,"src":"3167:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":235,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"3167:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"}],"src":"3151:30:1"},"src":"3131:219:1","virtual":false,"visibility":"internal"},{"body":{"id":357,"nodeType":"Block","src":"3727:459:1","statements":[{"assignments":[268],"declarations":[{"constant":false,"id":268,"mutability":"mutable","name":"_now","nodeType":"VariableDeclaration","overrides":null,"scope":357,"src":"3737:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":267,"name":"uint64","nodeType":"ElementaryTypeName","src":"3737:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"id":274,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3758:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3758:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3751:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":269,"name":"uint64","nodeType":"ElementaryTypeName","src":"3751:6:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3751:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"3737:37:1"},{"assignments":[276],"declarations":[{"constant":false,"id":276,"mutability":"mutable","name":"card","nodeType":"VariableDeclaration","overrides":null,"scope":357,"src":"3784:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3784:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":290,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":277,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3801:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"3801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":279,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3815:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3801:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3800:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":282,"name":"_now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3823:4:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3800:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3799:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":285,"name":"NUMBER_OF_DECKS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3832:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"3532","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3848:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"src":"3832:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3831:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3799:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3784:67:1"},{"expression":{"argumentTypes":null,"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":291,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3861:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"3861:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":299,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3910:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"3910:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":301,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3923:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":302,"name":"_now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3929:4:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":297,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3893:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3893:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3893:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":296,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3883:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3883:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3875:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3875:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3875:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3861:75:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":307,"nodeType":"ExpressionStatement","src":"3861:75:1"},{"expression":{"argumentTypes":null,"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":308,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3946:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":314,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3988:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":315,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3994:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":316,"name":"_now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4000:4:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3971:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3971:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":311,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3961:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3961:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3953:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3953:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3946:61:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":321,"nodeType":"ExpressionStatement","src":"3946:61:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":327,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4035:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4018:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4018:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4018:16:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4018:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"4018:22:1"},{"expression":{"argumentTypes":null,"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":330,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4050:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"4050:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":334,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4077:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}],"id":333,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4065:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4065:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4050:34:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":337,"nodeType":"ExpressionStatement","src":"4050:34:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":339,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4110:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"4110:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":341,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"4119:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4119:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":343,"name":"cardValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"4131:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage","typeString":"uint8[13] storage ref"}},"id":352,"indexExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":346,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4148:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3532","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4155:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"src":"4148:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3133","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4160:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"4148:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":344,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4142:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4131:33:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":353,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4166:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"4166:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":338,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4100:9:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_uint8_$_t_uint8_$returns$__$","typeString":"function (uint256,uint64,uint8,uint8)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4100:79:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"EmitStatement","src":"4095:84:1"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"3356:298:1","text":"@dev Need to implement card removal\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n @param game The current game containing the player drawing a card\\n @param player A player from a Blackjack game, holding a hand to draw card to"},"id":358,"implemented":true,"kind":"function","modifiers":[],"name":"drawCard","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":358,"src":"3677:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":261,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"3677:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":358,"src":"3696:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":263,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"3696:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"src":"3676:42:1"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"3727:0:1"},"scope":1693,"src":"3659:527:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":415,"nodeType":"Block","src":"4391:268:1","statements":[{"expression":{"argumentTypes":null,"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":364,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4401:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4401:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":370,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4425:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4425:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4420:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":368,"name":"uint","nodeType":"ElementaryTypeName","src":"4420:4:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4420:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4439:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4420:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":367,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4414:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4414:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"4401:40:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"id":377,"nodeType":"ExpressionStatement","src":"4401:40:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":378,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4455:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4455:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4469:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4469:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"4455:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":383,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4492:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"4492:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4492:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4492:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4492:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4455:70:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":405,"nodeType":"IfStatement","src":"4452:140:1","trueBody":{"id":404,"nodeType":"Block","src":"4527:65:1","statements":[{"expression":{"argumentTypes":null,"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":390,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4541:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4541:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4565:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4565:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"4560:4:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4560:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4560:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4554:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4554:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"4541:40:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"id":403,"nodeType":"ExpressionStatement","src":"4541:40:1"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":407,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4620:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"4620:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":409,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4629:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4629:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":411,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4641:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4641:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"id":406,"name":"StageChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4607:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_enum$_Stage_$18_$returns$__$","typeString":"function (uint256,uint64,enum Blackjack.Stage)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4607:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"EmitStatement","src":"4602:50:1"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"4192:147:1","text":"@dev Could be used for more complex check-reveal scheme for payable functions?\\n @param game The current game which requires stage update"},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"nextStage","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":416,"src":"4363:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":360,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"4363:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"src":"4362:19:1"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"4391:0:1"},"scope":1693,"src":"4344:315:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":561,"nodeType":"Block","src":"5086:881:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5104:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5104:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":425,"name":"maxBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"5117:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5104:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426574206d757374206265206c657373207468616e20746865206d6178206265742e","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5125:36:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_48ef49f85e10a1ea2b9f9dbc372513e1ccb2ae8dbf54a83aa45c4c48827d4e5b","typeString":"literal_string \\"Bet must be less than the max bet.\\""},"value":"Bet must be less than the max bet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48ef49f85e10a1ea2b9f9dbc372513e1ccb2ae8dbf54a83aa45c4c48827d4e5b","typeString":"literal_string \\"Bet must be less than the max bet.\\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5096:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5096:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5096:66:1"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"_seed","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5173:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":432,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"5173:13:1"},{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"_now","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5196:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":433,"name":"uint64","nodeType":"ElementaryTypeName","src":"5196:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"id":440,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":437,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5217:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5217:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5210:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":435,"name":"uint64","nodeType":"ElementaryTypeName","src":"5210:6:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5210:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"5196:37:1"},{"assignments":[442],"declarations":[{"constant":false,"id":442,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5243:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"5243:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":455,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":448,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5291:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5291:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":450,"name":"_now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"5305:4:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":451,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5311:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":446,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5274:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5274:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5274:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":445,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5264:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5264:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5256:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5256:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5243:76:1"},{"expression":{"argumentTypes":null,"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":456,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"5330:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"id":457,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"5338:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5330:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":459,"nodeType":"ExpressionStatement","src":"5330:12:1"},{"assignments":[461],"declarations":[{"constant":false,"id":461,"mutability":"mutable","name":"dealer","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5353:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":460,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"5353:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"id":462,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"5353:20:1"},{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5383:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":463,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"5383:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"id":465,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"5383:20:1"},{"assignments":[467],"declarations":[{"constant":false,"id":467,"mutability":"mutable","name":"splitPlayer","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5413:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":466,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"5413:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"id":468,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"5413:25:1"},{"expression":{"argumentTypes":null,"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":469,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"5449:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":472,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5455:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5455:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5449:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":474,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5474:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":475,"name":"_now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"5478:4:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"hexValue":"30","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5484:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":477,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"5487:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Bet","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5487:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},{"argumentTypes":null,"id":479,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5498:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}},{"argumentTypes":null,"id":480,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5506:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}},{"argumentTypes":null,"id":481,"name":"splitPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"5514:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}],"id":473,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"5469:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$33_storage_ptr_$","typeString":"type(struct Blackjack.Game storage pointer)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5469:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_memory_ptr","typeString":"struct Blackjack.Game memory"}},"src":"5449:77:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"id":484,"nodeType":"ExpressionStatement","src":"5449:77:1"},{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":561,"src":"5536:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":485,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"5536:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":491,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":487,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"5556:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":490,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5562:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5562:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5556:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5536:37:1"},{"expression":{"argumentTypes":null,"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":492,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5608:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"5608:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"5608:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5626:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5626:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5608:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"5608:27:1"},{"expression":{"argumentTypes":null,"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":501,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5645:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"5645:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"5645:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"5664:6:1","subExpression":{"argumentTypes":null,"id":506,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5665:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5645:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":509,"nodeType":"ExpressionStatement","src":"5645:25:1"},{"expression":{"argumentTypes":null,"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":510,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5680:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"5680:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"5680:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":515,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5699:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5680:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":517,"nodeType":"ExpressionStatement","src":"5680:24:1"},{"expression":{"argumentTypes":null,"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":518,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5714:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"5714:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":39,"src":"5714:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":523,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5738:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5714:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":525,"nodeType":"ExpressionStatement","src":"5714:29:1"},{"expression":{"argumentTypes":null,"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5753:12:1","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":526,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5753:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"5753:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":530,"nodeType":"ExpressionStatement","src":"5753:12:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":532,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5790:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":534,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5799:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"5799:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5811:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5811:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5823:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5823:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"NewRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"5781:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint64,address,uint256)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5781:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"EmitStatement","src":"5776:57:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":543,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5854:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":542,"name":"dealCards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"5844:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5844:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"ExpressionStatement","src":"5844:15:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":547,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5885:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5885:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":549,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5894:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"5894:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"5894:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":552,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5912:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"5912:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"5912:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":546,"name":"PlayerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5874:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory,uint256[] memory)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5874:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"EmitStatement","src":"5869:65:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":558,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5955:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":557,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5945:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5945:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"5945:15:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"4665:365:1","text":"@notice Start a new round of Blackjack with the transferred value as the original bet.\\n @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n @dev Plan to split this into multiple functions such that placing bet is atomic before proceeding"},"functionSelector":"c5b1d9aa","id":562,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":420,"modifierName":{"argumentTypes":null,"id":419,"name":"stopInEmergency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5070:15:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5070:15:1"}],"name":"newRound","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"5052:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"5086:0:1"},"scope":1693,"src":"5035:932:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":655,"nodeType":"Block","src":"6162:451:1","statements":[{"expression":{"argumentTypes":null,"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":568,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6172:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6172:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":571,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"6185:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Bet","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6185:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"6172:22:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"id":574,"nodeType":"ExpressionStatement","src":"6172:22:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":576,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6222:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"6222:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":578,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6231:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6231:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":580,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6243:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6243:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"id":575,"name":"StageChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"6209:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_enum$_Stage_$18_$returns$__$","typeString":"function (uint256,uint64,enum Blackjack.Stage)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"EmitStatement","src":"6204:50:1"},{"expression":{"argumentTypes":null,"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":584,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6265:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6265:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"6265:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6265:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"6265:19:1"},{"expression":{"argumentTypes":null,"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":592,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6294:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6294:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"6294:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6322:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6294:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6294:29:1"},{"expression":{"argumentTypes":null,"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":600,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6333:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6333:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"6333:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6333:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ExpressionStatement","src":"6333:24:1"},{"expression":{"argumentTypes":null,"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":608,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6367:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6367:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"6367:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6400:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6367:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":615,"nodeType":"ExpressionStatement","src":"6367:34:1"},{"expression":{"argumentTypes":null,"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":616,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6412:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6412:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"6412:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6432:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6412:21:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":623,"nodeType":"ExpressionStatement","src":"6412:21:1"},{"expression":{"argumentTypes":null,"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6443:23:1","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":624,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6450:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6450:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6450:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"6443:23:1"},{"expression":{"argumentTypes":null,"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":629,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6477:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6477:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"6477:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6502:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6477:26:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":636,"nodeType":"ExpressionStatement","src":"6477:26:1"},{"expression":{"argumentTypes":null,"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6513:28:1","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":637,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6520:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6520:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6520:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"6513:28:1"},{"expression":{"argumentTypes":null,"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":642,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6552:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"6552:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"6552:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6572:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6552:21:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":649,"nodeType":"ExpressionStatement","src":"6552:21:1"},{"expression":{"argumentTypes":null,"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6583:23:1","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6590:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"6590:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6590:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"6583:23:1"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"5973:141:1","text":"@dev Not sure this is optimized in terms of stage updates and call timing\\n @param game The current game which requires stage reset"},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":656,"src":"6134:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":564,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"6134:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"src":"6133:19:1"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"6162:0:1"},"scope":1693,"src":"6119:494:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"6851:361:1","statements":[{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"numberOfAces","nodeType":"VariableDeclaration","overrides":null,"scope":726,"src":"6861:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":664,"name":"uint8","nodeType":"ElementaryTypeName","src":"6861:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"id":667,"initialValue":{"argumentTypes":null,"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6882:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6861:22:1"},{"body":{"id":708,"nodeType":"Block","src":"6940:154:1","statements":[{"assignments":[681],"declarations":[{"constant":false,"id":681,"mutability":"mutable","name":"card","nodeType":"VariableDeclaration","overrides":null,"scope":708,"src":"6954:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":680,"name":"uint8","nodeType":"ElementaryTypeName","src":"6954:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"id":694,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":685,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6976:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6976:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":688,"indexExpression":{"argumentTypes":null,"id":687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"6988:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6976:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3532","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6993:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"src":"6976:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3133","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6998:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"6976:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"components":[{"argumentTypes":null,"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6968:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":682,"name":"uint8","nodeType":"ElementaryTypeName","src":"6968:5:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}}],"id":684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6967:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6967:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6954:47:1"},{"expression":{"argumentTypes":null,"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":695,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7015:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":696,"name":"cardValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7024:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage","typeString":"uint8[13] storage ref"}},"id":698,"indexExpression":{"argumentTypes":null,"id":697,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"7035:4:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7024:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7015:25:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":700,"nodeType":"ExpressionStatement","src":"7015:25:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":701,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"7058:4:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7066:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7058:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":707,"nodeType":"IfStatement","src":"7054:29:1","trueBody":{"expression":{"argumentTypes":null,"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7069:14:1","subExpression":{"argumentTypes":null,"id":704,"name":"numberOfAces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7069:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":706,"nodeType":"ExpressionStatement","src":"7069:14:1"}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"6911:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":673,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6915:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6915:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6915:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6911:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"initializationExpression":{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":709,"src":"6898:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":668,"name":"uint8","nodeType":"ElementaryTypeName","src":"6898:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"id":671,"initialValue":{"argumentTypes":null,"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6908:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6898:11:1"},"loopExpression":{"expression":{"argumentTypes":null,"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6935:3:1","subExpression":{"argumentTypes":null,"id":677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"6935:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":679,"nodeType":"ExpressionStatement","src":"6935:3:1"},"nodeType":"ForStatement","src":"6893:201:1"},{"body":{"id":724,"nodeType":"Block","src":"7142:64:1","statements":[{"expression":{"argumentTypes":null,"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":717,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7156:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"argumentTypes":null,"hexValue":"3130","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7165:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7156:11:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":720,"nodeType":"ExpressionStatement","src":"7156:11:1"},{"expression":{"argumentTypes":null,"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7181:14:1","subExpression":{"argumentTypes":null,"id":721,"name":"numberOfAces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7181:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":723,"nodeType":"ExpressionStatement","src":"7181:14:1"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":710,"name":"numberOfAces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7110:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7125:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7110:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":713,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7130:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7138:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"7130:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7110:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":725,"nodeType":"WhileStatement","src":"7103:103:1"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"6619:148:1","text":"@param player A player from a Blackjack game, holding a hand to calculate the score on\\n @return score The Blackjack score for the player."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"recalculate","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":727,"src":"6793:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":658,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"6793:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"src":"6792:23:1"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"score","nodeType":"VariableDeclaration","overrides":null,"scope":727,"src":"6838:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":661,"name":"uint8","nodeType":"ElementaryTypeName","src":"6838:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"6837:13:1"},"scope":1693,"src":"6772:440:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":755,"nodeType":"Block","src":"7378:118:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":738,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7397:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":739,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7403:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"7403:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":737,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"7388:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7388:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"ExpressionStatement","src":"7388:27:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":744,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7434:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":745,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7440:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"7440:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":743,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"7425:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7425:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"7425:27:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":750,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7471:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":751,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7477:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"7477:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":749,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"7462:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7462:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"7462:27:1"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"7218:90:1","text":"@dev done only at start of hand\\n @param game The current game which is starting"},"id":756,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":733,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"7367:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Bet","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7367:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"id":735,"modifierName":{"argumentTypes":null,"id":732,"name":"atStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7359:7:1","typeDescriptions":{"typeIdentifier":"t_modifier$_t_enum$_Stage_$18_$","typeString":"modifier (enum Blackjack.Stage)"}},"nodeType":"ModifierInvocation","src":"7359:18:1"}],"name":"dealCards","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":756,"src":"7332:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":729,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"7332:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"src":"7331:19:1"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"7378:0:1"},"scope":1693,"src":"7313:183:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":901,"nodeType":"Block","src":"7777:844:1","statements":[{"assignments":[765],"declarations":[{"constant":false,"id":765,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"7788:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":764,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"7788:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":770,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":766,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"7808:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":769,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7814:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7814:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7808:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7788:37:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7844:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7844:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":774,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7857:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"7857:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"7857:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7844:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d757374206d61746368206f726967696e616c2062657420746f2073706c6974","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7874:34:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_621b42780cb140b59536f8fb89038f50afb971eea71a344e5bf15f0e581246bc","typeString":"literal_string \\"Must match original bet to split\\""},"value":"Must match original bet to split"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_621b42780cb140b59536f8fb89038f50afb971eea71a344e5bf15f0e581246bc","typeString":"literal_string \\"Must match original bet to split\\""}],"id":771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7836:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7836:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"7836:73:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":782,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7927:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"7927:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"7927:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7927:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7954:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7927:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e206f6e6c792073706c697420776974682074776f206361726473","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7957:31:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_82d1f0a4a0f0c9c2cb4e55e341ddc65c69cc4aa1f581117667da84111d451660","typeString":"literal_string \\"Can only split with two cards\\""},"value":"Can only split with two cards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82d1f0a4a0f0c9c2cb4e55e341ddc65c69cc4aa1f581117667da84111d451660","typeString":"literal_string \\"Can only split with two cards\\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7919:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7919:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"7919:70:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":792,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8007:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8007:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8007:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8007:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8039:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8007:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e206f6e6c792073706c6974206f6e6365","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8042:21:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ee0b85790739927cb9cbe0e9c0d6fc50bda7cf8c5c048a825f0d018305c400a5","typeString":"literal_string \\"Can only split once\\""},"value":"Can only split once"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee0b85790739927cb9cbe0e9c0d6fc50bda7cf8c5c048a825f0d018305c400a5","typeString":"literal_string \\"Can only split once\\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7999:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7999:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"7999:65:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":802,"name":"cardValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8082:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage","typeString":"uint8[13] storage ref"}},"id":810,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":803,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8093:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8093:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8093:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":807,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8093:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3133","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8115:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"8093:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8082:36:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":811,"name":"cardValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8122:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$13_storage","typeString":"uint8[13] storage ref"}},"id":819,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":812,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8133:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8133:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8133:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":816,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8150:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8133:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3133","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8155:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"8133:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8122:36:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8082:76:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"46697273742074776f206361726473206d7573742062652073616d65","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8176:30:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6b654e7be49beb2682aa99367bc52163dc91df06c10b7bc3eb3902c610f3cee3","typeString":"literal_string \\"First two cards must be same\\""},"value":"First two cards must be same"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b654e7be49beb2682aa99367bc52163dc91df06c10b7bc3eb3902c610f3cee3","typeString":"literal_string \\"First two cards must be same\\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8074:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:133:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"8074:133:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":831,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8245:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8245:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8245:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":835,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8262:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8245:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":824,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8218:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8218:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8218:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8218:26:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8218:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"8218:47:1"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":838,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8275:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8275:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8275:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8275:20:1","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8275:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"8275:22:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":848,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8317:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":849,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8323:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8323:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":847,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"8308:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8308:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"8308:27:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":854,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8354:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":855,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8360:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8360:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":853,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"8345:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8345:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"8345:32:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":860,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8403:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"8403:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":862,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8412:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8412:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8412:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":865,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8430:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8430:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"8430:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":859,"name":"PlayerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8392:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory,uint256[] memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8392:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"8387:65:1"},{"expression":{"argumentTypes":null,"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":870,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8463:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8463:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8463:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":876,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8495:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8495:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":875,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8483:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8463:44:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":880,"nodeType":"ExpressionStatement","src":"8463:44:1"},{"expression":{"argumentTypes":null,"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":881,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8517:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8517:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8517:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":887,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8554:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8554:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":886,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8542:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8542:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8517:54:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":891,"nodeType":"ExpressionStatement","src":"8517:54:1"},{"expression":{"argumentTypes":null,"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":892,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8582:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"8582:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"8582:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8605:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8605:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8582:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ExpressionStatement","src":"8582:32:1"}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"7502:214:1","text":"@notice Split first two cards into two hands, drawing one additional card for each. An equivalent bet value is required.\\n @dev not working correctly on last check - the require for bet size was reverting"},"functionSelector":"f7654176","id":902,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":760,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"7761:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7761:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"id":762,"modifierName":{"argumentTypes":null,"id":759,"name":"atStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_modifier$_t_enum$_Stage_$18_$","typeString":"modifier (enum Blackjack.Stage)"}},"nodeType":"ModifierInvocation","src":"7753:23:1"}],"name":"split","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"7735:2:1"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":1693,"src":"7721:900:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1053,"nodeType":"Block","src":"8986:1010:1","statements":[{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1053,"src":"8996:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":912,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"8996:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":918,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":914,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"9016:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":917,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9022:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9022:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9016:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8996:37:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":920,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9053:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9053:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"9053:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9053:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9080:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9053:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":926,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9085:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"9085:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":928,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"9099:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9099:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"9085:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9053:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9052:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":933,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9135:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9135:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"9135:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9135:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9167:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9135:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":939,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9172:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"9172:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":941,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"9186:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9186:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"9172:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9135:70:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9134:72:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9052:154:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e206f6e6c7920646f75626c6520646f776e20776974682074776f206361726473","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9224:37:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_87b19402fddb30cd2feae4503e4b7db798849e63a738e6727e358d9b53da79d9","typeString":"literal_string \\"Can only double down with two cards\\""},"value":"Can only double down with two cards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87b19402fddb30cd2feae4503e4b7db798849e63a738e6727e358d9b53da79d9","typeString":"literal_string \\"Can only double down with two cards\\""}],"id":919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9044:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9044:218:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9044:218:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":951,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9280:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9280:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":953,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9293:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9293:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"9293:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9280:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4265742063616e6e6f742062652067726561746572207468616e206f726967696e616c20626574","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9310:41:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b6ec20e5b462460fe49f164efb32dbcf3aa972a459a40a8614386396ce7d613b","typeString":"literal_string \\"Bet cannot be greater than original bet\\""},"value":"Bet cannot be greater than original bet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6ec20e5b462460fe49f164efb32dbcf3aa972a459a40a8614386396ce7d613b","typeString":"literal_string \\"Bet cannot be greater than original bet\\""}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9272:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9272:80:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"9272:80:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":960,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9367:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"9367:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":962,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"9381:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9381:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"9367:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":998,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9611:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"9611:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1000,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"9625:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9625:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"9611:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1036,"nodeType":"IfStatement","src":"9607:266:1","trueBody":{"id":1035,"nodeType":"Block","src":"9646:227:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1004,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9669:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1005,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9675:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9675:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1003,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"9660:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9660:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"9660:32:1"},{"expression":{"argumentTypes":null,"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1009,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9706:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9706:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"9706:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1016,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9752:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9752:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"9752:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9784:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9784:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1014,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9739:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"9739:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9739:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9706:88:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"9706:88:1"},{"expression":{"argumentTypes":null,"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1024,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9808:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9808:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"9808:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1030,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9845:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"9845:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1029,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9833:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9808:54:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1034,"nodeType":"ExpressionStatement","src":"9808:54:1"}]}},"id":1037,"nodeType":"IfStatement","src":"9363:510:1","trueBody":{"id":997,"nodeType":"Block","src":"9397:204:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":966,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9420:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":967,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9426:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9426:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":965,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"9411:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9411:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"9411:27:1"},{"expression":{"argumentTypes":null,"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":971,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9452:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9452:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"9452:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":978,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9493:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9493:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"9493:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9520:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9520:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":976,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9480:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"9480:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9480:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9452:78:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"9452:78:1"},{"expression":{"argumentTypes":null,"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":986,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9544:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9544:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"9544:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":992,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9576:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"9576:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":991,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9564:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9564:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9544:44:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":996,"nodeType":"ExpressionStatement","src":"9544:44:1"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1039,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9893:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1038,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"9883:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9883:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"9883:15:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1042,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9912:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"9912:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1044,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"9926:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ConcludeHands","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9926:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"9912:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1052,"nodeType":"IfStatement","src":"9909:81:1","trueBody":{"id":1051,"nodeType":"Block","src":"9947:43:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1048,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9974:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1047,"name":"concludeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"9961:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9961:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"9961:18:1"}]}}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"8627:268:1","text":"@notice Double down on first two cards, taking one additional card and standing, with an opportunity to double original bet.\\n @dev is this vulnerable to OOG leaking drawn card info?\\n @dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath"},"functionSelector":"a7e1f6a2","id":1054,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":906,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"8949:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8949:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":908,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"8965:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8965:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"id":910,"modifierName":{"argumentTypes":null,"id":905,"name":"eitherStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8937:11:1","typeDescriptions":{"typeIdentifier":"t_modifier$_t_enum$_Stage_$18_$_t_enum$_Stage_$18_$","typeString":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)"}},"nodeType":"ModifierInvocation","src":"8937:48:1"}],"name":"doubleDown","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"8919:2:1"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"8986:0:1"},"scope":1693,"src":"8900:1096:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1174,"nodeType":"Block","src":"10206:793:1","statements":[{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1174,"src":"10216:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1064,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"10216:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":1070,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1066,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"10236:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":1069,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10242:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10242:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10236:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10216:37:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1072,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10272:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"10272:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10272:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10292:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"10272:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1077,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10299:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"10299:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1079,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"10313:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10313:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"10299:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10272:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1083,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10332:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10332:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10332:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"10332:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1088,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10363:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"10363:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1090,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"10377:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10377:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"10363:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10332:64:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10331:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10272:125:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10264:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10264:134:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"10264:134:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1098,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10413:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"10413:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1100,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"10427:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10427:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"10413:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1172,"nodeType":"Block","src":"10768:225:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1145,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10792:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1146,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10798:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10798:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1144,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"10783:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10783:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"10783:32:1"},{"expression":{"argumentTypes":null,"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1150,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10829:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10829:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10829:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1156,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10866:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10866:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1155,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10854:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10854:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10829:54:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1160,"nodeType":"ExpressionStatement","src":"10829:54:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1161,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10902:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10902:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10902:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10928:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"10902:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1171,"nodeType":"IfStatement","src":"10898:85:1","trueBody":{"id":1170,"nodeType":"Block","src":"10932:51:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1167,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10963:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1166,"name":"concludeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"10950:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10950:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"10950:18:1"}]}}]},"id":1173,"nodeType":"IfStatement","src":"10409:584:1","trueBody":{"id":1143,"nodeType":"Block","src":"10443:319:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1104,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10467:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1105,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10473:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"10473:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1103,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"10458:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10458:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"10458:27:1"},{"expression":{"argumentTypes":null,"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1109,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10499:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"10499:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10499:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1115,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10531:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"10531:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1114,"name":"recalculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10519:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Player_$45_storage_ptr_$returns$_t_uint8_$","typeString":"function (struct Blackjack.Player storage pointer) view returns (uint8)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10519:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10499:44:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1119,"nodeType":"ExpressionStatement","src":"10499:44:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1120,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10562:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"10562:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10562:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10583:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"10562:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1142,"nodeType":"IfStatement","src":"10558:193:1","trueBody":{"id":1141,"nodeType":"Block","src":"10587:164:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1126,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10615:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1125,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"10605:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10605:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10605:15:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1129,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10643:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"10643:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"10643:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10643:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10675:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10643:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1140,"nodeType":"IfStatement","src":"10639:98:1","trueBody":{"id":1139,"nodeType":"Block","src":"10678:59:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1136,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10713:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1135,"name":"concludeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"10700:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10700:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"10700:18:1"}]}}]}}]}}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"10002:128:1","text":"@notice Hit, taking one additional card on the current hand.\\n @dev is this vulnerable to OOG leaking drawn card info?"},"functionSelector":"2ae3594a","id":1175,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1058,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"10169:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10169:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1060,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"10185:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10185:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"id":1062,"modifierName":{"argumentTypes":null,"id":1057,"name":"eitherStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10157:11:1","typeDescriptions":{"typeIdentifier":"t_modifier$_t_enum$_Stage_$18_$_t_enum$_Stage_$18_$","typeString":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)"}},"nodeType":"ModifierInvocation","src":"10157:48:1"}],"name":"hit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"10147:2:1"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"10206:0:1"},"scope":1693,"src":"10135:864:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1226,"nodeType":"Block","src":"11239:314:1","statements":[{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1226,"src":"11249:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1185,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"11249:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":1191,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1187,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"11269:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":1190,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11275:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11275:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11269:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11249:37:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1192,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11301:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"11301:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1194,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"11315:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11315:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"11301:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1197,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11333:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"11333:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"11333:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11333:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11365:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11333:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11301:65:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11300:67:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1205,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11382:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"11382:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1207,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"11396:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11396:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"11382:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11300:115:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1224,"nodeType":"Block","src":"11507:40:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1221,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11531:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1220,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"11521:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11521:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"11521:15:1"}]},"id":1225,"nodeType":"IfStatement","src":"11297:250:1","trueBody":{"id":1219,"nodeType":"Block","src":"11429:72:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1212,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11453:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1211,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"11443:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11443:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"ExpressionStatement","src":"11443:15:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1216,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11485:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1215,"name":"concludeGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"11472:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11472:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"11472:18:1"}]}}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"11005:156:1","text":"@notice Standing, taking no more additional cards and concluding the current hand.\\n @dev is this vulnerable to gas limit leaking drawn card info?"},"functionSelector":"c2897b10","id":1227,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1179,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"11202:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlayHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11202:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1181,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"11218:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$18_$","typeString":"type(enum Blackjack.Stage)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PlaySplitHand","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11218:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}}],"id":1183,"modifierName":{"argumentTypes":null,"id":1178,"name":"eitherStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11190:11:1","typeDescriptions":{"typeIdentifier":"t_modifier$_t_enum$_Stage_$18_$_t_enum$_Stage_$18_$","typeString":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)"}},"nodeType":"ModifierInvocation","src":"11190:48:1"}],"name":"stand","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"11180:2:1"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"11239:0:1"},"scope":1693,"src":"11166:387:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1315,"nodeType":"Block","src":"11880:703:1","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1235,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"11909:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"11909:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"11909:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11929:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"11909:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1240,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"11935:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"11935:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"11935:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11935:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11967:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11935:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11909:59:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11908:61:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1248,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"11986:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"11986:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"11986:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"11986:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1253,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12012:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"12012:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12012:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12037:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"12012:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11986:53:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11985:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11908:132:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1313,"nodeType":"Block","src":"12270:306:1","statements":[{"body":{"id":1311,"nodeType":"Block","src":"12375:191:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1290,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12402:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1291,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12408:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12408:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1289,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"12393:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12393:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"12393:27:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1295,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12443:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12443:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12443:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12464:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"12443:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1300,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12470:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12470:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"12470:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12470:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12497:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12470:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12443:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1310,"nodeType":"IfStatement","src":"12439:113:1","trueBody":{"id":1309,"nodeType":"Block","src":"12500:52:1","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12529:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1234,"id":1308,"nodeType":"Return","src":"12522:11:1"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1284,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12351:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12351:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12351:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3137","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12371:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"12351:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1312,"nodeType":"WhileStatement","src":"12344:222:1"}]},"id":1314,"nodeType":"IfStatement","src":"11891:685:1","trueBody":{"id":1283,"nodeType":"Block","src":"12055:209:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1262,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12078:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1263,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12084:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12084:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"id":1261,"name":"drawCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"12069:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$returns$__$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12069:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"ExpressionStatement","src":"12069:27:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1267,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12153:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12153:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12153:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12174:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"12153:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1272,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12180:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"12180:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"12180:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12180:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12207:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12180:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12153:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1282,"nodeType":"IfStatement","src":"12149:105:1","trueBody":{"id":1281,"nodeType":"Block","src":"12210:44:1","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12235:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1234,"id":1280,"nodeType":"Return","src":"12228:11:1"}]}}]}}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"11559:249:1","text":"@dev TODO: Change dealer rules from S17 to H17\\n @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n @param game The concluded Blackjack game\\n @return bool Whether the dealer has Blackjack"},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"drawDealerCards","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1316,"src":"11838:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1229,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"11838:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"src":"11837:19:1"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1316,"src":"11874:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1232,"name":"bool","nodeType":"ElementaryTypeName","src":"11874:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11873:6:1"},"scope":1693,"src":"11813:770:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1444,"nodeType":"Block","src":"12873:992:1","statements":[{"assignments":[1325],"declarations":[{"constant":false,"id":1325,"mutability":"mutable","name":"payout","nodeType":"VariableDeclaration","overrides":null,"scope":1444,"src":"12883:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint","nodeType":"ElementaryTypeName","src":"12883:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1327,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12897:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12883:15:1"},{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"dealerHasBJ","nodeType":"VariableDeclaration","overrides":null,"scope":1444,"src":"12909:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"12909:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1333,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1331,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"12944:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"id":1330,"name":"drawDealerCards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"12928:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$33_storage_ptr_$returns$_t_bool_$","typeString":"function (struct Blackjack.Game storage pointer) returns (bool)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12928:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12909:40:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1334,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"12964:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"12964:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12964:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12985:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"12964:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1353,"nodeType":"IfStatement","src":"12960:133:1","trueBody":{"id":1352,"nodeType":"Block","src":"12989:104:1","statements":[{"expression":{"argumentTypes":null,"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1339,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13003:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1342,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13025:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1344,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13049:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1345,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13055:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"13055:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},{"argumentTypes":null,"id":1347,"name":"dealerHasBJ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"13068:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1343,"name":"calculatePayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"13033:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$_t_bool_$returns$_t_uint256_$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer,bool) view returns (uint256)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13033:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1340,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"13012:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"13012:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13012:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13003:79:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1351,"nodeType":"ExpressionStatement","src":"13003:79:1"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1354,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13107:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"13107:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"13107:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13133:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"13107:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1373,"nodeType":"IfStatement","src":"13103:143:1","trueBody":{"id":1372,"nodeType":"Block","src":"13137:109:1","statements":[{"expression":{"argumentTypes":null,"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1359,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13151:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1362,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13173:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1364,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13197:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1365,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13203:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"13203:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},{"argumentTypes":null,"id":1367,"name":"dealerHasBJ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"13221:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1363,"name":"calculatePayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"13181:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Game_$33_storage_ptr_$_t_struct$_Player_$45_storage_ptr_$_t_bool_$returns$_t_uint256_$","typeString":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer,bool) view returns (uint256)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13181:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1360,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"13160:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"13160:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13160:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13151:84:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"nodeType":"ExpressionStatement","src":"13151:84:1"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1375,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13264:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1378,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13287:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"13287:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"13287:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"38","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13304:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"argumentTypes":null,"id":1376,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"13274:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"13274:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13274:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13264:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4465616c6572206572726f72202d207061796f757420697320746f6f20686967682e","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13308:36:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a009e10a9224e2becc186eede67e98bdaf8dffaa5ae42f721a75047ae64ec0ce","typeString":"literal_string \\"Dealer error - payout is too high.\\""},"value":"Dealer error - payout is too high."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a009e10a9224e2becc186eede67e98bdaf8dffaa5ae42f721a75047ae64ec0ce","typeString":"literal_string \\"Dealer error - payout is too high.\\""}],"id":1374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13256:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13256:89:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"13256:89:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1387,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13398:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13408:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13398:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1407,"nodeType":"Block","src":"13528:65:1","statements":[{"expression":{"argumentTypes":null,"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1403,"name":"lossCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"13542:11:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13556:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13542:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1406,"nodeType":"ExpressionStatement","src":"13542:15:1"}]},"id":1408,"nodeType":"IfStatement","src":"13394:199:1","trueBody":{"id":1402,"nodeType":"Block","src":"13411:111:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1395,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13445:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13425:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13425:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13425:19:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13425:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"ExpressionStatement","src":"13425:27:1"},{"expression":{"argumentTypes":null,"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1398,"name":"lossCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"13466:11:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13481:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13466:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1401,"nodeType":"ExpressionStatement","src":"13466:16:1"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1409,"name":"lossCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"13638:11:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1410,"name":"lossLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"13653:9:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13638:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1417,"nodeType":"IfStatement","src":"13634:50:1","trueBody":{"id":1416,"nodeType":"Block","src":"13664:20:1","statements":[{"expression":{"argumentTypes":null,"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1412,"name":"stopLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"13666:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13677:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13666:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"ExpressionStatement","src":"13666:15:1"}]}},{"expression":{"argumentTypes":null,"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1418,"name":"maxBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"13720:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1423,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13750:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13742:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"13742:7:1","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13742:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13742:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"323030","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13765:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"}],"expression":{"argumentTypes":null,"id":1419,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"13729:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"13729:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13729:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"13720:49:1"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1431,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13792:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"13792:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1433,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13801:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"13801:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":1435,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"13813:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1436,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13821:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"13821:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"13821:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1439,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"13840:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"13840:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"13840:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1430,"name":"Result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"13785:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$","typeString":"function (uint256,uint64,uint256,uint8,uint8)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13785:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"EmitStatement","src":"13780:78:1"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"12589:214:1","text":"@dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n @param game The game to conclude, paying out players if necessary"},"id":1445,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1322,"modifierName":{"argumentTypes":null,"id":1321,"name":"stopInEmergency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"12857:15:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12857:15:1"}],"name":"concludeGame","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1445,"src":"12830:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1318,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"12830:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"src":"12829:19:1"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"12873:0:1"},"scope":1693,"src":"12808:1057:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1538,"nodeType":"Block","src":"14362:547:1","statements":[{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"dealer","nodeType":"VariableDeclaration","overrides":null,"scope":1538,"src":"14372:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":1457,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"14372:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"}],"id":1461,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1459,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"14395:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"14395:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14372:34:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1462,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14421:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14421:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14437:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"14421:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1466,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14443:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"14443:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14443:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"32","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14465:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14443:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14421:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14470:12:1","subExpression":{"argumentTypes":null,"id":1472,"name":"dealerHasBJ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"14471:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14421:61:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1489,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14594:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14594:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1491,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"14609:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":1492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14609:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14594:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1494,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"14625:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14625:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14641:2:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"14625:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14594:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1514,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14752:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14752:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1516,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"14768:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"14768:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14752:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1534,"nodeType":"Block","src":"14868:35:1","statements":[{"expression":{"argumentTypes":null,"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1530,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"14882:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14891:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14882:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1533,"nodeType":"ExpressionStatement","src":"14882:10:1"}]},"id":1535,"nodeType":"IfStatement","src":"14748:155:1","trueBody":{"id":1529,"nodeType":"Block","src":"14782:80:1","statements":[{"expression":{"argumentTypes":null,"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1519,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"14796:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1522,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14818:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14818:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1524,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14830:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"14830:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1520,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14805:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"14805:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14805:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14796:55:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"14796:55:1"}]}},"id":1536,"nodeType":"IfStatement","src":"14590:313:1","trueBody":{"id":1513,"nodeType":"Block","src":"14645:97:1","statements":[{"expression":{"argumentTypes":null,"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1499,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"14659:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1504,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14694:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14694:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1506,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14706:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"14706:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1502,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14681:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"14681:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14681:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"32","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14729:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"argumentTypes":null,"id":1500,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14668:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"14668:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14668:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14659:72:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"nodeType":"ExpressionStatement","src":"14659:72:1"}]}},"id":1537,"nodeType":"IfStatement","src":"14417:486:1","trueBody":{"id":1488,"nodeType":"Block","src":"14484:100:1","statements":[{"expression":{"argumentTypes":null,"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1475,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"14498:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1480,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"14533:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14533:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"35","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14545:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"expression":{"argumentTypes":null,"id":1478,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14520:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"14520:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14520:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"32","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14549:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"argumentTypes":null,"id":1476,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14507:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2077_$","typeString":"type(library SafeMath)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"14507:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14507:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14498:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"14498:53:1"}]}}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"13871:363:1","text":"@dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n @param game The concluded Blackjack game\\n @param player A player from the game to calculate the payout for\\n @return payout Amount of ether to transfer to player for winnings"},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePayout","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1539,"src":"14264:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1447,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"14264:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"player","nodeType":"VariableDeclaration","overrides":null,"scope":1539,"src":"14283:21:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"contractScope":null,"id":1449,"name":"Player","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"14283:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player"}},"value":null,"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"dealerHasBJ","nodeType":"VariableDeclaration","overrides":null,"scope":1539,"src":"14306:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1451,"name":"bool","nodeType":"ElementaryTypeName","src":"14306:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"14263:60:1"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"payout","nodeType":"VariableDeclaration","overrides":null,"scope":1539,"src":"14346:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"14346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14345:16:1"},"scope":1693,"src":"14239:670:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1567,"nodeType":"Block","src":"15104:122:1","statements":[{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1567,"src":"15114:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1548,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"15114:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":1554,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1550,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"15134:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":1553,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15140:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15140:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15134:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15114:37:1"},{"expression":{"argumentTypes":null,"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1555,"name":"hand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"15161:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1556,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"15168:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"15168:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"15168:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"src":"15161:23:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1560,"nodeType":"ExpressionStatement","src":"15161:23:1"},{"expression":{"argumentTypes":null,"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1561,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"15194:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1562,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"15202:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":28,"src":"15202:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"15202:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15194:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"15194:25:1"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"14915:99:1","text":"Getters\\n @notice Returns the dealer\'s opened hand\\n @return hand The dealer\'s hand"},"functionSelector":"76957756","id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"getDealerState","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"15042:2:1"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"hand","nodeType":"VariableDeclaration","overrides":null,"scope":1568,"src":"15066:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"15066:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"length":null,"nodeType":"ArrayTypeName","src":"15066:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"score","nodeType":"VariableDeclaration","overrides":null,"scope":1568,"src":"15089:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"15089:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15065:38:1"},"scope":1693,"src":"15019:207:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1645,"nodeType":"Block","src":"15933:402:1","statements":[{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1645,"src":"15943:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1590,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"15943:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":1596,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1592,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"15963:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":1595,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15969:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15969:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15963:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15943:37:1"},{"expression":{"argumentTypes":null,"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1597,"name":"hand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"15990:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1598,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15997:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"15997:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"15997:16:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"src":"15990:23:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1602,"nodeType":"ExpressionStatement","src":"15990:23:1"},{"expression":{"argumentTypes":null,"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1603,"name":"splitHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"16023:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1604,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16035:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"16035:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hand","nodeType":"MemberAccess","referencedDeclaration":44,"src":"16035:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"src":"16023:33:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1608,"nodeType":"ExpressionStatement","src":"16023:33:1"},{"expression":{"argumentTypes":null,"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1609,"name":"handScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"16066:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1610,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16078:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"16078:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"16078:17:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16066:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1614,"nodeType":"ExpressionStatement","src":"16066:29:1"},{"expression":{"argumentTypes":null,"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1615,"name":"splitHandScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"16105:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1616,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16122:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"16122:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"score","nodeType":"MemberAccess","referencedDeclaration":41,"src":"16122:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16105:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1620,"nodeType":"ExpressionStatement","src":"16105:39:1"},{"expression":{"argumentTypes":null,"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1621,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"16154:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1622,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16160:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"16160:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16160:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16154:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"16154:21:1"},{"expression":{"argumentTypes":null,"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1627,"name":"splitBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"16185:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1628,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16196:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"16196:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bet","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16196:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16185:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ExpressionStatement","src":"16185:31:1"},{"expression":{"argumentTypes":null,"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1633,"name":"doubleDownBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"16226:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1634,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16242:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":30,"src":"16242:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16242:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16226:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ExpressionStatement","src":"16226:41:1"},{"expression":{"argumentTypes":null,"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1639,"name":"splitDoubleDownBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"16277:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1640,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"16298:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"splitPlayer","nodeType":"MemberAccess","referencedDeclaration":32,"src":"16298:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}},"id":1642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"doubleDownBet","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16298:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16277:51:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"16277:51:1"}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"15232:306:1","text":"@notice Returns all player\'s hands\\n @return hand The player\'s primary hand\\n @return splitHand The player\'s split hand, if any\\n @return handScore Evaluated score for hand\\n @return splitHandScore Evaluated score for split hand\\n @return bet Original bet at start of hand"},"functionSelector":"6c4941f5","id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerState","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1570,"nodeType":"ParameterList","parameters":[],"src":"15566:2:1"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"hand","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15616:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"15616:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"length":null,"nodeType":"ArrayTypeName","src":"15616:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"splitHand","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15656:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"15656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"length":null,"nodeType":"ArrayTypeName","src":"15656:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"handScore","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15701:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"15701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"splitHandScore","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15737:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"15737:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"bet","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15778:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"15778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"splitBet","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15808:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"15808:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"doubleDownBet","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15843:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"15843:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"splitDoubleDownBet","nodeType":"VariableDeclaration","overrides":null,"scope":1646,"src":"15883:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"15883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15597:331:1"},"scope":1693,"src":"15543:792:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1691,"nodeType":"Block","src":"16991:201:1","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"game","nodeType":"VariableDeclaration","overrides":null,"scope":1691,"src":"17001:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"},"typeName":{"contractScope":null,"id":1660,"name":"Game","nodeType":"UserDefinedTypeName","referencedDeclaration":33,"src":"17001:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game"}},"value":null,"visibility":"internal"}],"id":1666,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1662,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"17021:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Game_$33_storage_$","typeString":"mapping(address => struct Blackjack.Game storage ref)"}},"id":1665,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17027:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17027:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17021:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage","typeString":"struct Blackjack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17001:37:1"},{"expression":{"argumentTypes":null,"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1667,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"17048:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1668,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"17057:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":20,"src":"17057:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17048:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"17048:16:1"},{"expression":{"argumentTypes":null,"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1672,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"17074:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1673,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"17086:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":22,"src":"17086:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"17074:26:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1676,"nodeType":"ExpressionStatement","src":"17074:26:1"},{"expression":{"argumentTypes":null,"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1677,"name":"gameMaxBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"17110:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1678,"name":"maxBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"17123:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17110:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"17110:19:1"},{"expression":{"argumentTypes":null,"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1681,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"17139:5:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1682,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"17147:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"round","nodeType":"MemberAccess","referencedDeclaration":24,"src":"17147:10:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"17139:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1685,"nodeType":"ExpressionStatement","src":"17139:18:1"},{"expression":{"argumentTypes":null,"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1686,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"17167:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1687,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"17175:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stage","nodeType":"MemberAccess","referencedDeclaration":26,"src":"17175:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"src":"17167:18:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"id":1690,"nodeType":"ExpressionStatement","src":"17167:18:1"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"16341:403:1","text":"@notice Returns selected elements from a game\\n @dev Also add bet (and original) to return\\n @return gameId ID for the current Blackjack game\\n @return startTime Time the current Blackjack game began\\n @return gameMaxBet Max bet allowed to be placed for new game\\n @return round Number of round of Blackjack game played\\n @return stage Stage of the Blackjack game"},"functionSelector":"b7d0628b","id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"getGameState","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"16770:2:1"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"gameId","nodeType":"VariableDeclaration","overrides":null,"scope":1692,"src":"16820:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"16820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"startTime","nodeType":"VariableDeclaration","overrides":null,"scope":1692,"src":"16853:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1651,"name":"uint64","nodeType":"ElementaryTypeName","src":"16853:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"gameMaxBet","nodeType":"VariableDeclaration","overrides":null,"scope":1692,"src":"16888:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"16888:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"round","nodeType":"VariableDeclaration","overrides":null,"scope":1692,"src":"16925:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1655,"name":"uint64","nodeType":"ElementaryTypeName","src":"16925:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"stage","nodeType":"VariableDeclaration","overrides":null,"scope":1692,"src":"16956:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"typeName":{"contractScope":null,"id":1657,"name":"Stage","nodeType":"UserDefinedTypeName","referencedDeclaration":18,"src":"16956:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}},"value":null,"visibility":"internal"}],"src":"16801:185:1"},"scope":1693,"src":"16749:443:1","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1694,"src":"508:16686:1"}],"src":"45:17150:1"},"legacyAST":{"attributes":{"absolutePath":"project:/contracts/Blackjack.sol","exportedSymbols":{"Blackjack":[1693]},"license":"GPL-3.0-or-later"},"children":[{"attributes":{"literals":["solidity","0.6",".12"]},"id":3,"name":"PragmaDirective","src":"45:23:1"},{"attributes":{"SourceUnit":8493,"absolutePath":"project:/contracts/provableAPI.sol","file":"./provableAPI.sol","scope":1694,"symbolAliases":[null],"unitAlias":""},"id":4,"name":"ImportDirective","src":"70:27:1"},{"attributes":{"SourceUnit":1882,"absolutePath":"project:/contracts/Ownable.sol","file":"./Ownable.sol","scope":1694,"symbolAliases":[null],"unitAlias":""},"id":5,"name":"ImportDirective","src":"98:23:1"},{"attributes":{"SourceUnit":2078,"absolutePath":"project:/contracts/SafeMath.sol","file":"./SafeMath.sol","scope":1694,"symbolAliases":[null],"unitAlias":""},"id":6,"name":"ImportDirective","src":"122:24:1"},{"attributes":{"abstract":false,"contractDependencies":[1715,1881,8492],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[1693,8492,1881,1715],"name":"Blackjack","scope":1694},"children":[{"attributes":{"text":"@title A blackjack game\\n @author Clark Henry\\n @notice This contract has known security risks and should not be deployed in production"},"id":7,"name":"StructuredDocumentation","src":"364:144:1"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":1881,"type":"contract Ownable"},"id":8,"name":"UserDefinedTypeName","src":"530:7:1"}],"id":9,"name":"InheritanceSpecifier","src":"530:7:1"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"usingProvable","referencedDeclaration":8492,"type":"contract usingProvable"},"id":10,"name":"UserDefinedTypeName","src":"539:13:1"}],"id":11,"name":"InheritanceSpecifier","src":"539:13:1"},{"attributes":{"typeName":null},"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":2077,"type":"library SafeMath"},"id":12,"name":"UserDefinedTypeName","src":"566:8:1"}],"id":13,"name":"UsingForDirective","src":"560:21:1"},{"attributes":{"canonicalName":"Blackjack.Stage","name":"Stage"},"children":[{"attributes":{"name":"Bet"},"id":14,"name":"EnumValue","src":"647:3:1"},{"attributes":{"name":"PlayHand"},"id":15,"name":"EnumValue","src":"668:8:1"},{"attributes":{"name":"PlaySplitHand"},"id":16,"name":"EnumValue","src":"694:13:1"},{"attributes":{"name":"ConcludeHands"},"id":17,"name":"EnumValue","src":"725:13:1"}],"id":18,"name":"EnumDefinition","src":"618:126:1"},{"attributes":{"canonicalName":"Blackjack.Game","name":"Game","scope":1693,"visibility":"public"},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"id","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":19,"name":"ElementaryTypeName","src":"772:7:1"}],"id":20,"name":"VariableDeclaration","src":"772:10:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"startTime","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":21,"name":"ElementaryTypeName","src":"792:6:1"}],"id":22,"name":"VariableDeclaration","src":"792:16:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"round","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":23,"name":"ElementaryTypeName","src":"818:6:1"}],"id":24,"name":"VariableDeclaration","src":"818:12:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"stage","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":25,"name":"UserDefinedTypeName","src":"840:5:1"}],"id":26,"name":"VariableDeclaration","src":"840:11:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"dealer","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":27,"name":"UserDefinedTypeName","src":"861:6:1"}],"id":28,"name":"VariableDeclaration","src":"861:13:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"player","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":29,"name":"UserDefinedTypeName","src":"884:6:1"}],"id":30,"name":"VariableDeclaration","src":"884:13:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"splitPlayer","overrides":null,"scope":33,"stateVariable":false,"storageLocation":"default","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":31,"name":"UserDefinedTypeName","src":"907:6:1"}],"id":32,"name":"VariableDeclaration","src":"907:18:1"}],"id":33,"name":"StructDefinition","src":"750:182:1"},{"attributes":{"canonicalName":"Blackjack.Player","name":"Player","scope":1693,"visibility":"public"},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"bet","overrides":null,"scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":34,"name":"ElementaryTypeName","src":"962:7:1"}],"id":35,"name":"VariableDeclaration","src":"962:11:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"doubleDownBet","overrides":null,"scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":36,"name":"ElementaryTypeName","src":"983:7:1"}],"id":37,"name":"VariableDeclaration","src":"983:21:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"seed","overrides":null,"scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":38,"name":"ElementaryTypeName","src":"1014:7:1"}],"id":39,"name":"VariableDeclaration","src":"1014:12:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"score","overrides":null,"scope":45,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":40,"name":"ElementaryTypeName","src":"1036:5:1"}],"id":41,"name":"VariableDeclaration","src":"1036:11:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"hand","overrides":null,"scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":42,"name":"ElementaryTypeName","src":"1057:7:1"}],"id":43,"name":"ArrayTypeName","src":"1057:9:1"}],"id":44,"name":"VariableDeclaration","src":"1057:14:1"}],"id":45,"name":"StructDefinition","src":"938:140:1"},{"attributes":{"constant":true,"mutability":"constant","name":"NUMBER_OF_DECKS","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":47,"name":"ElementaryTypeName","src":"1204:7:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":48,"name":"Literal","src":"1239:1:1"},{"attributes":{"text":"@dev State variables\\n @dev Includes some circuit breakers\\n @dev Update maxBet to be Kelly optimal"},"id":46,"name":"StructuredDocumentation","src":"1084:115:1"}],"id":49,"name":"VariableDeclaration","src":"1204:36:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"cardValues","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint8[13]","visibility":"internal"},"children":[{"attributes":{"type":"uint8[13]"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":50,"name":"ElementaryTypeName","src":"1246:5:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3133","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 13","value":"13"},"id":51,"name":"Literal","src":"1252:2:1"}],"id":52,"name":"ArrayTypeName","src":"1246:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"uint8[13] memory"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3131","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 11","value":"11"},"id":53,"name":"Literal","src":"1270:2:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":54,"name":"Literal","src":"1274:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":55,"name":"Literal","src":"1277:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":56,"name":"Literal","src":"1280:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":57,"name":"Literal","src":"1283:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":58,"name":"Literal","src":"1286:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"37","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 7","value":"7"},"id":59,"name":"Literal","src":"1289:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":60,"name":"Literal","src":"1292:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"39","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 9","value":"9"},"id":61,"name":"Literal","src":"1295:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":62,"name":"Literal","src":"1298:2:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":63,"name":"Literal","src":"1302:2:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":64,"name":"Literal","src":"1306:2:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":65,"name":"Literal","src":"1310:2:1"}],"id":66,"name":"TupleExpression","src":"1269:44:1"}],"id":67,"name":"VariableDeclaration","src":"1246:67:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"games","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Blackjack.Game)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct Blackjack.Game)"},"children":[{"attributes":{"name":"address","type":"address"},"id":68,"name":"ElementaryTypeName","src":"1327:7:1"},{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":69,"name":"UserDefinedTypeName","src":"1338:4:1"}],"id":70,"name":"Mapping","src":"1319:24:1"}],"id":71,"name":"VariableDeclaration","src":"1319:30:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"randomCards","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"private"},"children":[{"attributes":{"name":"string","type":"string"},"id":72,"name":"ElementaryTypeName","src":"1355:6:1"}],"id":73,"name":"VariableDeclaration","src":"1355:26:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"seed","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":74,"name":"ElementaryTypeName","src":"1387:7:1"}],"id":75,"name":"VariableDeclaration","src":"1387:12:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"maxBet","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":76,"name":"ElementaryTypeName","src":"1405:7:1"}],"id":77,"name":"VariableDeclaration","src":"1405:14:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"stopLoss","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":78,"name":"ElementaryTypeName","src":"1461:4:1"}],"id":79,"name":"VariableDeclaration","src":"1461:13:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"lossCounter","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":80,"name":"ElementaryTypeName","src":"1508:5:1"}],"id":81,"name":"VariableDeclaration","src":"1508:17:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"lossLimit","overrides":null,"scope":1693,"stateVariable":true,"storageLocation":"default","type":"uint8","visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":82,"name":"ElementaryTypeName","src":"1531:5:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3230","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 20","value":"20"},"id":83,"name":"Literal","src":"1549:2:1"}],"id":84,"name":"VariableDeclaration","src":"1531:20:1"},{"attributes":{"anonymous":false,"name":"StageChanged"},"children":[{"attributes":{"text":"@dev Events"},"id":85,"name":"StructuredDocumentation","src":"1580:15:1"},{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":93,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":86,"name":"ElementaryTypeName","src":"1619:7:1"}],"id":87,"name":"VariableDeclaration","src":"1619:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"round","overrides":null,"scope":93,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":88,"name":"ElementaryTypeName","src":"1635:6:1"}],"id":89,"name":"VariableDeclaration","src":"1635:12:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"newStage","overrides":null,"scope":93,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":90,"name":"UserDefinedTypeName","src":"1649:5:1"}],"id":91,"name":"VariableDeclaration","src":"1649:14:1"}],"id":92,"name":"ParameterList","src":"1618:46:1"}],"id":93,"name":"EventDefinition","src":"1600:65:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewRound"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":103,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":94,"name":"ElementaryTypeName","src":"1685:7:1"}],"id":95,"name":"VariableDeclaration","src":"1685:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"round","overrides":null,"scope":103,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":96,"name":"ElementaryTypeName","src":"1701:6:1"}],"id":97,"name":"VariableDeclaration","src":"1701:12:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"player","overrides":null,"scope":103,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":98,"name":"ElementaryTypeName","src":"1715:7:1"}],"id":99,"name":"VariableDeclaration","src":"1715:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"bet","overrides":null,"scope":103,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":100,"name":"ElementaryTypeName","src":"1731:7:1"}],"id":101,"name":"VariableDeclaration","src":"1731:11:1"}],"id":102,"name":"ParameterList","src":"1684:59:1"}],"id":103,"name":"EventDefinition","src":"1670:74:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"CardDrawn"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":113,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":104,"name":"ElementaryTypeName","src":"1765:7:1"}],"id":105,"name":"VariableDeclaration","src":"1765:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"round","overrides":null,"scope":113,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":106,"name":"ElementaryTypeName","src":"1781:6:1"}],"id":107,"name":"VariableDeclaration","src":"1781:12:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"cardValue","overrides":null,"scope":113,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":108,"name":"ElementaryTypeName","src":"1795:5:1"}],"id":109,"name":"VariableDeclaration","src":"1795:15:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"score","overrides":null,"scope":113,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":110,"name":"ElementaryTypeName","src":"1812:5:1"}],"id":111,"name":"VariableDeclaration","src":"1812:11:1"}],"id":112,"name":"ParameterList","src":"1764:60:1"}],"id":113,"name":"EventDefinition","src":"1749:76:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"Result"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":125,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":114,"name":"ElementaryTypeName","src":"1843:7:1"}],"id":115,"name":"VariableDeclaration","src":"1843:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"round","overrides":null,"scope":125,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":116,"name":"ElementaryTypeName","src":"1859:6:1"}],"id":117,"name":"VariableDeclaration","src":"1859:12:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"payout","overrides":null,"scope":125,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":118,"name":"ElementaryTypeName","src":"1873:7:1"}],"id":119,"name":"VariableDeclaration","src":"1873:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"playerScore","overrides":null,"scope":125,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":120,"name":"ElementaryTypeName","src":"1889:5:1"}],"id":121,"name":"VariableDeclaration","src":"1889:17:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"dealerScore","overrides":null,"scope":125,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":122,"name":"ElementaryTypeName","src":"1908:5:1"}],"id":123,"name":"VariableDeclaration","src":"1908:17:1"}],"id":124,"name":"ParameterList","src":"1842:84:1"}],"id":125,"name":"EventDefinition","src":"1830:97:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"PlayerHand"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":135,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":126,"name":"ElementaryTypeName","src":"1949:7:1"}],"id":127,"name":"VariableDeclaration","src":"1949:14:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"playerHand","overrides":null,"scope":135,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":128,"name":"ElementaryTypeName","src":"1965:7:1"}],"id":129,"name":"ArrayTypeName","src":"1965:9:1"}],"id":130,"name":"VariableDeclaration","src":"1965:20:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"playerSplitHand","overrides":null,"scope":135,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":131,"name":"ElementaryTypeName","src":"1987:7:1"}],"id":132,"name":"ArrayTypeName","src":"1987:9:1"}],"id":133,"name":"VariableDeclaration","src":"1987:25:1"}],"id":134,"name":"ParameterList","src":"1948:65:1"}],"id":135,"name":"EventDefinition","src":"1932:82:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogNewWolframRandomDraw"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"cards","overrides":null,"scope":139,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":136,"name":"ElementaryTypeName","src":"2049:6:1"}],"id":137,"name":"VariableDeclaration","src":"2049:12:1"}],"id":138,"name":"ParameterList","src":"2048:14:1"}],"id":139,"name":"EventDefinition","src":"2019:44:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogNewProvableQuery"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"description","overrides":null,"scope":143,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":140,"name":"ElementaryTypeName","src":"2094:6:1"}],"id":141,"name":"VariableDeclaration","src":"2094:18:1"}],"id":142,"name":"ParameterList","src":"2093:20:1"}],"id":143,"name":"EventDefinition","src":"2068:46:1"},{"attributes":{"anonymous":false,"documentation":null,"name":"Received"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":144,"name":"ElementaryTypeName","src":"2134:7:1"}],"id":145,"name":"VariableDeclaration","src":"2134:7:1"},{"attributes":{"constant":false,"indexed":false,"mutability":"mutable","name":"","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":146,"name":"ElementaryTypeName","src":"2143:4:1"}],"id":147,"name":"VariableDeclaration","src":"2143:4:1"}],"id":148,"name":"ParameterList","src":"2133:15:1"}],"id":149,"name":"EventDefinition","src":"2119:30:1"},{"attributes":{"implemented":true,"isConstructor":true,"kind":"constructor","modifiers":[null],"name":"","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@dev Functions\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now"},"id":150,"name":"StructuredDocumentation","src":"2155:118:1"},{"attributes":{"parameters":[null]},"children":[],"id":151,"name":"ParameterList","src":"2289:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":152,"name":"ParameterList","src":"2299:0:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":153,"name":"Identifier","src":"2309:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"timestamp","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-4,"type":"block","value":"block"},"id":154,"name":"Identifier","src":"2316:5:1"}],"id":155,"name":"MemberAccess","src":"2316:15:1"}],"id":156,"name":"Assignment","src":"2309:22:1"}],"id":157,"name":"ExpressionStatement","src":"2309:22:1"}],"id":158,"name":"Block","src":"2299:39:1"}],"id":159,"name":"FunctionDefinition","src":"2278:60:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":160,"name":"ParameterList","src":"2352:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":161,"name":"ParameterList","src":"2364:0:1"},{"attributes":{"statements":[null]},"children":[],"id":162,"name":"Block","src":"2364:2:1"}],"id":163,"name":"FunctionDefinition","src":"2344:22:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"receive","modifiers":[null],"name":"","overrides":null,"scope":1693,"stateMutability":"payable","virtual":false,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":164,"name":"ParameterList","src":"2379:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":165,"name":"ParameterList","src":"2399:0:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":149,"type":"function (address,uint256)","value":"Received"},"id":166,"name":"Identifier","src":"2414:8:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":167,"name":"Identifier","src":"2423:3:1"}],"id":168,"name":"MemberAccess","src":"2423:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":169,"name":"Identifier","src":"2435:3:1"}],"id":170,"name":"MemberAccess","src":"2435:9:1"}],"id":171,"name":"FunctionCall","src":"2414:31:1"}],"id":172,"name":"EmitStatement","src":"2409:36:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"maxBet"},"id":173,"name":"Identifier","src":"2456:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":2007,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":174,"name":"Identifier","src":"2465:8:1"}],"id":175,"name":"MemberAccess","src":"2465:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address payable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)"},"children":[{"attributes":{"name":"address","type":null},"id":176,"name":"ElementaryTypeName","src":"2478:7:1"}],"id":177,"name":"ElementaryTypeNameExpression","src":"2478:7:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-28,"type":"contract Blackjack","value":"this"},"id":178,"name":"Identifier","src":"2486:4:1"}],"id":179,"name":"FunctionCall","src":"2478:13:1"}],"id":180,"name":"MemberAccess","src":"2478:21:1"},{"attributes":{"argumentTypes":null,"hexvalue":"323030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 200","value":"200"},"id":181,"name":"Literal","src":"2501:3:1"}],"id":182,"name":"FunctionCall","src":"2465:40:1"}],"id":183,"name":"Assignment","src":"2456:49:1"}],"id":184,"name":"ExpressionStatement","src":"2456:49:1"}],"id":185,"name":"Block","src":"2399:113:1"}],"id":186,"name":"FunctionDefinition","src":"2372:140:1"},{"attributes":{"functionSelector":"41c0e1b5","implemented":true,"isConstructor":false,"kind":"function","name":"kill","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@dev [Module 10, Lesson 1] Action restriction on critical function\\n @dev [Module 10, Lesson 1] Mortality\\n @dev [Library used] Ownable library from OpenZeppelin is imported and used here."},"id":187,"name":"StructuredDocumentation","src":"2518:204:1"},{"attributes":{"parameters":[null]},"children":[],"id":188,"name":"ParameterList","src":"2740:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":191,"name":"ParameterList","src":"2762:0:1"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1830,"type":"modifier ()","value":"onlyOwner"},"id":189,"name":"Identifier","src":"2750:9:1"}],"id":190,"name":"ModifierInvocation","src":"2750:11:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"overloadedDeclarations":[null],"referencedDeclaration":-21,"type":"function (address payable)","value":"selfdestruct"},"id":192,"name":"Identifier","src":"2772:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address payable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)"},"children":[{"attributes":{"name":"address","type":null},"id":193,"name":"ElementaryTypeName","src":"2785:7:1"}],"id":194,"name":"ElementaryTypeNameExpression","src":"2785:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint160","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint160)"},"children":[{"attributes":{"name":"uint160","type":null},"id":195,"name":"ElementaryTypeName","src":"2793:7:1"}],"id":196,"name":"ElementaryTypeNameExpression","src":"2793:7:1"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":1817,"type":"function () view returns (address)","value":"owner"},"id":197,"name":"Identifier","src":"2801:5:1"}],"id":198,"name":"FunctionCall","src":"2801:7:1"}],"id":199,"name":"FunctionCall","src":"2793:16:1"}],"id":200,"name":"FunctionCall","src":"2785:25:1"}],"id":201,"name":"FunctionCall","src":"2772:39:1"}],"id":202,"name":"ExpressionStatement","src":"2772:39:1"}],"id":203,"name":"Block","src":"2762:56:1"}],"id":204,"name":"FunctionDefinition","src":"2727:91:1"},{"attributes":{"name":"stopInEmergency","overrides":null,"virtual":false,"visibility":"internal"},"children":[{"attributes":{"text":"@dev [Module 10, Lesson 1] Circuit breakers implemented here"},"id":205,"name":"StructuredDocumentation","src":"2824:64:1"},{"attributes":{"parameters":[null]},"children":[],"id":206,"name":"ParameterList","src":"2917:2:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aad85bb7d0f75aea046e71f447fe022b236c613caede1165f72ebde40bb2ce26","typeString":"literal_string \\"Circuit breaker triggered\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":207,"name":"Identifier","src":"2922:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":79,"type":"bool","value":"stopLoss"},"id":208,"name":"Identifier","src":"2931:8:1"}],"id":209,"name":"UnaryOperation","src":"2930:9:1"},{"attributes":{"argumentTypes":null,"hexvalue":"4369726375697420627265616b657220747269676765726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Circuit breaker triggered\\"","value":"Circuit breaker triggered"},"id":210,"name":"Literal","src":"2941:27:1"}],"id":211,"name":"FunctionCall","src":"2922:47:1"}],"id":212,"name":"ExpressionStatement","src":"2922:47:1"},{"id":213,"name":"PlaceholderStatement","src":"2971:1:1"}],"id":214,"name":"Block","src":"2920:55:1"}],"id":215,"name":"ModifierDefinition","src":"2893:82:1"},{"attributes":{"documentation":null,"name":"atStage","overrides":null,"virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"_stage","overrides":null,"scope":232,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":216,"name":"UserDefinedTypeName","src":"2998:5:1"}],"id":217,"name":"VariableDeclaration","src":"2998:12:1"}],"id":218,"name":"ParameterList","src":"2997:14:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":219,"name":"Identifier","src":"3022:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":220,"name":"Identifier","src":"3030:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":221,"name":"Identifier","src":"3036:3:1"}],"id":222,"name":"MemberAccess","src":"3036:10:1"}],"id":223,"name":"IndexAccess","src":"3030:17:1"}],"id":224,"name":"MemberAccess","src":"3030:23:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":217,"type":"enum Blackjack.Stage","value":"_stage"},"id":225,"name":"Identifier","src":"3057:6:1"}],"id":226,"name":"BinaryOperation","src":"3030:33:1"},{"attributes":{"argumentTypes":null,"hexvalue":"46756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d652e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Function cannot be called at this time.\\"","value":"Function cannot be called at this time."},"id":227,"name":"Literal","src":"3065:41:1"}],"id":228,"name":"FunctionCall","src":"3022:85:1"}],"id":229,"name":"ExpressionStatement","src":"3022:85:1"},{"id":230,"name":"PlaceholderStatement","src":"3117:1:1"}],"id":231,"name":"Block","src":"3012:113:1"}],"id":232,"name":"ModifierDefinition","src":"2981:144:1"},{"attributes":{"documentation":null,"name":"eitherStage","overrides":null,"virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"_stage1","overrides":null,"scope":259,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":233,"name":"UserDefinedTypeName","src":"3152:5:1"}],"id":234,"name":"VariableDeclaration","src":"3152:13:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"_stage2","overrides":null,"scope":259,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":235,"name":"UserDefinedTypeName","src":"3167:5:1"}],"id":236,"name":"VariableDeclaration","src":"3167:13:1"}],"id":237,"name":"ParameterList","src":"3151:30:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e177e2f8092f1d0e1287f1dfb9987dbc6be733d1f014a9c734e6935b828f7b","typeString":"literal_string \\"Function cannot be called at this time.\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":238,"name":"Identifier","src":"3192:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":239,"name":"Identifier","src":"3200:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":240,"name":"Identifier","src":"3206:3:1"}],"id":241,"name":"MemberAccess","src":"3206:10:1"}],"id":242,"name":"IndexAccess","src":"3200:17:1"}],"id":243,"name":"MemberAccess","src":"3200:23:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":234,"type":"enum Blackjack.Stage","value":"_stage1"},"id":244,"name":"Identifier","src":"3227:7:1"}],"id":245,"name":"BinaryOperation","src":"3200:34:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":246,"name":"Identifier","src":"3238:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":247,"name":"Identifier","src":"3244:3:1"}],"id":248,"name":"MemberAccess","src":"3244:10:1"}],"id":249,"name":"IndexAccess","src":"3238:17:1"}],"id":250,"name":"MemberAccess","src":"3238:23:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":236,"type":"enum Blackjack.Stage","value":"_stage2"},"id":251,"name":"Identifier","src":"3265:7:1"}],"id":252,"name":"BinaryOperation","src":"3238:34:1"}],"id":253,"name":"BinaryOperation","src":"3200:72:1"},{"attributes":{"argumentTypes":null,"hexvalue":"46756e6374696f6e2063616e6e6f742062652063616c6c656420617420746869732074696d652e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Function cannot be called at this time.\\"","value":"Function cannot be called at this time."},"id":254,"name":"Literal","src":"3290:41:1"}],"id":255,"name":"FunctionCall","src":"3192:140:1"}],"id":256,"name":"ExpressionStatement","src":"3192:140:1"},{"id":257,"name":"PlaceholderStatement","src":"3342:1:1"}],"id":258,"name":"Block","src":"3182:168:1"}],"id":259,"name":"ModifierDefinition","src":"3131:219:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"drawCard","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@dev Need to implement card removal\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n @param game The current game containing the player drawing a card\\n @param player A player from a Blackjack game, holding a hand to draw card to"},"id":260,"name":"StructuredDocumentation","src":"3356:298:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":358,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":261,"name":"UserDefinedTypeName","src":"3677:4:1"}],"id":262,"name":"VariableDeclaration","src":"3677:17:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"player","overrides":null,"scope":358,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":263,"name":"UserDefinedTypeName","src":"3696:6:1"}],"id":264,"name":"VariableDeclaration","src":"3696:21:1"}],"id":265,"name":"ParameterList","src":"3676:42:1"},{"attributes":{"parameters":[null]},"children":[],"id":266,"name":"ParameterList","src":"3727:0:1"},{"children":[{"attributes":{"assignments":[268]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"_now","overrides":null,"scope":357,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":267,"name":"ElementaryTypeName","src":"3737:6:1"}],"id":268,"name":"VariableDeclaration","src":"3737:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint64","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint64)"},"children":[{"attributes":{"name":"uint64","type":null},"id":269,"name":"ElementaryTypeName","src":"3751:6:1"}],"id":270,"name":"ElementaryTypeNameExpression","src":"3751:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"timestamp","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-4,"type":"block","value":"block"},"id":271,"name":"Identifier","src":"3758:5:1"}],"id":272,"name":"MemberAccess","src":"3758:15:1"}],"id":273,"name":"FunctionCall","src":"3751:23:1"}],"id":274,"name":"VariableDeclarationStatement","src":"3737:37:1"},{"attributes":{"assignments":[276]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"card","overrides":null,"scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":275,"name":"ElementaryTypeName","src":"3784:7:1"}],"id":276,"name":"VariableDeclaration","src":"3784:12:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":277,"name":"Identifier","src":"3801:6:1"}],"id":278,"name":"MemberAccess","src":"3801:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":279,"name":"Identifier","src":"3815:4:1"}],"id":280,"name":"BinaryOperation","src":"3801:18:1"}],"id":281,"name":"TupleExpression","src":"3800:20:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"uint64","value":"_now"},"id":282,"name":"Identifier","src":"3823:4:1"}],"id":283,"name":"BinaryOperation","src":"3800:27:1"}],"id":284,"name":"TupleExpression","src":"3799:29:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":49,"type":"uint256","value":"NUMBER_OF_DECKS"},"id":285,"name":"Identifier","src":"3832:15:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3532","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 52","value":"52"},"id":286,"name":"Literal","src":"3848:2:1"}],"id":287,"name":"BinaryOperation","src":"3832:18:1"}],"id":288,"name":"TupleExpression","src":"3831:20:1"}],"id":289,"name":"BinaryOperation","src":"3799:52:1"}],"id":290,"name":"VariableDeclarationStatement","src":"3784:67:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":291,"name":"Identifier","src":"3861:6:1"}],"id":293,"name":"MemberAccess","src":"3861:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)"},"children":[{"attributes":{"name":"uint256","type":null},"id":294,"name":"ElementaryTypeName","src":"3875:7:1"}],"id":295,"name":"ElementaryTypeNameExpression","src":"3875:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":-8,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":296,"name":"Identifier","src":"3883:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-1,"type":"abi","value":"abi"},"id":297,"name":"Identifier","src":"3893:3:1"}],"id":298,"name":"MemberAccess","src":"3893:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":299,"name":"Identifier","src":"3910:6:1"}],"id":300,"name":"MemberAccess","src":"3910:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"card"},"id":301,"name":"Identifier","src":"3923:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"uint64","value":"_now"},"id":302,"name":"Identifier","src":"3929:4:1"}],"id":303,"name":"FunctionCall","src":"3893:41:1"}],"id":304,"name":"FunctionCall","src":"3883:52:1"}],"id":305,"name":"FunctionCall","src":"3875:61:1"}],"id":306,"name":"Assignment","src":"3861:75:1"}],"id":307,"name":"ExpressionStatement","src":"3861:75:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":308,"name":"Identifier","src":"3946:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)"},"children":[{"attributes":{"name":"uint256","type":null},"id":309,"name":"ElementaryTypeName","src":"3953:7:1"}],"id":310,"name":"ElementaryTypeNameExpression","src":"3953:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":-8,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":311,"name":"Identifier","src":"3961:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-1,"type":"abi","value":"abi"},"id":312,"name":"Identifier","src":"3971:3:1"}],"id":313,"name":"MemberAccess","src":"3971:16:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":314,"name":"Identifier","src":"3988:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"card"},"id":315,"name":"Identifier","src":"3994:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"uint64","value":"_now"},"id":316,"name":"Identifier","src":"4000:4:1"}],"id":317,"name":"FunctionCall","src":"3971:34:1"}],"id":318,"name":"FunctionCall","src":"3961:45:1"}],"id":319,"name":"FunctionCall","src":"3953:54:1"}],"id":320,"name":"Assignment","src":"3946:61:1"}],"id":321,"name":"ExpressionStatement","src":"3946:61:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":322,"name":"Identifier","src":"4018:6:1"}],"id":325,"name":"MemberAccess","src":"4018:11:1"}],"id":326,"name":"MemberAccess","src":"4018:16:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"card"},"id":327,"name":"Identifier","src":"4035:4:1"}],"id":328,"name":"FunctionCall","src":"4018:22:1"}],"id":329,"name":"ExpressionStatement","src":"4018:22:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":330,"name":"Identifier","src":"4050:6:1"}],"id":332,"name":"MemberAccess","src":"4050:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":333,"name":"Identifier","src":"4065:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":334,"name":"Identifier","src":"4077:6:1"}],"id":335,"name":"FunctionCall","src":"4065:19:1"}],"id":336,"name":"Assignment","src":"4050:34:1"}],"id":337,"name":"ExpressionStatement","src":"4050:34:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"overloadedDeclarations":[null],"referencedDeclaration":113,"type":"function (uint256,uint64,uint8,uint8)","value":"CardDrawn"},"id":338,"name":"Identifier","src":"4100:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":262,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":339,"name":"Identifier","src":"4110:4:1"}],"id":340,"name":"MemberAccess","src":"4110:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":262,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":341,"name":"Identifier","src":"4119:4:1"}],"id":342,"name":"MemberAccess","src":"4119:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":67,"type":"uint8[13] storage ref","value":"cardValues"},"id":343,"name":"Identifier","src":"4131:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)"},"children":[{"attributes":{"name":"uint8","type":null},"id":344,"name":"ElementaryTypeName","src":"4142:5:1"}],"id":345,"name":"ElementaryTypeNameExpression","src":"4142:5:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"card"},"id":346,"name":"Identifier","src":"4148:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3532","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 52","value":"52"},"id":347,"name":"Literal","src":"4155:2:1"}],"id":348,"name":"BinaryOperation","src":"4148:9:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3133","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 13","value":"13"},"id":349,"name":"Literal","src":"4160:2:1"}],"id":350,"name":"BinaryOperation","src":"4148:14:1"}],"id":351,"name":"FunctionCall","src":"4142:21:1"}],"id":352,"name":"IndexAccess","src":"4131:33:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":353,"name":"Identifier","src":"4166:6:1"}],"id":354,"name":"MemberAccess","src":"4166:12:1"}],"id":355,"name":"FunctionCall","src":"4100:79:1"}],"id":356,"name":"EmitStatement","src":"4095:84:1"}],"id":357,"name":"Block","src":"3727:459:1"}],"id":358,"name":"FunctionDefinition","src":"3659:527:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"nextStage","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},"children":[{"attributes":{"text":"@dev Could be used for more complex check-reveal scheme for payable functions?\\n @param game The current game which requires stage update"},"id":359,"name":"StructuredDocumentation","src":"4192:147:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":416,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":360,"name":"UserDefinedTypeName","src":"4363:4:1"}],"id":361,"name":"VariableDeclaration","src":"4363:17:1"}],"id":362,"name":"ParameterList","src":"4362:19:1"},{"attributes":{"parameters":[null]},"children":[],"id":363,"name":"ParameterList","src":"4391:0:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":364,"name":"Identifier","src":"4401:4:1"}],"id":366,"name":"MemberAccess","src":"4401:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"enum Blackjack.Stage","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":367,"name":"Identifier","src":"4414:5:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)"},"children":[{"attributes":{"name":"uint","type":null},"id":368,"name":"ElementaryTypeName","src":"4420:4:1"}],"id":369,"name":"ElementaryTypeNameExpression","src":"4420:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":370,"name":"Identifier","src":"4425:4:1"}],"id":371,"name":"MemberAccess","src":"4425:10:1"}],"id":372,"name":"FunctionCall","src":"4420:16:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":373,"name":"Literal","src":"4439:1:1"}],"id":374,"name":"BinaryOperation","src":"4420:20:1"}],"id":375,"name":"FunctionCall","src":"4414:27:1"}],"id":376,"name":"Assignment","src":"4401:40:1"}],"id":377,"name":"ExpressionStatement","src":"4401:40:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":378,"name":"Identifier","src":"4455:4:1"}],"id":379,"name":"MemberAccess","src":"4455:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":380,"name":"Identifier","src":"4469:5:1"}],"id":381,"name":"MemberAccess","src":"4469:19:1"}],"id":382,"name":"BinaryOperation","src":"4455:33:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":383,"name":"Identifier","src":"4492:4:1"}],"id":384,"name":"MemberAccess","src":"4492:16:1"}],"id":385,"name":"MemberAccess","src":"4492:21:1"}],"id":386,"name":"MemberAccess","src":"4492:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":387,"name":"Literal","src":"4524:1:1"}],"id":388,"name":"BinaryOperation","src":"4492:33:1"}],"id":389,"name":"BinaryOperation","src":"4455:70:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":390,"name":"Identifier","src":"4541:4:1"}],"id":392,"name":"MemberAccess","src":"4541:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"enum Blackjack.Stage","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":393,"name":"Identifier","src":"4554:5:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)"},"children":[{"attributes":{"name":"uint","type":null},"id":394,"name":"ElementaryTypeName","src":"4560:4:1"}],"id":395,"name":"ElementaryTypeNameExpression","src":"4560:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":396,"name":"Identifier","src":"4565:4:1"}],"id":397,"name":"MemberAccess","src":"4565:10:1"}],"id":398,"name":"FunctionCall","src":"4560:16:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":399,"name":"Literal","src":"4579:1:1"}],"id":400,"name":"BinaryOperation","src":"4560:20:1"}],"id":401,"name":"FunctionCall","src":"4554:27:1"}],"id":402,"name":"Assignment","src":"4541:40:1"}],"id":403,"name":"ExpressionStatement","src":"4541:40:1"}],"id":404,"name":"Block","src":"4527:65:1"}],"id":405,"name":"IfStatement","src":"4452:140:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"overloadedDeclarations":[null],"referencedDeclaration":93,"type":"function (uint256,uint64,enum Blackjack.Stage)","value":"StageChanged"},"id":406,"name":"Identifier","src":"4607:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":407,"name":"Identifier","src":"4620:4:1"}],"id":408,"name":"MemberAccess","src":"4620:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":409,"name":"Identifier","src":"4629:4:1"}],"id":410,"name":"MemberAccess","src":"4629:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":361,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":411,"name":"Identifier","src":"4641:4:1"}],"id":412,"name":"MemberAccess","src":"4641:10:1"}],"id":413,"name":"FunctionCall","src":"4607:45:1"}],"id":414,"name":"EmitStatement","src":"4602:50:1"}],"id":415,"name":"Block","src":"4391:268:1"}],"id":416,"name":"FunctionDefinition","src":"4344:315:1"},{"attributes":{"functionSelector":"c5b1d9aa","implemented":true,"isConstructor":false,"kind":"function","name":"newRound","overrides":null,"scope":1693,"stateMutability":"payable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Start a new round of Blackjack with the transferred value as the original bet.\\n @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n @dev seed should not be based on timestamp. This is a security risk and placeholder for now\\n @dev Plan to split this into multiple functions such that placing bet is atomic before proceeding"},"id":417,"name":"StructuredDocumentation","src":"4665:365:1"},{"attributes":{"parameters":[null]},"children":[],"id":418,"name":"ParameterList","src":"5052:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":421,"name":"ParameterList","src":"5086:0:1"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":215,"type":"modifier ()","value":"stopInEmergency"},"id":419,"name":"Identifier","src":"5070:15:1"}],"id":420,"name":"ModifierInvocation","src":"5070:15:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48ef49f85e10a1ea2b9f9dbc372513e1ccb2ae8dbf54a83aa45c4c48827d4e5b","typeString":"literal_string \\"Bet must be less than the max bet.\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":422,"name":"Identifier","src":"5096:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":423,"name":"Identifier","src":"5104:3:1"}],"id":424,"name":"MemberAccess","src":"5104:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"maxBet"},"id":425,"name":"Identifier","src":"5117:6:1"}],"id":426,"name":"BinaryOperation","src":"5104:19:1"},{"attributes":{"argumentTypes":null,"hexvalue":"426574206d757374206265206c657373207468616e20746865206d6178206265742e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Bet must be less than the max bet.\\"","value":"Bet must be less than the max bet."},"id":427,"name":"Literal","src":"5125:36:1"}],"id":428,"name":"FunctionCall","src":"5096:66:1"}],"id":429,"name":"ExpressionStatement","src":"5096:66:1"},{"attributes":{"assignments":[431],"initialValue":null},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"_seed","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":430,"name":"ElementaryTypeName","src":"5173:7:1"}],"id":431,"name":"VariableDeclaration","src":"5173:13:1"}],"id":432,"name":"VariableDeclarationStatement","src":"5173:13:1"},{"attributes":{"assignments":[434]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"_now","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":433,"name":"ElementaryTypeName","src":"5196:6:1"}],"id":434,"name":"VariableDeclaration","src":"5196:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint64","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint64)"},"children":[{"attributes":{"name":"uint64","type":null},"id":435,"name":"ElementaryTypeName","src":"5210:6:1"}],"id":436,"name":"ElementaryTypeNameExpression","src":"5210:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"timestamp","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-4,"type":"block","value":"block"},"id":437,"name":"Identifier","src":"5217:5:1"}],"id":438,"name":"MemberAccess","src":"5217:15:1"}],"id":439,"name":"FunctionCall","src":"5210:23:1"}],"id":440,"name":"VariableDeclarationStatement","src":"5196:37:1"},{"attributes":{"assignments":[442]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"id","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":441,"name":"ElementaryTypeName","src":"5243:7:1"}],"id":442,"name":"VariableDeclaration","src":"5243:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)"},"children":[{"attributes":{"name":"uint256","type":null},"id":443,"name":"ElementaryTypeName","src":"5256:7:1"}],"id":444,"name":"ElementaryTypeNameExpression","src":"5256:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":-8,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":445,"name":"Identifier","src":"5264:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-1,"type":"abi","value":"abi"},"id":446,"name":"Identifier","src":"5274:3:1"}],"id":447,"name":"MemberAccess","src":"5274:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-4,"type":"block","value":"block"},"id":448,"name":"Identifier","src":"5291:5:1"}],"id":449,"name":"MemberAccess","src":"5291:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":434,"type":"uint64","value":"_now"},"id":450,"name":"Identifier","src":"5305:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"uint256","value":"_seed"},"id":451,"name":"Identifier","src":"5311:5:1"}],"id":452,"name":"FunctionCall","src":"5274:43:1"}],"id":453,"name":"FunctionCall","src":"5264:54:1"}],"id":454,"name":"FunctionCall","src":"5256:63:1"}],"id":455,"name":"VariableDeclarationStatement","src":"5243:76:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":456,"name":"Identifier","src":"5330:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"seed"},"id":457,"name":"Identifier","src":"5338:4:1"}],"id":458,"name":"Assignment","src":"5330:12:1"}],"id":459,"name":"ExpressionStatement","src":"5330:12:1"},{"attributes":{"assignments":[461],"initialValue":null},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"dealer","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"memory","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":460,"name":"UserDefinedTypeName","src":"5353:6:1"}],"id":461,"name":"VariableDeclaration","src":"5353:20:1"}],"id":462,"name":"VariableDeclarationStatement","src":"5353:20:1"},{"attributes":{"assignments":[464],"initialValue":null},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"player","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"memory","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":463,"name":"UserDefinedTypeName","src":"5383:6:1"}],"id":464,"name":"VariableDeclaration","src":"5383:20:1"}],"id":465,"name":"VariableDeclarationStatement","src":"5383:20:1"},{"attributes":{"assignments":[467],"initialValue":null},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"splitPlayer","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"memory","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":466,"name":"UserDefinedTypeName","src":"5413:6:1"}],"id":467,"name":"VariableDeclaration","src":"5413:25:1"}],"id":468,"name":"VariableDeclarationStatement","src":"5413:25:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":469,"name":"Identifier","src":"5449:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":470,"name":"Identifier","src":"5455:3:1"}],"id":471,"name":"MemberAccess","src":"5455:10:1"}],"id":472,"name":"IndexAccess","src":"5449:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":[null],"tryCall":false,"type":"struct Blackjack.Game memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"},{"typeIdentifier":"t_struct$_Player_$45_memory_ptr","typeString":"struct Blackjack.Player memory"}],"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"type(struct Blackjack.Game storage pointer)","value":"Game"},"id":473,"name":"Identifier","src":"5469:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"uint256","value":"id"},"id":474,"name":"Identifier","src":"5474:2:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":434,"type":"uint64","value":"_now"},"id":475,"name":"Identifier","src":"5478:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":476,"name":"Literal","src":"5484:1:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bet","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":477,"name":"Identifier","src":"5487:5:1"}],"id":478,"name":"MemberAccess","src":"5487:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":461,"type":"struct Blackjack.Player memory","value":"dealer"},"id":479,"name":"Identifier","src":"5498:6:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":464,"type":"struct Blackjack.Player memory","value":"player"},"id":480,"name":"Identifier","src":"5506:6:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":467,"type":"struct Blackjack.Player memory","value":"splitPlayer"},"id":481,"name":"Identifier","src":"5514:11:1"}],"id":482,"name":"FunctionCall","src":"5469:57:1"}],"id":483,"name":"Assignment","src":"5449:77:1"}],"id":484,"name":"ExpressionStatement","src":"5449:77:1"},{"attributes":{"assignments":[486]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":561,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":485,"name":"UserDefinedTypeName","src":"5536:4:1"}],"id":486,"name":"VariableDeclaration","src":"5536:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":487,"name":"Identifier","src":"5556:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":488,"name":"Identifier","src":"5562:3:1"}],"id":489,"name":"MemberAccess","src":"5562:10:1"}],"id":490,"name":"IndexAccess","src":"5556:17:1"}],"id":491,"name":"VariableDeclarationStatement","src":"5536:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":492,"name":"Identifier","src":"5608:4:1"}],"id":495,"name":"MemberAccess","src":"5608:11:1"}],"id":496,"name":"MemberAccess","src":"5608:15:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":497,"name":"Identifier","src":"5626:3:1"}],"id":498,"name":"MemberAccess","src":"5626:9:1"}],"id":499,"name":"Assignment","src":"5608:27:1"}],"id":500,"name":"ExpressionStatement","src":"5608:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":501,"name":"Identifier","src":"5645:4:1"}],"id":504,"name":"MemberAccess","src":"5645:11:1"}],"id":505,"name":"MemberAccess","src":"5645:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"~","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"uint256","value":"_seed"},"id":506,"name":"Identifier","src":"5665:5:1"}],"id":507,"name":"UnaryOperation","src":"5664:6:1"}],"id":508,"name":"Assignment","src":"5645:25:1"}],"id":509,"name":"ExpressionStatement","src":"5645:25:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":510,"name":"Identifier","src":"5680:4:1"}],"id":513,"name":"MemberAccess","src":"5680:11:1"}],"id":514,"name":"MemberAccess","src":"5680:16:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"uint256","value":"_seed"},"id":515,"name":"Identifier","src":"5699:5:1"}],"id":516,"name":"Assignment","src":"5680:24:1"}],"id":517,"name":"ExpressionStatement","src":"5680:24:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"seed","referencedDeclaration":39,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":518,"name":"Identifier","src":"5714:4:1"}],"id":521,"name":"MemberAccess","src":"5714:16:1"}],"id":522,"name":"MemberAccess","src":"5714:21:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"uint256","value":"_seed"},"id":523,"name":"Identifier","src":"5738:5:1"}],"id":524,"name":"Assignment","src":"5714:29:1"}],"id":525,"name":"ExpressionStatement","src":"5714:29:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":526,"name":"Identifier","src":"5753:4:1"}],"id":528,"name":"MemberAccess","src":"5753:10:1"}],"id":529,"name":"UnaryOperation","src":"5753:12:1"}],"id":530,"name":"ExpressionStatement","src":"5753:12:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":103,"type":"function (uint256,uint64,address,uint256)","value":"NewRound"},"id":531,"name":"Identifier","src":"5781:8:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":532,"name":"Identifier","src":"5790:4:1"}],"id":533,"name":"MemberAccess","src":"5790:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":534,"name":"Identifier","src":"5799:4:1"}],"id":535,"name":"MemberAccess","src":"5799:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":536,"name":"Identifier","src":"5811:3:1"}],"id":537,"name":"MemberAccess","src":"5811:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":538,"name":"Identifier","src":"5823:3:1"}],"id":539,"name":"MemberAccess","src":"5823:9:1"}],"id":540,"name":"FunctionCall","src":"5781:52:1"}],"id":541,"name":"EmitStatement","src":"5776:57:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":756,"type":"function (struct Blackjack.Game storage pointer)","value":"dealCards"},"id":542,"name":"Identifier","src":"5844:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":543,"name":"Identifier","src":"5854:4:1"}],"id":544,"name":"FunctionCall","src":"5844:15:1"}],"id":545,"name":"ExpressionStatement","src":"5844:15:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":135,"type":"function (uint256,uint256[] memory,uint256[] memory)","value":"PlayerHand"},"id":546,"name":"Identifier","src":"5874:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":547,"name":"Identifier","src":"5885:4:1"}],"id":548,"name":"MemberAccess","src":"5885:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":549,"name":"Identifier","src":"5894:4:1"}],"id":550,"name":"MemberAccess","src":"5894:11:1"}],"id":551,"name":"MemberAccess","src":"5894:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":552,"name":"Identifier","src":"5912:4:1"}],"id":553,"name":"MemberAccess","src":"5912:16:1"}],"id":554,"name":"MemberAccess","src":"5912:21:1"}],"id":555,"name":"FunctionCall","src":"5874:60:1"}],"id":556,"name":"EmitStatement","src":"5869:65:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"function (struct Blackjack.Game storage pointer)","value":"nextStage"},"id":557,"name":"Identifier","src":"5945:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":486,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":558,"name":"Identifier","src":"5955:4:1"}],"id":559,"name":"FunctionCall","src":"5945:15:1"}],"id":560,"name":"ExpressionStatement","src":"5945:15:1"}],"id":561,"name":"Block","src":"5086:881:1"}],"id":562,"name":"FunctionDefinition","src":"5035:932:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"reset","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},"children":[{"attributes":{"text":"@dev Not sure this is optimized in terms of stage updates and call timing\\n @param game The current game which requires stage reset"},"id":563,"name":"StructuredDocumentation","src":"5973:141:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":656,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":564,"name":"UserDefinedTypeName","src":"6134:4:1"}],"id":565,"name":"VariableDeclaration","src":"6134:17:1"}],"id":566,"name":"ParameterList","src":"6133:19:1"},{"attributes":{"parameters":[null]},"children":[],"id":567,"name":"ParameterList","src":"6162:0:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":568,"name":"Identifier","src":"6172:4:1"}],"id":570,"name":"MemberAccess","src":"6172:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bet","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":571,"name":"Identifier","src":"6185:5:1"}],"id":572,"name":"MemberAccess","src":"6185:9:1"}],"id":573,"name":"Assignment","src":"6172:22:1"}],"id":574,"name":"ExpressionStatement","src":"6172:22:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"}],"overloadedDeclarations":[null],"referencedDeclaration":93,"type":"function (uint256,uint64,enum Blackjack.Stage)","value":"StageChanged"},"id":575,"name":"Identifier","src":"6209:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":576,"name":"Identifier","src":"6222:4:1"}],"id":577,"name":"MemberAccess","src":"6222:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":578,"name":"Identifier","src":"6231:4:1"}],"id":579,"name":"MemberAccess","src":"6231:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":580,"name":"Identifier","src":"6243:4:1"}],"id":581,"name":"MemberAccess","src":"6243:10:1"}],"id":582,"name":"FunctionCall","src":"6209:45:1"}],"id":583,"name":"EmitStatement","src":"6204:50:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":584,"name":"Identifier","src":"6265:4:1"}],"id":587,"name":"MemberAccess","src":"6265:11:1"}],"id":588,"name":"MemberAccess","src":"6265:15:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":589,"name":"Literal","src":"6283:1:1"}],"id":590,"name":"Assignment","src":"6265:19:1"}],"id":591,"name":"ExpressionStatement","src":"6265:19:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":592,"name":"Identifier","src":"6294:4:1"}],"id":595,"name":"MemberAccess","src":"6294:11:1"}],"id":596,"name":"MemberAccess","src":"6294:25:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":597,"name":"Literal","src":"6322:1:1"}],"id":598,"name":"Assignment","src":"6294:29:1"}],"id":599,"name":"ExpressionStatement","src":"6294:29:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":600,"name":"Identifier","src":"6333:4:1"}],"id":603,"name":"MemberAccess","src":"6333:16:1"}],"id":604,"name":"MemberAccess","src":"6333:20:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":605,"name":"Literal","src":"6356:1:1"}],"id":606,"name":"Assignment","src":"6333:24:1"}],"id":607,"name":"ExpressionStatement","src":"6333:24:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":608,"name":"Identifier","src":"6367:4:1"}],"id":611,"name":"MemberAccess","src":"6367:16:1"}],"id":612,"name":"MemberAccess","src":"6367:30:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":613,"name":"Literal","src":"6400:1:1"}],"id":614,"name":"Assignment","src":"6367:34:1"}],"id":615,"name":"ExpressionStatement","src":"6367:34:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":616,"name":"Identifier","src":"6412:4:1"}],"id":619,"name":"MemberAccess","src":"6412:11:1"}],"id":620,"name":"MemberAccess","src":"6412:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":621,"name":"Literal","src":"6432:1:1"}],"id":622,"name":"Assignment","src":"6412:21:1"}],"id":623,"name":"ExpressionStatement","src":"6412:21:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":624,"name":"Identifier","src":"6450:4:1"}],"id":625,"name":"MemberAccess","src":"6450:11:1"}],"id":626,"name":"MemberAccess","src":"6450:16:1"}],"id":627,"name":"UnaryOperation","src":"6443:23:1"}],"id":628,"name":"ExpressionStatement","src":"6443:23:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":629,"name":"Identifier","src":"6477:4:1"}],"id":632,"name":"MemberAccess","src":"6477:16:1"}],"id":633,"name":"MemberAccess","src":"6477:22:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":634,"name":"Literal","src":"6502:1:1"}],"id":635,"name":"Assignment","src":"6477:26:1"}],"id":636,"name":"ExpressionStatement","src":"6477:26:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":637,"name":"Identifier","src":"6520:4:1"}],"id":638,"name":"MemberAccess","src":"6520:16:1"}],"id":639,"name":"MemberAccess","src":"6520:21:1"}],"id":640,"name":"UnaryOperation","src":"6513:28:1"}],"id":641,"name":"ExpressionStatement","src":"6513:28:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":642,"name":"Identifier","src":"6552:4:1"}],"id":645,"name":"MemberAccess","src":"6552:11:1"}],"id":646,"name":"MemberAccess","src":"6552:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":647,"name":"Literal","src":"6572:1:1"}],"id":648,"name":"Assignment","src":"6552:21:1"}],"id":649,"name":"ExpressionStatement","src":"6552:21:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":565,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":650,"name":"Identifier","src":"6590:4:1"}],"id":651,"name":"MemberAccess","src":"6590:11:1"}],"id":652,"name":"MemberAccess","src":"6590:16:1"}],"id":653,"name":"UnaryOperation","src":"6583:23:1"}],"id":654,"name":"ExpressionStatement","src":"6583:23:1"}],"id":655,"name":"Block","src":"6162:451:1"}],"id":656,"name":"FunctionDefinition","src":"6119:494:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"recalculate","overrides":null,"scope":1693,"stateMutability":"view","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@param player A player from a Blackjack game, holding a hand to calculate the score on\\n @return score The Blackjack score for the player."},"id":657,"name":"StructuredDocumentation","src":"6619:148:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"player","overrides":null,"scope":727,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":658,"name":"UserDefinedTypeName","src":"6793:6:1"}],"id":659,"name":"VariableDeclaration","src":"6793:21:1"}],"id":660,"name":"ParameterList","src":"6792:23:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"score","overrides":null,"scope":727,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":661,"name":"ElementaryTypeName","src":"6838:5:1"}],"id":662,"name":"VariableDeclaration","src":"6838:11:1"}],"id":663,"name":"ParameterList","src":"6837:13:1"},{"children":[{"attributes":{"assignments":[665]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"numberOfAces","overrides":null,"scope":726,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":664,"name":"ElementaryTypeName","src":"6861:5:1"}],"id":665,"name":"VariableDeclaration","src":"6861:18:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":666,"name":"Literal","src":"6882:1:1"}],"id":667,"name":"VariableDeclarationStatement","src":"6861:22:1"},{"children":[{"attributes":{"assignments":[669]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"i","overrides":null,"scope":709,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":668,"name":"ElementaryTypeName","src":"6898:5:1"}],"id":669,"name":"VariableDeclaration","src":"6898:7:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":670,"name":"Literal","src":"6908:1:1"}],"id":671,"name":"VariableDeclarationStatement","src":"6898:11:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":669,"type":"uint8","value":"i"},"id":672,"name":"Identifier","src":"6911:1:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":659,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":673,"name":"Identifier","src":"6915:6:1"}],"id":674,"name":"MemberAccess","src":"6915:11:1"}],"id":675,"name":"MemberAccess","src":"6915:18:1"}],"id":676,"name":"BinaryOperation","src":"6911:22:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":669,"type":"uint8","value":"i"},"id":677,"name":"Identifier","src":"6935:1:1"}],"id":678,"name":"UnaryOperation","src":"6935:3:1"}],"id":679,"name":"ExpressionStatement","src":"6935:3:1"},{"children":[{"attributes":{"assignments":[681]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"card","overrides":null,"scope":708,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":680,"name":"ElementaryTypeName","src":"6954:5:1"}],"id":681,"name":"VariableDeclaration","src":"6954:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)"},"children":[{"attributes":{"name":"uint8","type":null},"id":682,"name":"ElementaryTypeName","src":"6968:5:1"}],"id":683,"name":"ElementaryTypeNameExpression","src":"6968:5:1"}],"id":684,"name":"TupleExpression","src":"6967:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":659,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":685,"name":"Identifier","src":"6976:6:1"}],"id":686,"name":"MemberAccess","src":"6976:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":669,"type":"uint8","value":"i"},"id":687,"name":"Identifier","src":"6988:1:1"}],"id":688,"name":"IndexAccess","src":"6976:14:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3532","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 52","value":"52"},"id":689,"name":"Literal","src":"6993:2:1"}],"id":690,"name":"BinaryOperation","src":"6976:19:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3133","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 13","value":"13"},"id":691,"name":"Literal","src":"6998:2:1"}],"id":692,"name":"BinaryOperation","src":"6976:24:1"}],"id":693,"name":"FunctionCall","src":"6967:34:1"}],"id":694,"name":"VariableDeclarationStatement","src":"6954:47:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint8","value":"score"},"id":695,"name":"Identifier","src":"7015:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":67,"type":"uint8[13] storage ref","value":"cardValues"},"id":696,"name":"Identifier","src":"7024:10:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":681,"type":"uint8","value":"card"},"id":697,"name":"Identifier","src":"7035:4:1"}],"id":698,"name":"IndexAccess","src":"7024:16:1"}],"id":699,"name":"Assignment","src":"7015:25:1"}],"id":700,"name":"ExpressionStatement","src":"7015:25:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":681,"type":"uint8","value":"card"},"id":701,"name":"Identifier","src":"7058:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":702,"name":"Literal","src":"7066:1:1"}],"id":703,"name":"BinaryOperation","src":"7058:9:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":665,"type":"uint8","value":"numberOfAces"},"id":704,"name":"Identifier","src":"7069:12:1"}],"id":705,"name":"UnaryOperation","src":"7069:14:1"}],"id":706,"name":"ExpressionStatement","src":"7069:14:1"}],"id":707,"name":"IfStatement","src":"7054:29:1"}],"id":708,"name":"Block","src":"6940:154:1"}],"id":709,"name":"ForStatement","src":"6893:201:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":665,"type":"uint8","value":"numberOfAces"},"id":710,"name":"Identifier","src":"7110:12:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":711,"name":"Literal","src":"7125:1:1"}],"id":712,"name":"BinaryOperation","src":"7110:16:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint8","value":"score"},"id":713,"name":"Identifier","src":"7130:5:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":714,"name":"Literal","src":"7138:2:1"}],"id":715,"name":"BinaryOperation","src":"7130:10:1"}],"id":716,"name":"BinaryOperation","src":"7110:30:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint8","value":"score"},"id":717,"name":"Identifier","src":"7156:5:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":718,"name":"Literal","src":"7165:2:1"}],"id":719,"name":"Assignment","src":"7156:11:1"}],"id":720,"name":"ExpressionStatement","src":"7156:11:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"--","prefix":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":665,"type":"uint8","value":"numberOfAces"},"id":721,"name":"Identifier","src":"7181:12:1"}],"id":722,"name":"UnaryOperation","src":"7181:14:1"}],"id":723,"name":"ExpressionStatement","src":"7181:14:1"}],"id":724,"name":"Block","src":"7142:64:1"}],"id":725,"name":"WhileStatement","src":"7103:103:1"}],"id":726,"name":"Block","src":"6851:361:1"}],"id":727,"name":"FunctionDefinition","src":"6772:440:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","name":"dealCards","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@dev done only at start of hand\\n @param game The current game which is starting"},"id":728,"name":"StructuredDocumentation","src":"7218:90:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":756,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":729,"name":"UserDefinedTypeName","src":"7332:4:1"}],"id":730,"name":"VariableDeclaration","src":"7332:17:1"}],"id":731,"name":"ParameterList","src":"7331:19:1"},{"attributes":{"parameters":[null]},"children":[],"id":736,"name":"ParameterList","src":"7378:0:1"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"modifier (enum Blackjack.Stage)","value":"atStage"},"id":732,"name":"Identifier","src":"7359:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bet","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":733,"name":"Identifier","src":"7367:5:1"}],"id":734,"name":"MemberAccess","src":"7367:9:1"}],"id":735,"name":"ModifierInvocation","src":"7359:18:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":737,"name":"Identifier","src":"7388:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":738,"name":"Identifier","src":"7397:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":739,"name":"Identifier","src":"7403:4:1"}],"id":740,"name":"MemberAccess","src":"7403:11:1"}],"id":741,"name":"FunctionCall","src":"7388:27:1"}],"id":742,"name":"ExpressionStatement","src":"7388:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":743,"name":"Identifier","src":"7425:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":744,"name":"Identifier","src":"7434:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":745,"name":"Identifier","src":"7440:4:1"}],"id":746,"name":"MemberAccess","src":"7440:11:1"}],"id":747,"name":"FunctionCall","src":"7425:27:1"}],"id":748,"name":"ExpressionStatement","src":"7425:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":749,"name":"Identifier","src":"7462:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":750,"name":"Identifier","src":"7471:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":751,"name":"Identifier","src":"7477:4:1"}],"id":752,"name":"MemberAccess","src":"7477:11:1"}],"id":753,"name":"FunctionCall","src":"7462:27:1"}],"id":754,"name":"ExpressionStatement","src":"7462:27:1"}],"id":755,"name":"Block","src":"7378:118:1"}],"id":756,"name":"FunctionDefinition","src":"7313:183:1"},{"attributes":{"functionSelector":"f7654176","implemented":true,"isConstructor":false,"kind":"function","name":"split","overrides":null,"scope":1693,"stateMutability":"payable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Split first two cards into two hands, drawing one additional card for each. An equivalent bet value is required.\\n @dev not working correctly on last check - the require for bet size was reverting"},"id":757,"name":"StructuredDocumentation","src":"7502:214:1"},{"attributes":{"parameters":[null]},"children":[],"id":758,"name":"ParameterList","src":"7735:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":763,"name":"ParameterList","src":"7777:0:1"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"modifier (enum Blackjack.Stage)","value":"atStage"},"id":759,"name":"Identifier","src":"7753:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":760,"name":"Identifier","src":"7761:5:1"}],"id":761,"name":"MemberAccess","src":"7761:14:1"}],"id":762,"name":"ModifierInvocation","src":"7753:23:1"},{"children":[{"attributes":{"assignments":[765]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":901,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":764,"name":"UserDefinedTypeName","src":"7788:4:1"}],"id":765,"name":"VariableDeclaration","src":"7788:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":766,"name":"Identifier","src":"7808:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":767,"name":"Identifier","src":"7814:3:1"}],"id":768,"name":"MemberAccess","src":"7814:10:1"}],"id":769,"name":"IndexAccess","src":"7808:17:1"}],"id":770,"name":"VariableDeclarationStatement","src":"7788:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_621b42780cb140b59536f8fb89038f50afb971eea71a344e5bf15f0e581246bc","typeString":"literal_string \\"Must match original bet to split\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":771,"name":"Identifier","src":"7836:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":772,"name":"Identifier","src":"7844:3:1"}],"id":773,"name":"MemberAccess","src":"7844:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":774,"name":"Identifier","src":"7857:4:1"}],"id":775,"name":"MemberAccess","src":"7857:11:1"}],"id":776,"name":"MemberAccess","src":"7857:15:1"}],"id":777,"name":"BinaryOperation","src":"7844:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"4d757374206d61746368206f726967696e616c2062657420746f2073706c6974","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Must match original bet to split\\"","value":"Must match original bet to split"},"id":778,"name":"Literal","src":"7874:34:1"}],"id":779,"name":"FunctionCall","src":"7836:73:1"}],"id":780,"name":"ExpressionStatement","src":"7836:73:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82d1f0a4a0f0c9c2cb4e55e341ddc65c69cc4aa1f581117667da84111d451660","typeString":"literal_string \\"Can only split with two cards\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":781,"name":"Identifier","src":"7919:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":782,"name":"Identifier","src":"7927:4:1"}],"id":783,"name":"MemberAccess","src":"7927:11:1"}],"id":784,"name":"MemberAccess","src":"7927:16:1"}],"id":785,"name":"MemberAccess","src":"7927:23:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":786,"name":"Literal","src":"7954:1:1"}],"id":787,"name":"BinaryOperation","src":"7927:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"43616e206f6e6c792073706c697420776974682074776f206361726473","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Can only split with two cards\\"","value":"Can only split with two cards"},"id":788,"name":"Literal","src":"7957:31:1"}],"id":789,"name":"FunctionCall","src":"7919:70:1"}],"id":790,"name":"ExpressionStatement","src":"7919:70:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee0b85790739927cb9cbe0e9c0d6fc50bda7cf8c5c048a825f0d018305c400a5","typeString":"literal_string \\"Can only split once\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":791,"name":"Identifier","src":"7999:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":792,"name":"Identifier","src":"8007:4:1"}],"id":793,"name":"MemberAccess","src":"8007:16:1"}],"id":794,"name":"MemberAccess","src":"8007:21:1"}],"id":795,"name":"MemberAccess","src":"8007:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":796,"name":"Literal","src":"8039:1:1"}],"id":797,"name":"BinaryOperation","src":"8007:33:1"},{"attributes":{"argumentTypes":null,"hexvalue":"43616e206f6e6c792073706c6974206f6e6365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Can only split once\\"","value":"Can only split once"},"id":798,"name":"Literal","src":"8042:21:1"}],"id":799,"name":"FunctionCall","src":"7999:65:1"}],"id":800,"name":"ExpressionStatement","src":"7999:65:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b654e7be49beb2682aa99367bc52163dc91df06c10b7bc3eb3902c610f3cee3","typeString":"literal_string \\"First two cards must be same\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":801,"name":"Identifier","src":"8074:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":67,"type":"uint8[13] storage ref","value":"cardValues"},"id":802,"name":"Identifier","src":"8082:10:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":803,"name":"Identifier","src":"8093:4:1"}],"id":804,"name":"MemberAccess","src":"8093:11:1"}],"id":805,"name":"MemberAccess","src":"8093:16:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":806,"name":"Literal","src":"8110:1:1"}],"id":807,"name":"IndexAccess","src":"8093:19:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3133","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 13","value":"13"},"id":808,"name":"Literal","src":"8115:2:1"}],"id":809,"name":"BinaryOperation","src":"8093:24:1"}],"id":810,"name":"IndexAccess","src":"8082:36:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":67,"type":"uint8[13] storage ref","value":"cardValues"},"id":811,"name":"Identifier","src":"8122:10:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":812,"name":"Identifier","src":"8133:4:1"}],"id":813,"name":"MemberAccess","src":"8133:11:1"}],"id":814,"name":"MemberAccess","src":"8133:16:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":815,"name":"Literal","src":"8150:1:1"}],"id":816,"name":"IndexAccess","src":"8133:19:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3133","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 13","value":"13"},"id":817,"name":"Literal","src":"8155:2:1"}],"id":818,"name":"BinaryOperation","src":"8133:24:1"}],"id":819,"name":"IndexAccess","src":"8122:36:1"}],"id":820,"name":"BinaryOperation","src":"8082:76:1"},{"attributes":{"argumentTypes":null,"hexvalue":"46697273742074776f206361726473206d7573742062652073616d65","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"First two cards must be same\\"","value":"First two cards must be same"},"id":821,"name":"Literal","src":"8176:30:1"}],"id":822,"name":"FunctionCall","src":"8074:133:1"}],"id":823,"name":"ExpressionStatement","src":"8074:133:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":824,"name":"Identifier","src":"8218:4:1"}],"id":828,"name":"MemberAccess","src":"8218:16:1"}],"id":829,"name":"MemberAccess","src":"8218:21:1"}],"id":830,"name":"MemberAccess","src":"8218:26:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":831,"name":"Identifier","src":"8245:4:1"}],"id":832,"name":"MemberAccess","src":"8245:11:1"}],"id":833,"name":"MemberAccess","src":"8245:16:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":834,"name":"Literal","src":"8262:1:1"}],"id":835,"name":"IndexAccess","src":"8245:19:1"}],"id":836,"name":"FunctionCall","src":"8218:47:1"}],"id":837,"name":"ExpressionStatement","src":"8218:47:1"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"pop","referencedDeclaration":null,"type":"function ()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":838,"name":"Identifier","src":"8275:4:1"}],"id":842,"name":"MemberAccess","src":"8275:11:1"}],"id":843,"name":"MemberAccess","src":"8275:16:1"}],"id":844,"name":"MemberAccess","src":"8275:20:1"}],"id":845,"name":"FunctionCall","src":"8275:22:1"}],"id":846,"name":"ExpressionStatement","src":"8275:22:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":847,"name":"Identifier","src":"8308:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":848,"name":"Identifier","src":"8317:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":849,"name":"Identifier","src":"8323:4:1"}],"id":850,"name":"MemberAccess","src":"8323:11:1"}],"id":851,"name":"FunctionCall","src":"8308:27:1"}],"id":852,"name":"ExpressionStatement","src":"8308:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":853,"name":"Identifier","src":"8345:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":854,"name":"Identifier","src":"8354:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":855,"name":"Identifier","src":"8360:4:1"}],"id":856,"name":"MemberAccess","src":"8360:16:1"}],"id":857,"name":"FunctionCall","src":"8345:32:1"}],"id":858,"name":"ExpressionStatement","src":"8345:32:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"},{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":135,"type":"function (uint256,uint256[] memory,uint256[] memory)","value":"PlayerHand"},"id":859,"name":"Identifier","src":"8392:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":860,"name":"Identifier","src":"8403:4:1"}],"id":861,"name":"MemberAccess","src":"8403:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":862,"name":"Identifier","src":"8412:4:1"}],"id":863,"name":"MemberAccess","src":"8412:11:1"}],"id":864,"name":"MemberAccess","src":"8412:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":865,"name":"Identifier","src":"8430:4:1"}],"id":866,"name":"MemberAccess","src":"8430:16:1"}],"id":867,"name":"MemberAccess","src":"8430:21:1"}],"id":868,"name":"FunctionCall","src":"8392:60:1"}],"id":869,"name":"EmitStatement","src":"8387:65:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":870,"name":"Identifier","src":"8463:4:1"}],"id":873,"name":"MemberAccess","src":"8463:11:1"}],"id":874,"name":"MemberAccess","src":"8463:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":875,"name":"Identifier","src":"8483:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":876,"name":"Identifier","src":"8495:4:1"}],"id":877,"name":"MemberAccess","src":"8495:11:1"}],"id":878,"name":"FunctionCall","src":"8483:24:1"}],"id":879,"name":"Assignment","src":"8463:44:1"}],"id":880,"name":"ExpressionStatement","src":"8463:44:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":881,"name":"Identifier","src":"8517:4:1"}],"id":884,"name":"MemberAccess","src":"8517:16:1"}],"id":885,"name":"MemberAccess","src":"8517:22:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":886,"name":"Identifier","src":"8542:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":887,"name":"Identifier","src":"8554:4:1"}],"id":888,"name":"MemberAccess","src":"8554:16:1"}],"id":889,"name":"FunctionCall","src":"8542:29:1"}],"id":890,"name":"Assignment","src":"8517:54:1"}],"id":891,"name":"ExpressionStatement","src":"8517:54:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":765,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":892,"name":"Identifier","src":"8582:4:1"}],"id":895,"name":"MemberAccess","src":"8582:16:1"}],"id":896,"name":"MemberAccess","src":"8582:20:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":897,"name":"Identifier","src":"8605:3:1"}],"id":898,"name":"MemberAccess","src":"8605:9:1"}],"id":899,"name":"Assignment","src":"8582:32:1"}],"id":900,"name":"ExpressionStatement","src":"8582:32:1"}],"id":901,"name":"Block","src":"7777:844:1"}],"id":902,"name":"FunctionDefinition","src":"7721:900:1"},{"attributes":{"functionSelector":"a7e1f6a2","implemented":true,"isConstructor":false,"kind":"function","name":"doubleDown","overrides":null,"scope":1693,"stateMutability":"payable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Double down on first two cards, taking one additional card and standing, with an opportunity to double original bet.\\n @dev is this vulnerable to OOG leaking drawn card info?\\n @dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath"},"id":903,"name":"StructuredDocumentation","src":"8627:268:1"},{"attributes":{"parameters":[null]},"children":[],"id":904,"name":"ParameterList","src":"8919:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":911,"name":"ParameterList","src":"8986:0:1"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)","value":"eitherStage"},"id":905,"name":"Identifier","src":"8937:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":906,"name":"Identifier","src":"8949:5:1"}],"id":907,"name":"MemberAccess","src":"8949:14:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":908,"name":"Identifier","src":"8965:5:1"}],"id":909,"name":"MemberAccess","src":"8965:19:1"}],"id":910,"name":"ModifierInvocation","src":"8937:48:1"},{"children":[{"attributes":{"assignments":[913]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1053,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":912,"name":"UserDefinedTypeName","src":"8996:4:1"}],"id":913,"name":"VariableDeclaration","src":"8996:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":914,"name":"Identifier","src":"9016:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":915,"name":"Identifier","src":"9022:3:1"}],"id":916,"name":"MemberAccess","src":"9022:10:1"}],"id":917,"name":"IndexAccess","src":"9016:17:1"}],"id":918,"name":"VariableDeclarationStatement","src":"8996:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87b19402fddb30cd2feae4503e4b7db798849e63a738e6727e358d9b53da79d9","typeString":"literal_string \\"Can only double down with two cards\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":919,"name":"Identifier","src":"9044:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":920,"name":"Identifier","src":"9053:4:1"}],"id":921,"name":"MemberAccess","src":"9053:11:1"}],"id":922,"name":"MemberAccess","src":"9053:16:1"}],"id":923,"name":"MemberAccess","src":"9053:23:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":924,"name":"Literal","src":"9080:1:1"}],"id":925,"name":"BinaryOperation","src":"9053:28:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":926,"name":"Identifier","src":"9085:4:1"}],"id":927,"name":"MemberAccess","src":"9085:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":928,"name":"Identifier","src":"9099:5:1"}],"id":929,"name":"MemberAccess","src":"9099:14:1"}],"id":930,"name":"BinaryOperation","src":"9085:28:1"}],"id":931,"name":"BinaryOperation","src":"9053:60:1"}],"id":932,"name":"TupleExpression","src":"9052:62:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":933,"name":"Identifier","src":"9135:4:1"}],"id":934,"name":"MemberAccess","src":"9135:16:1"}],"id":935,"name":"MemberAccess","src":"9135:21:1"}],"id":936,"name":"MemberAccess","src":"9135:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":937,"name":"Literal","src":"9167:1:1"}],"id":938,"name":"BinaryOperation","src":"9135:33:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":939,"name":"Identifier","src":"9172:4:1"}],"id":940,"name":"MemberAccess","src":"9172:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":941,"name":"Identifier","src":"9186:5:1"}],"id":942,"name":"MemberAccess","src":"9186:19:1"}],"id":943,"name":"BinaryOperation","src":"9172:33:1"}],"id":944,"name":"BinaryOperation","src":"9135:70:1"}],"id":945,"name":"TupleExpression","src":"9134:72:1"}],"id":946,"name":"BinaryOperation","src":"9052:154:1"},{"attributes":{"argumentTypes":null,"hexvalue":"43616e206f6e6c7920646f75626c6520646f776e20776974682074776f206361726473","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Can only double down with two cards\\"","value":"Can only double down with two cards"},"id":947,"name":"Literal","src":"9224:37:1"}],"id":948,"name":"FunctionCall","src":"9044:218:1"}],"id":949,"name":"ExpressionStatement","src":"9044:218:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6ec20e5b462460fe49f164efb32dbcf3aa972a459a40a8614386396ce7d613b","typeString":"literal_string \\"Bet cannot be greater than original bet\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":950,"name":"Identifier","src":"9272:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":951,"name":"Identifier","src":"9280:3:1"}],"id":952,"name":"MemberAccess","src":"9280:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":953,"name":"Identifier","src":"9293:4:1"}],"id":954,"name":"MemberAccess","src":"9293:11:1"}],"id":955,"name":"MemberAccess","src":"9293:15:1"}],"id":956,"name":"BinaryOperation","src":"9280:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"4265742063616e6e6f742062652067726561746572207468616e206f726967696e616c20626574","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Bet cannot be greater than original bet\\"","value":"Bet cannot be greater than original bet"},"id":957,"name":"Literal","src":"9310:41:1"}],"id":958,"name":"FunctionCall","src":"9272:80:1"}],"id":959,"name":"ExpressionStatement","src":"9272:80:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":960,"name":"Identifier","src":"9367:4:1"}],"id":961,"name":"MemberAccess","src":"9367:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":962,"name":"Identifier","src":"9381:5:1"}],"id":963,"name":"MemberAccess","src":"9381:14:1"}],"id":964,"name":"BinaryOperation","src":"9367:28:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":965,"name":"Identifier","src":"9411:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":966,"name":"Identifier","src":"9420:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":967,"name":"Identifier","src":"9426:4:1"}],"id":968,"name":"MemberAccess","src":"9426:11:1"}],"id":969,"name":"FunctionCall","src":"9411:27:1"}],"id":970,"name":"ExpressionStatement","src":"9411:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":971,"name":"Identifier","src":"9452:4:1"}],"id":974,"name":"MemberAccess","src":"9452:11:1"}],"id":975,"name":"MemberAccess","src":"9452:25:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":976,"name":"Identifier","src":"9480:8:1"}],"id":977,"name":"MemberAccess","src":"9480:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":978,"name":"Identifier","src":"9493:4:1"}],"id":979,"name":"MemberAccess","src":"9493:11:1"}],"id":980,"name":"MemberAccess","src":"9493:25:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":981,"name":"Identifier","src":"9520:3:1"}],"id":982,"name":"MemberAccess","src":"9520:9:1"}],"id":983,"name":"FunctionCall","src":"9480:50:1"}],"id":984,"name":"Assignment","src":"9452:78:1"}],"id":985,"name":"ExpressionStatement","src":"9452:78:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":986,"name":"Identifier","src":"9544:4:1"}],"id":989,"name":"MemberAccess","src":"9544:11:1"}],"id":990,"name":"MemberAccess","src":"9544:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":991,"name":"Identifier","src":"9564:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":992,"name":"Identifier","src":"9576:4:1"}],"id":993,"name":"MemberAccess","src":"9576:11:1"}],"id":994,"name":"FunctionCall","src":"9564:24:1"}],"id":995,"name":"Assignment","src":"9544:44:1"}],"id":996,"name":"ExpressionStatement","src":"9544:44:1"}],"id":997,"name":"Block","src":"9397:204:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":998,"name":"Identifier","src":"9611:4:1"}],"id":999,"name":"MemberAccess","src":"9611:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1000,"name":"Identifier","src":"9625:5:1"}],"id":1001,"name":"MemberAccess","src":"9625:19:1"}],"id":1002,"name":"BinaryOperation","src":"9611:33:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":1003,"name":"Identifier","src":"9660:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1004,"name":"Identifier","src":"9669:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1005,"name":"Identifier","src":"9675:4:1"}],"id":1006,"name":"MemberAccess","src":"9675:16:1"}],"id":1007,"name":"FunctionCall","src":"9660:32:1"}],"id":1008,"name":"ExpressionStatement","src":"9660:32:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1009,"name":"Identifier","src":"9706:4:1"}],"id":1012,"name":"MemberAccess","src":"9706:16:1"}],"id":1013,"name":"MemberAccess","src":"9706:30:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1014,"name":"Identifier","src":"9739:8:1"}],"id":1015,"name":"MemberAccess","src":"9739:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1016,"name":"Identifier","src":"9752:4:1"}],"id":1017,"name":"MemberAccess","src":"9752:16:1"}],"id":1018,"name":"MemberAccess","src":"9752:30:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1019,"name":"Identifier","src":"9784:3:1"}],"id":1020,"name":"MemberAccess","src":"9784:9:1"}],"id":1021,"name":"FunctionCall","src":"9739:55:1"}],"id":1022,"name":"Assignment","src":"9706:88:1"}],"id":1023,"name":"ExpressionStatement","src":"9706:88:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1024,"name":"Identifier","src":"9808:4:1"}],"id":1027,"name":"MemberAccess","src":"9808:16:1"}],"id":1028,"name":"MemberAccess","src":"9808:22:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":1029,"name":"Identifier","src":"9833:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1030,"name":"Identifier","src":"9845:4:1"}],"id":1031,"name":"MemberAccess","src":"9845:16:1"}],"id":1032,"name":"FunctionCall","src":"9833:29:1"}],"id":1033,"name":"Assignment","src":"9808:54:1"}],"id":1034,"name":"ExpressionStatement","src":"9808:54:1"}],"id":1035,"name":"Block","src":"9646:227:1"}],"id":1036,"name":"IfStatement","src":"9607:266:1"}],"id":1037,"name":"IfStatement","src":"9363:510:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"function (struct Blackjack.Game storage pointer)","value":"nextStage"},"id":1038,"name":"Identifier","src":"9883:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1039,"name":"Identifier","src":"9893:4:1"}],"id":1040,"name":"FunctionCall","src":"9883:15:1"}],"id":1041,"name":"ExpressionStatement","src":"9883:15:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1042,"name":"Identifier","src":"9912:4:1"}],"id":1043,"name":"MemberAccess","src":"9912:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ConcludeHands","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1044,"name":"Identifier","src":"9926:5:1"}],"id":1045,"name":"MemberAccess","src":"9926:19:1"}],"id":1046,"name":"BinaryOperation","src":"9912:33:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (struct Blackjack.Game storage pointer)","value":"concludeGame"},"id":1047,"name":"Identifier","src":"9961:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1048,"name":"Identifier","src":"9974:4:1"}],"id":1049,"name":"FunctionCall","src":"9961:18:1"}],"id":1050,"name":"ExpressionStatement","src":"9961:18:1"}],"id":1051,"name":"Block","src":"9947:43:1"}],"id":1052,"name":"IfStatement","src":"9909:81:1"}],"id":1053,"name":"Block","src":"8986:1010:1"}],"id":1054,"name":"FunctionDefinition","src":"8900:1096:1"},{"attributes":{"functionSelector":"2ae3594a","implemented":true,"isConstructor":false,"kind":"function","name":"hit","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Hit, taking one additional card on the current hand.\\n @dev is this vulnerable to OOG leaking drawn card info?"},"id":1055,"name":"StructuredDocumentation","src":"10002:128:1"},{"attributes":{"parameters":[null]},"children":[],"id":1056,"name":"ParameterList","src":"10147:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":1063,"name":"ParameterList","src":"10206:0:1"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)","value":"eitherStage"},"id":1057,"name":"Identifier","src":"10157:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1058,"name":"Identifier","src":"10169:5:1"}],"id":1059,"name":"MemberAccess","src":"10169:14:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1060,"name":"Identifier","src":"10185:5:1"}],"id":1061,"name":"MemberAccess","src":"10185:19:1"}],"id":1062,"name":"ModifierInvocation","src":"10157:48:1"},{"children":[{"attributes":{"assignments":[1065]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1174,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1064,"name":"UserDefinedTypeName","src":"10216:4:1"}],"id":1065,"name":"VariableDeclaration","src":"10216:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":1066,"name":"Identifier","src":"10236:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1067,"name":"Identifier","src":"10242:3:1"}],"id":1068,"name":"MemberAccess","src":"10242:10:1"}],"id":1069,"name":"IndexAccess","src":"10236:17:1"}],"id":1070,"name":"VariableDeclarationStatement","src":"10216:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool) pure","value":"require"},"id":1071,"name":"Identifier","src":"10264:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1072,"name":"Identifier","src":"10272:4:1"}],"id":1073,"name":"MemberAccess","src":"10272:11:1"}],"id":1074,"name":"MemberAccess","src":"10272:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1075,"name":"Literal","src":"10292:2:1"}],"id":1076,"name":"BinaryOperation","src":"10272:22:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1077,"name":"Identifier","src":"10299:4:1"}],"id":1078,"name":"MemberAccess","src":"10299:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1079,"name":"Identifier","src":"10313:5:1"}],"id":1080,"name":"MemberAccess","src":"10313:14:1"}],"id":1081,"name":"BinaryOperation","src":"10299:28:1"}],"id":1082,"name":"BinaryOperation","src":"10272:55:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1083,"name":"Identifier","src":"10332:4:1"}],"id":1084,"name":"MemberAccess","src":"10332:16:1"}],"id":1085,"name":"MemberAccess","src":"10332:22:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1086,"name":"Literal","src":"10357:2:1"}],"id":1087,"name":"BinaryOperation","src":"10332:27:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1088,"name":"Identifier","src":"10363:4:1"}],"id":1089,"name":"MemberAccess","src":"10363:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1090,"name":"Identifier","src":"10377:5:1"}],"id":1091,"name":"MemberAccess","src":"10377:19:1"}],"id":1092,"name":"BinaryOperation","src":"10363:33:1"}],"id":1093,"name":"BinaryOperation","src":"10332:64:1"}],"id":1094,"name":"TupleExpression","src":"10331:66:1"}],"id":1095,"name":"BinaryOperation","src":"10272:125:1"}],"id":1096,"name":"FunctionCall","src":"10264:134:1"}],"id":1097,"name":"ExpressionStatement","src":"10264:134:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1098,"name":"Identifier","src":"10413:4:1"}],"id":1099,"name":"MemberAccess","src":"10413:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1100,"name":"Identifier","src":"10427:5:1"}],"id":1101,"name":"MemberAccess","src":"10427:14:1"}],"id":1102,"name":"BinaryOperation","src":"10413:28:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":1103,"name":"Identifier","src":"10458:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1104,"name":"Identifier","src":"10467:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1105,"name":"Identifier","src":"10473:4:1"}],"id":1106,"name":"MemberAccess","src":"10473:11:1"}],"id":1107,"name":"FunctionCall","src":"10458:27:1"}],"id":1108,"name":"ExpressionStatement","src":"10458:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1109,"name":"Identifier","src":"10499:4:1"}],"id":1112,"name":"MemberAccess","src":"10499:11:1"}],"id":1113,"name":"MemberAccess","src":"10499:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":1114,"name":"Identifier","src":"10519:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1115,"name":"Identifier","src":"10531:4:1"}],"id":1116,"name":"MemberAccess","src":"10531:11:1"}],"id":1117,"name":"FunctionCall","src":"10519:24:1"}],"id":1118,"name":"Assignment","src":"10499:44:1"}],"id":1119,"name":"ExpressionStatement","src":"10499:44:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1120,"name":"Identifier","src":"10562:4:1"}],"id":1121,"name":"MemberAccess","src":"10562:11:1"}],"id":1122,"name":"MemberAccess","src":"10562:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1123,"name":"Literal","src":"10583:2:1"}],"id":1124,"name":"BinaryOperation","src":"10562:23:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"function (struct Blackjack.Game storage pointer)","value":"nextStage"},"id":1125,"name":"Identifier","src":"10605:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1126,"name":"Identifier","src":"10615:4:1"}],"id":1127,"name":"FunctionCall","src":"10605:15:1"}],"id":1128,"name":"ExpressionStatement","src":"10605:15:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1129,"name":"Identifier","src":"10643:4:1"}],"id":1130,"name":"MemberAccess","src":"10643:16:1"}],"id":1131,"name":"MemberAccess","src":"10643:21:1"}],"id":1132,"name":"MemberAccess","src":"10643:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1133,"name":"Literal","src":"10675:1:1"}],"id":1134,"name":"BinaryOperation","src":"10643:33:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (struct Blackjack.Game storage pointer)","value":"concludeGame"},"id":1135,"name":"Identifier","src":"10700:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1136,"name":"Identifier","src":"10713:4:1"}],"id":1137,"name":"FunctionCall","src":"10700:18:1"}],"id":1138,"name":"ExpressionStatement","src":"10700:18:1"}],"id":1139,"name":"Block","src":"10678:59:1"}],"id":1140,"name":"IfStatement","src":"10639:98:1"}],"id":1141,"name":"Block","src":"10587:164:1"}],"id":1142,"name":"IfStatement","src":"10558:193:1"}],"id":1143,"name":"Block","src":"10443:319:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":1144,"name":"Identifier","src":"10783:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1145,"name":"Identifier","src":"10792:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1146,"name":"Identifier","src":"10798:4:1"}],"id":1147,"name":"MemberAccess","src":"10798:16:1"}],"id":1148,"name":"FunctionCall","src":"10783:32:1"}],"id":1149,"name":"ExpressionStatement","src":"10783:32:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1150,"name":"Identifier","src":"10829:4:1"}],"id":1153,"name":"MemberAccess","src":"10829:16:1"}],"id":1154,"name":"MemberAccess","src":"10829:22:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint8","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":727,"type":"function (struct Blackjack.Player storage pointer) view returns (uint8)","value":"recalculate"},"id":1155,"name":"Identifier","src":"10854:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1156,"name":"Identifier","src":"10866:4:1"}],"id":1157,"name":"MemberAccess","src":"10866:16:1"}],"id":1158,"name":"FunctionCall","src":"10854:29:1"}],"id":1159,"name":"Assignment","src":"10829:54:1"}],"id":1160,"name":"ExpressionStatement","src":"10829:54:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1161,"name":"Identifier","src":"10902:4:1"}],"id":1162,"name":"MemberAccess","src":"10902:16:1"}],"id":1163,"name":"MemberAccess","src":"10902:22:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1164,"name":"Literal","src":"10928:2:1"}],"id":1165,"name":"BinaryOperation","src":"10902:28:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (struct Blackjack.Game storage pointer)","value":"concludeGame"},"id":1166,"name":"Identifier","src":"10950:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1065,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1167,"name":"Identifier","src":"10963:4:1"}],"id":1168,"name":"FunctionCall","src":"10950:18:1"}],"id":1169,"name":"ExpressionStatement","src":"10950:18:1"}],"id":1170,"name":"Block","src":"10932:51:1"}],"id":1171,"name":"IfStatement","src":"10898:85:1"}],"id":1172,"name":"Block","src":"10768:225:1"}],"id":1173,"name":"IfStatement","src":"10409:584:1"}],"id":1174,"name":"Block","src":"10206:793:1"}],"id":1175,"name":"FunctionDefinition","src":"10135:864:1"},{"attributes":{"functionSelector":"c2897b10","implemented":true,"isConstructor":false,"kind":"function","name":"stand","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Standing, taking no more additional cards and concluding the current hand.\\n @dev is this vulnerable to gas limit leaking drawn card info?"},"id":1176,"name":"StructuredDocumentation","src":"11005:156:1"},{"attributes":{"parameters":[null]},"children":[],"id":1177,"name":"ParameterList","src":"11180:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":1184,"name":"ParameterList","src":"11239:0:1"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"modifier (enum Blackjack.Stage,enum Blackjack.Stage)","value":"eitherStage"},"id":1178,"name":"Identifier","src":"11190:11:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1179,"name":"Identifier","src":"11202:5:1"}],"id":1180,"name":"MemberAccess","src":"11202:14:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1181,"name":"Identifier","src":"11218:5:1"}],"id":1182,"name":"MemberAccess","src":"11218:19:1"}],"id":1183,"name":"ModifierInvocation","src":"11190:48:1"},{"children":[{"attributes":{"assignments":[1186]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1226,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1185,"name":"UserDefinedTypeName","src":"11249:4:1"}],"id":1186,"name":"VariableDeclaration","src":"11249:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":1187,"name":"Identifier","src":"11269:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1188,"name":"Identifier","src":"11275:3:1"}],"id":1189,"name":"MemberAccess","src":"11275:10:1"}],"id":1190,"name":"IndexAccess","src":"11269:17:1"}],"id":1191,"name":"VariableDeclarationStatement","src":"11249:37:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1192,"name":"Identifier","src":"11301:4:1"}],"id":1193,"name":"MemberAccess","src":"11301:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlayHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1194,"name":"Identifier","src":"11315:5:1"}],"id":1195,"name":"MemberAccess","src":"11315:14:1"}],"id":1196,"name":"BinaryOperation","src":"11301:28:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1197,"name":"Identifier","src":"11333:4:1"}],"id":1198,"name":"MemberAccess","src":"11333:16:1"}],"id":1199,"name":"MemberAccess","src":"11333:21:1"}],"id":1200,"name":"MemberAccess","src":"11333:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1201,"name":"Literal","src":"11365:1:1"}],"id":1202,"name":"BinaryOperation","src":"11333:33:1"}],"id":1203,"name":"BinaryOperation","src":"11301:65:1"}],"id":1204,"name":"TupleExpression","src":"11300:67:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Stage_$18","typeString":"enum Blackjack.Stage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1205,"name":"Identifier","src":"11382:4:1"}],"id":1206,"name":"MemberAccess","src":"11382:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"PlaySplitHand","referencedDeclaration":null,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"type(enum Blackjack.Stage)","value":"Stage"},"id":1207,"name":"Identifier","src":"11396:5:1"}],"id":1208,"name":"MemberAccess","src":"11396:19:1"}],"id":1209,"name":"BinaryOperation","src":"11382:33:1"}],"id":1210,"name":"BinaryOperation","src":"11300:115:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"function (struct Blackjack.Game storage pointer)","value":"nextStage"},"id":1211,"name":"Identifier","src":"11443:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1212,"name":"Identifier","src":"11453:4:1"}],"id":1213,"name":"FunctionCall","src":"11443:15:1"}],"id":1214,"name":"ExpressionStatement","src":"11443:15:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (struct Blackjack.Game storage pointer)","value":"concludeGame"},"id":1215,"name":"Identifier","src":"11472:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1216,"name":"Identifier","src":"11485:4:1"}],"id":1217,"name":"FunctionCall","src":"11472:18:1"}],"id":1218,"name":"ExpressionStatement","src":"11472:18:1"}],"id":1219,"name":"Block","src":"11429:72:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"function (struct Blackjack.Game storage pointer)","value":"nextStage"},"id":1220,"name":"Identifier","src":"11521:9:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1221,"name":"Identifier","src":"11531:4:1"}],"id":1222,"name":"FunctionCall","src":"11521:15:1"}],"id":1223,"name":"ExpressionStatement","src":"11521:15:1"}],"id":1224,"name":"Block","src":"11507:40:1"}],"id":1225,"name":"IfStatement","src":"11297:250:1"}],"id":1226,"name":"Block","src":"11239:314:1"}],"id":1227,"name":"FunctionDefinition","src":"11166:387:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"drawDealerCards","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@dev TODO: Change dealer rules from S17 to H17\\n @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n @param game The concluded Blackjack game\\n @return bool Whether the dealer has Blackjack"},"id":1228,"name":"StructuredDocumentation","src":"11559:249:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1316,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1229,"name":"UserDefinedTypeName","src":"11838:4:1"}],"id":1230,"name":"VariableDeclaration","src":"11838:17:1"}],"id":1231,"name":"ParameterList","src":"11837:19:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":1316,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1232,"name":"ElementaryTypeName","src":"11874:4:1"}],"id":1233,"name":"VariableDeclaration","src":"11874:4:1"}],"id":1234,"name":"ParameterList","src":"11873:6:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1235,"name":"Identifier","src":"11909:4:1"}],"id":1236,"name":"MemberAccess","src":"11909:11:1"}],"id":1237,"name":"MemberAccess","src":"11909:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1238,"name":"Literal","src":"11929:2:1"}],"id":1239,"name":"BinaryOperation","src":"11909:22:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1240,"name":"Identifier","src":"11935:4:1"}],"id":1241,"name":"MemberAccess","src":"11935:16:1"}],"id":1242,"name":"MemberAccess","src":"11935:21:1"}],"id":1243,"name":"MemberAccess","src":"11935:28:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1244,"name":"Literal","src":"11967:1:1"}],"id":1245,"name":"BinaryOperation","src":"11935:33:1"}],"id":1246,"name":"BinaryOperation","src":"11909:59:1"}],"id":1247,"name":"TupleExpression","src":"11908:61:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1248,"name":"Identifier","src":"11986:4:1"}],"id":1249,"name":"MemberAccess","src":"11986:11:1"}],"id":1250,"name":"MemberAccess","src":"11986:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1251,"name":"Literal","src":"12006:2:1"}],"id":1252,"name":"BinaryOperation","src":"11986:22:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1253,"name":"Identifier","src":"12012:4:1"}],"id":1254,"name":"MemberAccess","src":"12012:16:1"}],"id":1255,"name":"MemberAccess","src":"12012:22:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1256,"name":"Literal","src":"12037:2:1"}],"id":1257,"name":"BinaryOperation","src":"12012:27:1"}],"id":1258,"name":"BinaryOperation","src":"11986:53:1"}],"id":1259,"name":"TupleExpression","src":"11985:55:1"}],"id":1260,"name":"BinaryOperation","src":"11908:132:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":1261,"name":"Identifier","src":"12069:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1262,"name":"Identifier","src":"12078:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1263,"name":"Identifier","src":"12084:4:1"}],"id":1264,"name":"MemberAccess","src":"12084:11:1"}],"id":1265,"name":"FunctionCall","src":"12069:27:1"}],"id":1266,"name":"ExpressionStatement","src":"12069:27:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1267,"name":"Identifier","src":"12153:4:1"}],"id":1268,"name":"MemberAccess","src":"12153:11:1"}],"id":1269,"name":"MemberAccess","src":"12153:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1270,"name":"Literal","src":"12174:2:1"}],"id":1271,"name":"BinaryOperation","src":"12153:23:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1272,"name":"Identifier","src":"12180:4:1"}],"id":1273,"name":"MemberAccess","src":"12180:11:1"}],"id":1274,"name":"MemberAccess","src":"12180:16:1"}],"id":1275,"name":"MemberAccess","src":"12180:23:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1276,"name":"Literal","src":"12207:1:1"}],"id":1277,"name":"BinaryOperation","src":"12180:28:1"}],"id":1278,"name":"BinaryOperation","src":"12153:55:1"},{"children":[{"attributes":{"functionReturnParameters":1234},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1279,"name":"Literal","src":"12235:4:1"}],"id":1280,"name":"Return","src":"12228:11:1"}],"id":1281,"name":"Block","src":"12210:44:1"}],"id":1282,"name":"IfStatement","src":"12149:105:1"}],"id":1283,"name":"Block","src":"12055:209:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1284,"name":"Identifier","src":"12351:4:1"}],"id":1285,"name":"MemberAccess","src":"12351:11:1"}],"id":1286,"name":"MemberAccess","src":"12351:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3137","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 17","value":"17"},"id":1287,"name":"Literal","src":"12371:2:1"}],"id":1288,"name":"BinaryOperation","src":"12351:22:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":358,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer)","value":"drawCard"},"id":1289,"name":"Identifier","src":"12393:8:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1290,"name":"Identifier","src":"12402:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1291,"name":"Identifier","src":"12408:4:1"}],"id":1292,"name":"MemberAccess","src":"12408:11:1"}],"id":1293,"name":"FunctionCall","src":"12393:27:1"}],"id":1294,"name":"ExpressionStatement","src":"12393:27:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1295,"name":"Identifier","src":"12443:4:1"}],"id":1296,"name":"MemberAccess","src":"12443:11:1"}],"id":1297,"name":"MemberAccess","src":"12443:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1298,"name":"Literal","src":"12464:2:1"}],"id":1299,"name":"BinaryOperation","src":"12443:23:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1230,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1300,"name":"Identifier","src":"12470:4:1"}],"id":1301,"name":"MemberAccess","src":"12470:11:1"}],"id":1302,"name":"MemberAccess","src":"12470:16:1"}],"id":1303,"name":"MemberAccess","src":"12470:23:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1304,"name":"Literal","src":"12497:1:1"}],"id":1305,"name":"BinaryOperation","src":"12470:28:1"}],"id":1306,"name":"BinaryOperation","src":"12443:55:1"},{"children":[{"attributes":{"functionReturnParameters":1234},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1307,"name":"Literal","src":"12529:4:1"}],"id":1308,"name":"Return","src":"12522:11:1"}],"id":1309,"name":"Block","src":"12500:52:1"}],"id":1310,"name":"IfStatement","src":"12439:113:1"}],"id":1311,"name":"Block","src":"12375:191:1"}],"id":1312,"name":"WhileStatement","src":"12344:222:1"}],"id":1313,"name":"Block","src":"12270:306:1"}],"id":1314,"name":"IfStatement","src":"11891:685:1"}],"id":1315,"name":"Block","src":"11880:703:1"}],"id":1316,"name":"FunctionDefinition","src":"11813:770:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","name":"concludeGame","overrides":null,"scope":1693,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n @dev [Module 10, Lesson 1] Circuit breakers implemented here\\n @param game The game to conclude, paying out players if necessary"},"id":1317,"name":"StructuredDocumentation","src":"12589:214:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1445,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1318,"name":"UserDefinedTypeName","src":"12830:4:1"}],"id":1319,"name":"VariableDeclaration","src":"12830:17:1"}],"id":1320,"name":"ParameterList","src":"12829:19:1"},{"attributes":{"parameters":[null]},"children":[],"id":1323,"name":"ParameterList","src":"12873:0:1"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":215,"type":"modifier ()","value":"stopInEmergency"},"id":1321,"name":"Identifier","src":"12857:15:1"}],"id":1322,"name":"ModifierInvocation","src":"12857:15:1"},{"children":[{"attributes":{"assignments":[1325]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"payout","overrides":null,"scope":1444,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1324,"name":"ElementaryTypeName","src":"12883:4:1"}],"id":1325,"name":"VariableDeclaration","src":"12883:11:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1326,"name":"Literal","src":"12897:1:1"}],"id":1327,"name":"VariableDeclarationStatement","src":"12883:15:1"},{"attributes":{"assignments":[1329]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"dealerHasBJ","overrides":null,"scope":1444,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1328,"name":"ElementaryTypeName","src":"12909:4:1"}],"id":1329,"name":"VariableDeclaration","src":"12909:16:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1316,"type":"function (struct Blackjack.Game storage pointer) returns (bool)","value":"drawDealerCards"},"id":1330,"name":"Identifier","src":"12928:15:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1331,"name":"Identifier","src":"12944:4:1"}],"id":1332,"name":"FunctionCall","src":"12928:21:1"}],"id":1333,"name":"VariableDeclarationStatement","src":"12909:40:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1334,"name":"Identifier","src":"12964:4:1"}],"id":1335,"name":"MemberAccess","src":"12964:11:1"}],"id":1336,"name":"MemberAccess","src":"12964:17:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1337,"name":"Literal","src":"12985:2:1"}],"id":1338,"name":"BinaryOperation","src":"12964:23:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1339,"name":"Identifier","src":"13003:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1340,"name":"Identifier","src":"13012:8:1"}],"id":1341,"name":"MemberAccess","src":"13012:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1342,"name":"Identifier","src":"13025:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1539,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer,bool) view returns (uint256)","value":"calculatePayout"},"id":1343,"name":"Identifier","src":"13033:15:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1344,"name":"Identifier","src":"13049:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1345,"name":"Identifier","src":"13055:4:1"}],"id":1346,"name":"MemberAccess","src":"13055:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"bool","value":"dealerHasBJ"},"id":1347,"name":"Identifier","src":"13068:11:1"}],"id":1348,"name":"FunctionCall","src":"13033:47:1"}],"id":1349,"name":"FunctionCall","src":"13012:70:1"}],"id":1350,"name":"Assignment","src":"13003:79:1"}],"id":1351,"name":"ExpressionStatement","src":"13003:79:1"}],"id":1352,"name":"Block","src":"12989:104:1"}],"id":1353,"name":"IfStatement","src":"12960:133:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1354,"name":"Identifier","src":"13107:4:1"}],"id":1355,"name":"MemberAccess","src":"13107:16:1"}],"id":1356,"name":"MemberAccess","src":"13107:22:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1357,"name":"Literal","src":"13133:2:1"}],"id":1358,"name":"BinaryOperation","src":"13107:28:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1359,"name":"Identifier","src":"13151:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1360,"name":"Identifier","src":"13160:8:1"}],"id":1361,"name":"MemberAccess","src":"13160:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1362,"name":"Identifier","src":"13173:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$33_storage_ptr","typeString":"struct Blackjack.Game storage pointer"},{"typeIdentifier":"t_struct$_Player_$45_storage","typeString":"struct Blackjack.Player storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1539,"type":"function (struct Blackjack.Game storage pointer,struct Blackjack.Player storage pointer,bool) view returns (uint256)","value":"calculatePayout"},"id":1363,"name":"Identifier","src":"13181:15:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1364,"name":"Identifier","src":"13197:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1365,"name":"Identifier","src":"13203:4:1"}],"id":1366,"name":"MemberAccess","src":"13203:16:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"bool","value":"dealerHasBJ"},"id":1367,"name":"Identifier","src":"13221:11:1"}],"id":1368,"name":"FunctionCall","src":"13181:52:1"}],"id":1369,"name":"FunctionCall","src":"13160:75:1"}],"id":1370,"name":"Assignment","src":"13151:84:1"}],"id":1371,"name":"ExpressionStatement","src":"13151:84:1"}],"id":1372,"name":"Block","src":"13137:109:1"}],"id":1373,"name":"IfStatement","src":"13103:143:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a009e10a9224e2becc186eede67e98bdaf8dffaa5ae42f721a75047ae64ec0ce","typeString":"literal_string \\"Dealer error - payout is too high.\\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":1374,"name":"Identifier","src":"13256:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1375,"name":"Identifier","src":"13264:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"mul","referencedDeclaration":1990,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1376,"name":"Identifier","src":"13274:8:1"}],"id":1377,"name":"MemberAccess","src":"13274:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1378,"name":"Identifier","src":"13287:4:1"}],"id":1379,"name":"MemberAccess","src":"13287:11:1"}],"id":1380,"name":"MemberAccess","src":"13287:15:1"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":1381,"name":"Literal","src":"13304:1:1"}],"id":1382,"name":"FunctionCall","src":"13274:32:1"}],"id":1383,"name":"BinaryOperation","src":"13264:42:1"},{"attributes":{"argumentTypes":null,"hexvalue":"4465616c6572206572726f72202d207061796f757420697320746f6f20686967682e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \\"Dealer error - payout is too high.\\"","value":"Dealer error - payout is too high."},"id":1384,"name":"Literal","src":"13308:36:1"}],"id":1385,"name":"FunctionCall","src":"13256:89:1"}],"id":1386,"name":"ExpressionStatement","src":"13256:89:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1387,"name":"Identifier","src":"13398:6:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1388,"name":"Literal","src":"13408:1:1"}],"id":1389,"name":"BinaryOperation","src":"13398:11:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1390,"name":"Identifier","src":"13425:3:1"}],"id":1393,"name":"MemberAccess","src":"13425:10:1"}],"id":1394,"name":"MemberAccess","src":"13425:19:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1395,"name":"Identifier","src":"13445:6:1"}],"id":1396,"name":"FunctionCall","src":"13425:27:1"}],"id":1397,"name":"ExpressionStatement","src":"13425:27:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":81,"type":"uint8","value":"lossCounter"},"id":1398,"name":"Identifier","src":"13466:11:1"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1399,"name":"Literal","src":"13481:1:1"}],"id":1400,"name":"Assignment","src":"13466:16:1"}],"id":1401,"name":"ExpressionStatement","src":"13466:16:1"}],"id":1402,"name":"Block","src":"13411:111:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":81,"type":"uint8","value":"lossCounter"},"id":1403,"name":"Identifier","src":"13542:11:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1404,"name":"Literal","src":"13556:1:1"}],"id":1405,"name":"Assignment","src":"13542:15:1"}],"id":1406,"name":"ExpressionStatement","src":"13542:15:1"}],"id":1407,"name":"Block","src":"13528:65:1"}],"id":1408,"name":"IfStatement","src":"13394:199:1"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":81,"type":"uint8","value":"lossCounter"},"id":1409,"name":"Identifier","src":"13638:11:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"uint8","value":"lossLimit"},"id":1410,"name":"Identifier","src":"13653:9:1"}],"id":1411,"name":"BinaryOperation","src":"13638:24:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":79,"type":"bool","value":"stopLoss"},"id":1412,"name":"Identifier","src":"13666:8:1"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1413,"name":"Literal","src":"13677:4:1"}],"id":1414,"name":"Assignment","src":"13666:15:1"}],"id":1415,"name":"ExpressionStatement","src":"13666:15:1"}],"id":1416,"name":"Block","src":"13664:20:1"}],"id":1417,"name":"IfStatement","src":"13634:50:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"maxBet"},"id":1418,"name":"Identifier","src":"13720:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":2007,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1419,"name":"Identifier","src":"13729:8:1"}],"id":1420,"name":"MemberAccess","src":"13729:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address payable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Blackjack_$1693","typeString":"contract Blackjack"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)"},"children":[{"attributes":{"name":"address","type":null},"id":1421,"name":"ElementaryTypeName","src":"13742:7:1"}],"id":1422,"name":"ElementaryTypeNameExpression","src":"13742:7:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-28,"type":"contract Blackjack","value":"this"},"id":1423,"name":"Identifier","src":"13750:4:1"}],"id":1424,"name":"FunctionCall","src":"13742:13:1"}],"id":1425,"name":"MemberAccess","src":"13742:21:1"},{"attributes":{"argumentTypes":null,"hexvalue":"323030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 200","value":"200"},"id":1426,"name":"Literal","src":"13765:3:1"}],"id":1427,"name":"FunctionCall","src":"13729:40:1"}],"id":1428,"name":"Assignment","src":"13720:49:1"}],"id":1429,"name":"ExpressionStatement","src":"13720:49:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"overloadedDeclarations":[null],"referencedDeclaration":125,"type":"function (uint256,uint64,uint256,uint8,uint8)","value":"Result"},"id":1430,"name":"Identifier","src":"13785:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1431,"name":"Identifier","src":"13792:4:1"}],"id":1432,"name":"MemberAccess","src":"13792:7:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1433,"name":"Identifier","src":"13801:4:1"}],"id":1434,"name":"MemberAccess","src":"13801:10:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"uint256","value":"payout"},"id":1435,"name":"Identifier","src":"13813:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1436,"name":"Identifier","src":"13821:4:1"}],"id":1437,"name":"MemberAccess","src":"13821:11:1"}],"id":1438,"name":"MemberAccess","src":"13821:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1319,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1439,"name":"Identifier","src":"13840:4:1"}],"id":1440,"name":"MemberAccess","src":"13840:11:1"}],"id":1441,"name":"MemberAccess","src":"13840:17:1"}],"id":1442,"name":"FunctionCall","src":"13785:73:1"}],"id":1443,"name":"EmitStatement","src":"13780:78:1"}],"id":1444,"name":"Block","src":"12873:992:1"}],"id":1445,"name":"FunctionDefinition","src":"12808:1057:1"},{"attributes":{"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"calculatePayout","overrides":null,"scope":1693,"stateMutability":"view","virtual":false,"visibility":"private"},"children":[{"attributes":{"text":"@dev [Module 9, Lesson 3] Preventing integer overflow with SafeMath\\n @dev TODO: Properly handle when dealer has Blackjack (i.e., refund doubles and splits?)\\n @param game The concluded Blackjack game\\n @param player A player from the game to calculate the payout for\\n @return payout Amount of ether to transfer to player for winnings"},"id":1446,"name":"StructuredDocumentation","src":"13871:363:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1539,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1447,"name":"UserDefinedTypeName","src":"14264:4:1"}],"id":1448,"name":"VariableDeclaration","src":"14264:17:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"player","overrides":null,"scope":1539,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":1449,"name":"UserDefinedTypeName","src":"14283:6:1"}],"id":1450,"name":"VariableDeclaration","src":"14283:21:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"dealerHasBJ","overrides":null,"scope":1539,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1451,"name":"ElementaryTypeName","src":"14306:4:1"}],"id":1452,"name":"VariableDeclaration","src":"14306:16:1"}],"id":1453,"name":"ParameterList","src":"14263:60:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"payout","overrides":null,"scope":1539,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1454,"name":"ElementaryTypeName","src":"14346:7:1"}],"id":1455,"name":"VariableDeclaration","src":"14346:14:1"}],"id":1456,"name":"ParameterList","src":"14345:16:1"},{"children":[{"attributes":{"assignments":[1458]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"dealer","overrides":null,"scope":1538,"stateVariable":false,"storageLocation":"memory","type":"struct Blackjack.Player","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Player","referencedDeclaration":45,"type":"struct Blackjack.Player"},"id":1457,"name":"UserDefinedTypeName","src":"14372:6:1"}],"id":1458,"name":"VariableDeclaration","src":"14372:20:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1448,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1459,"name":"Identifier","src":"14395:4:1"}],"id":1460,"name":"MemberAccess","src":"14395:11:1"}],"id":1461,"name":"VariableDeclarationStatement","src":"14372:34:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1462,"name":"Identifier","src":"14421:6:1"}],"id":1463,"name":"MemberAccess","src":"14421:12:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1464,"name":"Literal","src":"14437:2:1"}],"id":1465,"name":"BinaryOperation","src":"14421:18:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1466,"name":"Identifier","src":"14443:6:1"}],"id":1467,"name":"MemberAccess","src":"14443:11:1"}],"id":1468,"name":"MemberAccess","src":"14443:18:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1469,"name":"Literal","src":"14465:1:1"}],"id":1470,"name":"BinaryOperation","src":"14443:23:1"}],"id":1471,"name":"BinaryOperation","src":"14421:45:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1452,"type":"bool","value":"dealerHasBJ"},"id":1472,"name":"Identifier","src":"14471:11:1"}],"id":1473,"name":"UnaryOperation","src":"14470:12:1"}],"id":1474,"name":"BinaryOperation","src":"14421:61:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"uint256","value":"payout"},"id":1475,"name":"Identifier","src":"14498:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":2007,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1476,"name":"Identifier","src":"14507:8:1"}],"id":1477,"name":"MemberAccess","src":"14507:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"mul","referencedDeclaration":1990,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1478,"name":"Identifier","src":"14520:8:1"}],"id":1479,"name":"MemberAccess","src":"14520:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1480,"name":"Identifier","src":"14533:6:1"}],"id":1481,"name":"MemberAccess","src":"14533:10:1"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1482,"name":"Literal","src":"14545:1:1"}],"id":1483,"name":"FunctionCall","src":"14520:27:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1484,"name":"Literal","src":"14549:1:1"}],"id":1485,"name":"FunctionCall","src":"14507:44:1"}],"id":1486,"name":"Assignment","src":"14498:53:1"}],"id":1487,"name":"ExpressionStatement","src":"14498:53:1"}],"id":1488,"name":"Block","src":"14484:100:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1489,"name":"Identifier","src":"14594:6:1"}],"id":1490,"name":"MemberAccess","src":"14594:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1458,"type":"struct Blackjack.Player memory","value":"dealer"},"id":1491,"name":"Identifier","src":"14609:6:1"}],"id":1492,"name":"MemberAccess","src":"14609:12:1"}],"id":1493,"name":"BinaryOperation","src":"14594:27:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1458,"type":"struct Blackjack.Player memory","value":"dealer"},"id":1494,"name":"Identifier","src":"14625:6:1"}],"id":1495,"name":"MemberAccess","src":"14625:12:1"},{"attributes":{"argumentTypes":null,"hexvalue":"3231","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21","value":"21"},"id":1496,"name":"Literal","src":"14641:2:1"}],"id":1497,"name":"BinaryOperation","src":"14625:18:1"}],"id":1498,"name":"BinaryOperation","src":"14594:49:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"uint256","value":"payout"},"id":1499,"name":"Identifier","src":"14659:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"mul","referencedDeclaration":1990,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1500,"name":"Identifier","src":"14668:8:1"}],"id":1501,"name":"MemberAccess","src":"14668:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1502,"name":"Identifier","src":"14681:8:1"}],"id":1503,"name":"MemberAccess","src":"14681:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1504,"name":"Identifier","src":"14694:6:1"}],"id":1505,"name":"MemberAccess","src":"14694:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1506,"name":"Identifier","src":"14706:6:1"}],"id":1507,"name":"MemberAccess","src":"14706:20:1"}],"id":1508,"name":"FunctionCall","src":"14681:46:1"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1509,"name":"Literal","src":"14729:1:1"}],"id":1510,"name":"FunctionCall","src":"14668:63:1"}],"id":1511,"name":"Assignment","src":"14659:72:1"}],"id":1512,"name":"ExpressionStatement","src":"14659:72:1"}],"id":1513,"name":"Block","src":"14645:97:1"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1514,"name":"Identifier","src":"14752:6:1"}],"id":1515,"name":"MemberAccess","src":"14752:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1458,"type":"struct Blackjack.Player memory","value":"dealer"},"id":1516,"name":"Identifier","src":"14768:6:1"}],"id":1517,"name":"MemberAccess","src":"14768:12:1"}],"id":1518,"name":"BinaryOperation","src":"14752:28:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"uint256","value":"payout"},"id":1519,"name":"Identifier","src":"14796:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":1910,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2077,"type":"type(library SafeMath)","value":"SafeMath"},"id":1520,"name":"Identifier","src":"14805:8:1"}],"id":1521,"name":"MemberAccess","src":"14805:12:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1522,"name":"Identifier","src":"14818:6:1"}],"id":1523,"name":"MemberAccess","src":"14818:10:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1450,"type":"struct Blackjack.Player storage pointer","value":"player"},"id":1524,"name":"Identifier","src":"14830:6:1"}],"id":1525,"name":"MemberAccess","src":"14830:20:1"}],"id":1526,"name":"FunctionCall","src":"14805:46:1"}],"id":1527,"name":"Assignment","src":"14796:55:1"}],"id":1528,"name":"ExpressionStatement","src":"14796:55:1"}],"id":1529,"name":"Block","src":"14782:80:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"uint256","value":"payout"},"id":1530,"name":"Identifier","src":"14882:6:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1531,"name":"Literal","src":"14891:1:1"}],"id":1532,"name":"Assignment","src":"14882:10:1"}],"id":1533,"name":"ExpressionStatement","src":"14882:10:1"}],"id":1534,"name":"Block","src":"14868:35:1"}],"id":1535,"name":"IfStatement","src":"14748:155:1"}],"id":1536,"name":"IfStatement","src":"14590:313:1"}],"id":1537,"name":"IfStatement","src":"14417:486:1"}],"id":1538,"name":"Block","src":"14362:547:1"}],"id":1539,"name":"FunctionDefinition","src":"14239:670:1"},{"attributes":{"functionSelector":"76957756","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"getDealerState","overrides":null,"scope":1693,"stateMutability":"view","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"Getters\\n @notice Returns the dealer\'s opened hand\\n @return hand The dealer\'s hand"},"id":1540,"name":"StructuredDocumentation","src":"14915:99:1"},{"attributes":{"parameters":[null]},"children":[],"id":1541,"name":"ParameterList","src":"15042:2:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"hand","overrides":null,"scope":1568,"stateVariable":false,"storageLocation":"memory","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1542,"name":"ElementaryTypeName","src":"15066:7:1"}],"id":1543,"name":"ArrayTypeName","src":"15066:9:1"}],"id":1544,"name":"VariableDeclaration","src":"15066:21:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"score","overrides":null,"scope":1568,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1545,"name":"ElementaryTypeName","src":"15089:7:1"}],"id":1546,"name":"VariableDeclaration","src":"15089:13:1"}],"id":1547,"name":"ParameterList","src":"15065:38:1"},{"children":[{"attributes":{"assignments":[1549]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1567,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1548,"name":"UserDefinedTypeName","src":"15114:4:1"}],"id":1549,"name":"VariableDeclaration","src":"15114:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":1550,"name":"Identifier","src":"15134:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1551,"name":"Identifier","src":"15140:3:1"}],"id":1552,"name":"MemberAccess","src":"15140:10:1"}],"id":1553,"name":"IndexAccess","src":"15134:17:1"}],"id":1554,"name":"VariableDeclarationStatement","src":"15114:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1544,"type":"uint256[] memory","value":"hand"},"id":1555,"name":"Identifier","src":"15161:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1556,"name":"Identifier","src":"15168:4:1"}],"id":1557,"name":"MemberAccess","src":"15168:11:1"}],"id":1558,"name":"MemberAccess","src":"15168:16:1"}],"id":1559,"name":"Assignment","src":"15161:23:1"}],"id":1560,"name":"ExpressionStatement","src":"15161:23:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1546,"type":"uint256","value":"score"},"id":1561,"name":"Identifier","src":"15194:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"dealer","referencedDeclaration":28,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1562,"name":"Identifier","src":"15202:4:1"}],"id":1563,"name":"MemberAccess","src":"15202:11:1"}],"id":1564,"name":"MemberAccess","src":"15202:17:1"}],"id":1565,"name":"Assignment","src":"15194:25:1"}],"id":1566,"name":"ExpressionStatement","src":"15194:25:1"}],"id":1567,"name":"Block","src":"15104:122:1"}],"id":1568,"name":"FunctionDefinition","src":"15019:207:1"},{"attributes":{"functionSelector":"6c4941f5","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"getPlayerState","overrides":null,"scope":1693,"stateMutability":"view","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Returns all player\'s hands\\n @return hand The player\'s primary hand\\n @return splitHand The player\'s split hand, if any\\n @return handScore Evaluated score for hand\\n @return splitHandScore Evaluated score for split hand\\n @return bet Original bet at start of hand"},"id":1569,"name":"StructuredDocumentation","src":"15232:306:1"},{"attributes":{"parameters":[null]},"children":[],"id":1570,"name":"ParameterList","src":"15566:2:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"hand","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"memory","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1571,"name":"ElementaryTypeName","src":"15616:7:1"}],"id":1572,"name":"ArrayTypeName","src":"15616:9:1"}],"id":1573,"name":"VariableDeclaration","src":"15616:21:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"splitHand","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"memory","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1574,"name":"ElementaryTypeName","src":"15656:7:1"}],"id":1575,"name":"ArrayTypeName","src":"15656:9:1"}],"id":1576,"name":"VariableDeclaration","src":"15656:26:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"handScore","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1577,"name":"ElementaryTypeName","src":"15701:7:1"}],"id":1578,"name":"VariableDeclaration","src":"15701:17:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"splitHandScore","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1579,"name":"ElementaryTypeName","src":"15737:7:1"}],"id":1580,"name":"VariableDeclaration","src":"15737:22:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"bet","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1581,"name":"ElementaryTypeName","src":"15778:7:1"}],"id":1582,"name":"VariableDeclaration","src":"15778:11:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"splitBet","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1583,"name":"ElementaryTypeName","src":"15808:7:1"}],"id":1584,"name":"VariableDeclaration","src":"15808:16:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"doubleDownBet","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1585,"name":"ElementaryTypeName","src":"15843:7:1"}],"id":1586,"name":"VariableDeclaration","src":"15843:21:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"splitDoubleDownBet","overrides":null,"scope":1646,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1587,"name":"ElementaryTypeName","src":"15883:7:1"}],"id":1588,"name":"VariableDeclaration","src":"15883:26:1"}],"id":1589,"name":"ParameterList","src":"15597:331:1"},{"children":[{"attributes":{"assignments":[1591]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1645,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1590,"name":"UserDefinedTypeName","src":"15943:4:1"}],"id":1591,"name":"VariableDeclaration","src":"15943:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":1592,"name":"Identifier","src":"15963:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1593,"name":"Identifier","src":"15969:3:1"}],"id":1594,"name":"MemberAccess","src":"15969:10:1"}],"id":1595,"name":"IndexAccess","src":"15963:17:1"}],"id":1596,"name":"VariableDeclarationStatement","src":"15943:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"uint256[] memory","value":"hand"},"id":1597,"name":"Identifier","src":"15990:4:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1598,"name":"Identifier","src":"15997:4:1"}],"id":1599,"name":"MemberAccess","src":"15997:11:1"}],"id":1600,"name":"MemberAccess","src":"15997:16:1"}],"id":1601,"name":"Assignment","src":"15990:23:1"}],"id":1602,"name":"ExpressionStatement","src":"15990:23:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1576,"type":"uint256[] memory","value":"splitHand"},"id":1603,"name":"Identifier","src":"16023:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"hand","referencedDeclaration":44,"type":"uint256[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1604,"name":"Identifier","src":"16035:4:1"}],"id":1605,"name":"MemberAccess","src":"16035:16:1"}],"id":1606,"name":"MemberAccess","src":"16035:21:1"}],"id":1607,"name":"Assignment","src":"16023:33:1"}],"id":1608,"name":"ExpressionStatement","src":"16023:33:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"handScore"},"id":1609,"name":"Identifier","src":"16066:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1610,"name":"Identifier","src":"16078:4:1"}],"id":1611,"name":"MemberAccess","src":"16078:11:1"}],"id":1612,"name":"MemberAccess","src":"16078:17:1"}],"id":1613,"name":"Assignment","src":"16066:29:1"}],"id":1614,"name":"ExpressionStatement","src":"16066:29:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1580,"type":"uint256","value":"splitHandScore"},"id":1615,"name":"Identifier","src":"16105:14:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"score","referencedDeclaration":41,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1616,"name":"Identifier","src":"16122:4:1"}],"id":1617,"name":"MemberAccess","src":"16122:16:1"}],"id":1618,"name":"MemberAccess","src":"16122:22:1"}],"id":1619,"name":"Assignment","src":"16105:39:1"}],"id":1620,"name":"ExpressionStatement","src":"16105:39:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"uint256","value":"bet"},"id":1621,"name":"Identifier","src":"16154:3:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1622,"name":"Identifier","src":"16160:4:1"}],"id":1623,"name":"MemberAccess","src":"16160:11:1"}],"id":1624,"name":"MemberAccess","src":"16160:15:1"}],"id":1625,"name":"Assignment","src":"16154:21:1"}],"id":1626,"name":"ExpressionStatement","src":"16154:21:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1584,"type":"uint256","value":"splitBet"},"id":1627,"name":"Identifier","src":"16185:8:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bet","referencedDeclaration":35,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1628,"name":"Identifier","src":"16196:4:1"}],"id":1629,"name":"MemberAccess","src":"16196:16:1"}],"id":1630,"name":"MemberAccess","src":"16196:20:1"}],"id":1631,"name":"Assignment","src":"16185:31:1"}],"id":1632,"name":"ExpressionStatement","src":"16185:31:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1586,"type":"uint256","value":"doubleDownBet"},"id":1633,"name":"Identifier","src":"16226:13:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"player","referencedDeclaration":30,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1634,"name":"Identifier","src":"16242:4:1"}],"id":1635,"name":"MemberAccess","src":"16242:11:1"}],"id":1636,"name":"MemberAccess","src":"16242:25:1"}],"id":1637,"name":"Assignment","src":"16226:41:1"}],"id":1638,"name":"ExpressionStatement","src":"16226:41:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1588,"type":"uint256","value":"splitDoubleDownBet"},"id":1639,"name":"Identifier","src":"16277:18:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"doubleDownBet","referencedDeclaration":37,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"splitPlayer","referencedDeclaration":32,"type":"struct Blackjack.Player storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1591,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1640,"name":"Identifier","src":"16298:4:1"}],"id":1641,"name":"MemberAccess","src":"16298:16:1"}],"id":1642,"name":"MemberAccess","src":"16298:30:1"}],"id":1643,"name":"Assignment","src":"16277:51:1"}],"id":1644,"name":"ExpressionStatement","src":"16277:51:1"}],"id":1645,"name":"Block","src":"15933:402:1"}],"id":1646,"name":"FunctionDefinition","src":"15543:792:1"},{"attributes":{"functionSelector":"b7d0628b","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"getGameState","overrides":null,"scope":1693,"stateMutability":"view","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@notice Returns selected elements from a game\\n @dev Also add bet (and original) to return\\n @return gameId ID for the current Blackjack game\\n @return startTime Time the current Blackjack game began\\n @return gameMaxBet Max bet allowed to be placed for new game\\n @return round Number of round of Blackjack game played\\n @return stage Stage of the Blackjack game"},"id":1647,"name":"StructuredDocumentation","src":"16341:403:1"},{"attributes":{"parameters":[null]},"children":[],"id":1648,"name":"ParameterList","src":"16770:2:1"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"gameId","overrides":null,"scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1649,"name":"ElementaryTypeName","src":"16820:7:1"}],"id":1650,"name":"VariableDeclaration","src":"16820:14:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"startTime","overrides":null,"scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":1651,"name":"ElementaryTypeName","src":"16853:6:1"}],"id":1652,"name":"VariableDeclaration","src":"16853:16:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"gameMaxBet","overrides":null,"scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1653,"name":"ElementaryTypeName","src":"16888:7:1"}],"id":1654,"name":"VariableDeclaration","src":"16888:18:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"round","overrides":null,"scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":1655,"name":"ElementaryTypeName","src":"16925:6:1"}],"id":1656,"name":"VariableDeclaration","src":"16925:12:1"},{"attributes":{"constant":false,"mutability":"mutable","name":"stage","overrides":null,"scope":1692,"stateVariable":false,"storageLocation":"default","type":"enum Blackjack.Stage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Stage","referencedDeclaration":18,"type":"enum Blackjack.Stage"},"id":1657,"name":"UserDefinedTypeName","src":"16956:5:1"}],"id":1658,"name":"VariableDeclaration","src":"16956:11:1"}],"id":1659,"name":"ParameterList","src":"16801:185:1"},{"children":[{"attributes":{"assignments":[1661]},"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"game","overrides":null,"scope":1691,"stateVariable":false,"storageLocation":"storage","type":"struct Blackjack.Game","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Game","referencedDeclaration":33,"type":"struct Blackjack.Game"},"id":1660,"name":"UserDefinedTypeName","src":"17001:4:1"}],"id":1661,"name":"VariableDeclaration","src":"17001:17:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Blackjack.Game storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"mapping(address => struct Blackjack.Game storage ref)","value":"games"},"id":1662,"name":"Identifier","src":"17021:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":-15,"type":"msg","value":"msg"},"id":1663,"name":"Identifier","src":"17027:3:1"}],"id":1664,"name":"MemberAccess","src":"17027:10:1"}],"id":1665,"name":"IndexAccess","src":"17021:17:1"}],"id":1666,"name":"VariableDeclarationStatement","src":"17001:37:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1650,"type":"uint256","value":"gameId"},"id":1667,"name":"Identifier","src":"17048:6:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"id","referencedDeclaration":20,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1668,"name":"Identifier","src":"17057:4:1"}],"id":1669,"name":"MemberAccess","src":"17057:7:1"}],"id":1670,"name":"Assignment","src":"17048:16:1"}],"id":1671,"name":"ExpressionStatement","src":"17048:16:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1652,"type":"uint64","value":"startTime"},"id":1672,"name":"Identifier","src":"17074:9:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"startTime","referencedDeclaration":22,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1673,"name":"Identifier","src":"17086:4:1"}],"id":1674,"name":"MemberAccess","src":"17086:14:1"}],"id":1675,"name":"Assignment","src":"17074:26:1"}],"id":1676,"name":"ExpressionStatement","src":"17074:26:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1654,"type":"uint256","value":"gameMaxBet"},"id":1677,"name":"Identifier","src":"17110:10:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"maxBet"},"id":1678,"name":"Identifier","src":"17123:6:1"}],"id":1679,"name":"Assignment","src":"17110:19:1"}],"id":1680,"name":"ExpressionStatement","src":"17110:19:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1656,"type":"uint64","value":"round"},"id":1681,"name":"Identifier","src":"17139:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"round","referencedDeclaration":24,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1682,"name":"Identifier","src":"17147:4:1"}],"id":1683,"name":"MemberAccess","src":"17147:10:1"}],"id":1684,"name":"Assignment","src":"17139:18:1"}],"id":1685,"name":"ExpressionStatement","src":"17139:18:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1658,"type":"enum Blackjack.Stage","value":"stage"},"id":1686,"name":"Identifier","src":"17167:5:1"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":26,"type":"enum Blackjack.Stage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"struct Blackjack.Game storage pointer","value":"game"},"id":1687,"name":"Identifier","src":"17175:4:1"}],"id":1688,"name":"MemberAccess","src":"17175:10:1"}],"id":1689,"name":"Assignment","src":"17167:18:1"}],"id":1690,"name":"ExpressionStatement","src":"17167:18:1"}],"id":1691,"name":"Block","src":"16991:201:1"}],"id":1692,"name":"FunctionDefinition","src":"16749:443:1"}],"id":1693,"name":"ContractDefinition","src":"508:16686:1"}],"id":1694,"name":"SourceUnit","src":"45:17150:1"},"compiler":{"name":"solc","version":"0.6.12+commit.27d51765.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.13","updatedAt":"2023-04-08T05:46:14.193Z","devdoc":{"author":"Clark Henry","events":{"StageChanged(uint256,uint64,uint8)":{"details":"Events"}},"kind":"dev","methods":{"__callback(bytes32,string)":{"details":"The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings."},"constructor":{"details":"Functionsseed should not be based on timestamp. This is a security risk and placeholder for now"},"doubleDown()":{"details":"is this vulnerable to OOG leaking drawn card info?[Module 9, Lesson 3] Preventing integer overflow with SafeMath"},"getDealerState()":{"returns":{"hand":"The dealer\'s hand"}},"getGameState()":{"details":"Also add bet (and original) to return","returns":{"gameId":"ID for the current Blackjack game","gameMaxBet":"Max bet allowed to be placed for new game","round":"Number of round of Blackjack game played","stage":"Stage of the Blackjack game","startTime":"Time the current Blackjack game began"}},"getPlayerState()":{"returns":{"bet":"Original bet at start of hand","hand":"The player\'s primary hand","handScore":"Evaluated score for hand","splitHand":"The player\'s split hand, if any","splitHandScore":"Evaluated score for split hand"}},"hit()":{"details":"is this vulnerable to OOG leaking drawn card info?"},"kill()":{"details":"[Module 10, Lesson 1] Action restriction on critical function[Module 10, Lesson 1] Mortality[Library used] Ownable library from OpenZeppelin is imported and used here."},"newRound()":{"details":"[Module 10, Lesson 1] Circuit breakers implemented hereseed should not be based on timestamp. This is a security risk and placeholder for nowPlan to split this into multiple functions such that placing bet is atomic before proceeding"},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"split()":{"details":"not working correctly on last check - the require for bet size was reverting"},"stand()":{"details":"is this vulnerable to gas limit leaking drawn card info?"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"NUMBER_OF_DECKS":{"details":"State variablesIncludes some circuit breakersUpdate maxBet to be Kelly optimal"}},"title":"A blackjack game","version":1},"userdoc":{"kind":"user","methods":{"doubleDown()":{"notice":"Double down on first two cards, taking one additional card and standing, with an opportunity to double original bet."},"getDealerState()":{"notice":"GettersReturns the dealer\'s opened hand"},"getGameState()":{"notice":"Returns selected elements from a game"},"getPlayerState()":{"notice":"Returns all player\'s hands"},"hit()":{"notice":"Hit, taking one additional card on the current hand."},"newRound()":{"notice":"Start a new round of Blackjack with the transferred value as the original bet."},"split()":{"notice":"Split first two cards into two hands, drawing one additional card for each. An equivalent bet value is required."},"stand()":{"notice":"Standing, taking no more additional cards and concluding the current hand."}},"notice":"This contract has known security risks and should not be deployed in production","version":1}}')}},[[11,1,2]]]);
//# sourceMappingURL=main.63741d0b.chunk.js.map