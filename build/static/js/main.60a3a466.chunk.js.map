{"version":3,"sources":["getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getWeb3","window","addEventListener","_asyncToGenerator","_callee2","web3","_web","provider","_web2","_context2","ethereum","Web3","enable","eth","net","getId","_ref2","_callee","chainId","_context","request","params","_x","apply","arguments","t0","console","log","providers","HttpProvider","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","componentDidMount","playerAccount","networkId","gameNetwork","gameInstance","responseGame","currentProvider","selectedAddress","BlackjackContract","networks","Contract","abi","address","methods","getGameState","setState","game","maxBet","gameMaxBet","alert","newRound","_this$state","responseDealer","responsePlayer","send","from","betSize","gas","getDealerState","getPlayerState","stage","dealerHand","hand","playerHand","splitHand","dealerScore","score","handScore","splitHandScore","bet","splitBet","doubleDownBet","splitDoubleDownBet","split","_callee3","_this$state2","_context3","doubleDown","_callee4","_this$state3","_context4","hit","_callee5","_this$state4","_context5","stand","_callee6","_this$state5","_context6","onChange","bind","_assertThisInitialized","_createClass","e","target","test","this","splitButton","rankStrings","rankValues","suitStrings","String","fromCharCode","React","createElement","onClick","splitPlayerScore","splitPlayerBet","splitPlayerCards","map","card","align","border","playSplitHand","splitHandStatus","parseInt","doubleDownButton","splitDoubleDownButton","standButton","splitStandButton","hitButton","splitHitButton","canDoubleDown","playerScore","playerBet","dealerCards","playerCards","playHand","handStatus","dealerStatus","className","style","height","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","concat","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.60a3a466.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          \n          await web3.eth.net.getId().then(async (chainId) => {\n            if (chainId !== 5) {\n              await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: 5 }], \n              });\n            }\n          });\n\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"https://goerli.infura.io/v3/\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","import React, { Component } from \"react\";\nimport BlackjackContract from \"./Blackjack.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n    constructor(){\n        super();\n        this.state = { betSize: '', web3: null, playerAccount: null, game: null , dealerHand: [], playerHand: [], splitHand: []};\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onChange(e){\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({betSize: e.target.value})\n        }\n    }\n\n    componentDidMount = async () => {\n        try {\n            // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n\n            var playerAccount = web3.currentProvider.selectedAddress;\n\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const gameNetwork = BlackjackContract.networks[networkId];\n            const gameInstance = new web3.eth.Contract(\n                BlackjackContract.abi,\n                gameNetwork && gameNetwork.address,\n            );\n            // Set web3, accounts, and contract to the state, and then proceed with an\n            // example of interacting with the contract's methods.\n            const responseGame = await gameInstance.methods.getGameState().call();\n            this.setState({ web3, playerAccount, game: gameInstance, maxBet: responseGame.gameMaxBet });\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n    newRound = async () => {\n        const { playerAccount , game } = this.state;\n\n        await game.methods.newRound().send({ from: playerAccount, value: this.state.betSize, gas: 450000 });\n\n        const responseDealer = await game.methods.getDealerState().call();\n        const responsePlayer = await game.methods.getPlayerState().call();\n        const responseGame = await game.methods.getGameState().call();\n\n        this.setState({\n            stage: responseGame.stage,\n            maxBet: responseGame.gameMaxBet,\n            dealerHand: responseDealer.hand,\n            playerHand: responsePlayer.hand,\n            splitHand: responsePlayer.splitHand,\n            dealerScore: responseDealer.score,\n            handScore: responsePlayer.handScore,\n            splitHandScore: responsePlayer.splitHandScore,\n            bet: responsePlayer.bet,\n            splitBet: responsePlayer.splitBet,\n            doubleDownBet: responsePlayer.doubleDownBet,\n            splitDoubleDownBet: responsePlayer.splitDoubleDownBet\n        });\n    };\n\n    split = async () => {\n        const { playerAccount , game } = this.state;\n\n        await game.methods.split().send({ from: playerAccount, value: this.state.betSize, gas: 450000 });\n\n        const responseDealer = await game.methods.getDealerState().call();\n        const responsePlayer = await game.methods.getPlayerState().call();\n        const responseGame = await game.methods.getGameState().call();\n\n        this.setState({\n            stage: responseGame.stage,\n            maxBet: responseGame.gameMaxBet,\n            dealerHand: responseDealer.hand,\n            playerHand: responsePlayer.hand,\n            splitHand: responsePlayer.splitHand,\n            dealerScore: responseDealer.score,\n            handScore: responsePlayer.handScore,\n            splitHandScore: responsePlayer.splitHandScore,\n            bet: responsePlayer.bet,\n            splitBet: responsePlayer.splitBet,\n            doubleDownBet: responsePlayer.doubleDownBet,\n            splitDoubleDownBet: responsePlayer.splitDoubleDownBet\n        });\n    };\n\n    doubleDown = async () => {\n        const { playerAccount , game } = this.state;\n\n        await game.methods.doubleDown().send({ from: playerAccount, value: this.state.betSize, gas: 450000 });\n\n        const responseDealer = await game.methods.getDealerState().call();\n        const responsePlayer = await game.methods.getPlayerState().call();\n        const responseGame = await game.methods.getGameState().call();\n\n        this.setState({\n            stage: responseGame.stage,\n            maxBet: responseGame.gameMaxBet,\n            dealerHand: responseDealer.hand,\n            playerHand: responsePlayer.hand,\n            splitHand: responsePlayer.splitHand,\n            dealerScore: responseDealer.score,\n            handScore: responsePlayer.handScore,\n            splitHandScore: responsePlayer.splitHandScore,\n            bet: responsePlayer.bet,\n            splitBet: responsePlayer.splitBet,\n            doubleDownBet: responsePlayer.doubleDownBet,\n            splitDoubleDownBet: responsePlayer.splitDoubleDownBet\n        });\n    };\n\n    hit = async () => {\n        const { playerAccount , game } = this.state;\n\n        await game.methods.hit().send({ from: playerAccount, gas: 450000 });\n\n        const responseDealer = await game.methods.getDealerState().call();\n        const responsePlayer = await game.methods.getPlayerState().call();\n        const responseGame = await game.methods.getGameState().call();\n\n        this.setState({\n            stage: responseGame.stage,\n            maxBet: responseGame.gameMaxBet,\n            dealerHand: responseDealer.hand,\n            playerHand: responsePlayer.hand,\n            splitHand: responsePlayer.splitHand,\n            dealerScore: responseDealer.score,\n            handScore: responsePlayer.handScore,\n            splitHandScore: responsePlayer.splitHandScore,\n            bet: responsePlayer.bet,\n            splitBet: responsePlayer.splitBet,\n            doubleDownBet: responsePlayer.doubleDownBet,\n            splitDoubleDownBet: responsePlayer.splitDoubleDownBet\n        });\n\n    };\n\n    stand = async () => {\n        const { playerAccount , game } = this.state;\n\n        await game.methods.stand().send({ from: playerAccount, gas: 450000 });\n\n        const responseDealer = await game.methods.getDealerState().call();\n        const responsePlayer = await game.methods.getPlayerState().call();\n        const responseGame = await game.methods.getGameState().call();\n\n        this.setState({\n            stage: responseGame.stage,\n            maxBet: responseGame.gameMaxBet,\n            dealerHand: responseDealer.hand,\n            playerHand: responsePlayer.hand,\n            splitHand: responsePlayer.splitHand,\n            dealerScore: responseDealer.score,\n            handScore: responsePlayer.handScore,\n            splitHandScore: responsePlayer.splitHandScore,\n            bet: responsePlayer.bet,\n            splitBet: responsePlayer.splitBet,\n            doubleDownBet: responsePlayer.doubleDownBet,\n            splitDoubleDownBet: responsePlayer.splitDoubleDownBet\n        });\n\n    };\n\n    render() {\n        const rankStrings = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"J\", \"Q\", \"K\"]\n        const rankValues = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]\n        const suitStrings = [String.fromCharCode(9827), String.fromCharCode(9830), String.fromCharCode(9829), String.fromCharCode(9824)]\n\n        const canSplit = this.state.playerHand.length === 2 &&\n              this.state.splitHand.length === 0 &&\n              (rankValues[this.state.playerHand[0] % 13]) === (rankValues[this.state.playerHand[1] % 13]);\n\n        let splitButton;\n        if (canSplit) {\n            splitButton = <button onClick={this.split.bind(this)}>Split</button>;\n        }\n\n        const splitPlayerCards = this.state.splitHand.map(function(card,i){\n            return <td align=\"center\" border=\"20px\" key={i}> {rankStrings[card % 13]}{suitStrings[card % 4]} </td>;\n        });\n\n        let splitPlayerScore;\n        let splitPlayerBet;\n        const playSplitHand = this.state.splitHand.length > 0;\n        if (this.state.splitHandScore > 21) {var splitHandStatus = \" - Busted!\";}\n        if (playSplitHand) {\n            splitPlayerScore = <td><i>Split Hand Score: {this.state.splitHandScore}<b>{splitHandStatus}</b>&nbsp;&nbsp;&nbsp;&nbsp;</i></td>;\n            splitPlayerBet = <td><i>Bet: {parseInt(this.state.splitBet) + parseInt(this.state.splitDoubleDownBet)} wei&nbsp;&nbsp;&nbsp;&nbsp;</i></td>;\n        }\n\n        const canDoubleDown = ((this.state.playerHand.length === 2) || (this.state.splitHand.length === 2));\n        let doubleDownButton;\n        if (canDoubleDown && this.state.stage === \"1\") {\n            doubleDownButton = <button onClick={this.doubleDown.bind(this)}>Double Down</button>;\n        }\n\n        let splitDoubleDownButton;\n        if (canDoubleDown && this.state.stage === \"2\") {\n            splitDoubleDownButton = <button onClick={this.doubleDown.bind(this)}>Double Down</button>;\n        }\n\n        let standButton;\n        if (this.state.stage === \"1\") {\n            standButton = <button onClick={this.stand.bind(this)}>Stand</button>;\n        }\n\n        let splitStandButton;\n        if (this.state.stage === \"2\") {\n            splitStandButton = <button onClick={this.stand.bind(this)}>Stand</button>;\n        }\n\n        let hitButton;\n        if (this.state.stage === \"1\") {\n            hitButton = <button onClick={this.hit.bind(this)}>Hit</button>;\n        }\n\n        let splitHitButton;\n        if (this.state.stage === \"2\") {\n            splitHitButton = <button onClick={this.hit.bind(this)}>Hit</button>;\n        }\n\n        if (!this.state.web3) {\n            return <div>Loading Web3, accounts, and contract...</div>;\n        }\n\n        const dealerCards = this.state.dealerHand.map(function(card,i){\n            return <td align=\"center\" border=\"20px\" key={i}> {rankStrings[card % 13]}{suitStrings[card % 4]} </td>;\n        });\n\n        const playerCards = this.state.playerHand.map(function(card,i){\n            return <td align=\"center\" border=\"20px\" key={i}> {rankStrings[card % 13]}{suitStrings[card % 4]} </td>;\n        });\n\n        const playHand = this.state.playerHand.length > 0;\n        if (this.state.handScore > 21) {var handStatus = \" - Busted!\";}\n        if (this.state.dealerScore > 21) {var dealerStatus = \" - Busted!\";}\n        let dealerScore;\n        let playerScore;\n        let playerBet;\n        if (playHand) {\n            dealerScore = <td><i>Dealer Score: {this.state.dealerScore}<b>{dealerStatus}</b></i></td>;\n            playerScore = <td><i>Hand Score: {this.state.handScore}<b>{handStatus}</b>&nbsp;&nbsp;&nbsp;&nbsp;</i></td>;\n            playerBet = <td><i>Bet: {parseInt(this.state.bet) + parseInt(this.state.doubleDownBet)} wei&nbsp;&nbsp;&nbsp;&nbsp;</i></td>;\n        }\n\n        return (\n                <div className=\"App\">\n                <h1>Blackjack dApp</h1>\n\n                <h3>Dealer:</h3>\n\n                <table align=\"center\" style={{'font-size': \"24px\"}}><tbody><tr>{dealerCards}</tr></tbody></table>\n                <table align=\"center\"><tbody><tr>{dealerScore}</tr></tbody></table>\n\n                <br/><br/>\n\n                <h3>Your Cards:</h3>\n\n                <table align=\"center\" style={{'font-size': \"24px\"}}><tbody><tr>{playerCards}</tr></tbody></table>\n                <table align=\"center\"><tbody><tr>{playerScore}{playerBet}</tr></tbody></table>\n\n            {standButton}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {hitButton}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {doubleDownButton}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {splitButton}\n\n                <br/><br/>\n\n                <table align=\"center\" style={{'font-size': \"24px\"}}><tbody><tr>{splitPlayerCards}</tr></tbody></table>\n                <table align=\"center\"><tbody><tr>{splitPlayerScore}{splitPlayerBet}</tr></tbody></table>\n\n\n            {splitStandButton}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {splitHitButton}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {splitDoubleDownButton}\n\n                <br/><br/>\n\n            Place your bet: <input value={this.state.betSize} onChange={this.onChange}/> wei &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button onClick={this.newRound.bind(this)}>Deal</button>\n                <br/>\n                <div> Maximum bet: {this.state.maxBet} wei</div>\n                <br/>\n                <i>(connected account: {this.state.playerAccount})</i>\n\n                <p/><hr style={{height: 2}}/>\n\n                <p>Blackjack Pays 3:2 {String.fromCharCode(9827)} Dealer Stands on Soft 17 {String.fromCharCode(9829)} No Insurance {String.fromCharCode(9830)} Double After Split {String.fromCharCode(9824)} No Resplit</p>\n\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}